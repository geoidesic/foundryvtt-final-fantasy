{"version":3,"file":"index.js","sources":["../src/helpers/constants.js","../src/helpers/rolls/handlers/DefaultChatHandler.js","../src/helpers/rolls/handlers/EffectManager.js","../src/extensions/actor.js","../src/extensions/item.js","../src/extensions/active-effect.js","../src/models/ActiveEffectModel.js","../src/extensions/token.js","../src/extensions/combat.js","../src/extensions/combatant.js","../src/helpers/ColourContrast.js","../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/environment.js","../node_modules/svelte/src/runtime/internal/loop.js","../node_modules/svelte/src/runtime/internal/globals.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/style_manager.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/spread.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/object/index.js","../node_modules/svelte/src/runtime/store/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/reducer/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/fvtt/document/index.js","../src/helpers/util.js","../src/stores/index.js","../src/helpers/paths.js","../src/components/atoms/Tag.svelte","../src/components/molecules/chat/actionRoll/ChatTitle.svelte","../src/components/organisms/chat/EquipmentChat.svelte","../src/components/organisms/chat/RollChat.svelte","../src/helpers/canvas.js","../src/components/atoms/PortraitFrame/corner.svelte","../src/components/molecules/PortraitFrame.svelte","../src/components/organisms/item/type/action/Header.svelte","../src/components/atoms/meteor.svelte","../src/components/organisms/chat/ActionRollChat.svelte","../src/components/molecules/chat/attributeRoll/ChatTitle.svelte","../src/components/organisms/chat/AttributeRollChat.svelte","../src/components/organisms/chat/FFChat.svelte","../src/hooks/renderChatMessage.js","../src/hooks/renderCombatTracker.js","../src/hooks/updateCombatant.js","../src/helpers/Conditions.js","../src/extensions/token-hud.js","../src/hooks/canvasReady.js","../node_modules/svelte/src/runtime/easing/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/dom/style/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/cssVariables.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/browser/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/dom/observer/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/observer/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/style/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/interpolate/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/easing/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/a11y/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/AppShellContextInternal.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/i18n/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/writable-derived/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/gl-matrix/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/animate/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/position/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/TJSHeaderButton.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/TJSApplicationHeader.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/ResizableHandle.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/internal/dom/TJSFocusWrap.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/ApplicationShell.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/fvtt/settings/index.js","../src/config/gameSettings.js","../src/components/applications/WelcomeAppShell.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-app/ApplicationState.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-svelte/GetSvelteData.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/web-storage/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-reactive/SvelteReactive.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/applicationShellContract.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/isApplicationShell.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/loadSvelteConfig.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/TJSAppIndex.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/SvelteApplication.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/external/PopoutSupport.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/index.js","../src/components/applications/WelcomeApplication.js","../src/hooks/ready.js","../src/settings/index.js","../src/models/BaseModel.js","../src/models/actors/baseActor.js","../src/models/actors/NPC.js","../src/models/actors/PC.js","../src/models/items/BaseItem.js","../src/models/items/Action.js","../src/models/items/Equipment.js","../src/models/items/Job.js","../src/models/items/Trait.js","../src/config/models.js","../src/components/atoms/controls/DocSelect.svelte","../src/components/atoms/controls/DocInput.svelte","../src/components/tabs/activeEffect/Changes.svelte","../src/components/molecules/Tabs.svelte","../src/components/atoms/controls/DocCheckbox.svelte","../node_modules/@typhonjs-fvtt/standard/_dist/fvtt/index.js","../node_modules/@typhonjs-fvtt/standard/_dist/component/internal/FVTTConfigure.js","../node_modules/@typhonjs-fvtt/standard/_dist/component/fvtt/editor/common/secrets/RevealSecretButton.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/util/html/index.js","../node_modules/@typhonjs-fvtt/standard/_dist/component/fvtt/editor/common/secrets/createMountRevealSecretButtons.js","../node_modules/@typhonjs-fvtt/standard/_dist/component/fvtt/editor/prosemirror/PMImpl.js","../node_modules/@typhonjs-fvtt/standard/_dist/component/fvtt/editor/prosemirror/plugins/TJSKeyMaps.js","../node_modules/@typhonjs-fvtt/standard/_dist/component/fvtt/editor/prosemirror/plugins/TJSPasteUUID.js","../node_modules/@typhonjs-fvtt/standard/_dist/component/fvtt/editor/prosemirror/TJSProseMirror.svelte","../src/components/molecules/ProseMirror.svelte","../src/helpers/getPropertyCompat.js","../src/components/molecules/TagSelect.svelte","../src/components/tabs/activeEffect/Config.svelte","../src/components/tabs/activeEffect/Duration.svelte","../src/components/applications/FFActiveEffectShell.svelte","../src/components/applications/FFActiveEffectSheet.js","../src/filters/itemFilterQuery.js","../src/components/atoms/Badge.svelte","../src/components/tabs/actor/PC/Abilities.svelte","../src/components/atoms/actor/Attribute.svelte","../src/components/molecules/Attributes/AttributeCol.svelte","../src/components/molecules/Attributes/PrimaryAttributes.svelte","../src/components/molecules/Attributes/SecondaryAttributes.svelte","../src/components/molecules/Attributes/AttributeBlock.svelte","../src/components/molecules/TitleBlock.svelte","../src/components/organisms/actor/AttributeSection.svelte","../src/components/molecules/Points/HP.svelte","../src/components/molecules/Points/MP.svelte","../src/components/molecules/Points/BP.svelte","../src/components/organisms/actor/PointsSection.svelte","../src/components/organisms/actor/EffectsSection.svelte","../src/components/organisms/actor/Favourites.svelte","../src/components/tabs/actor/PC/Attributes.svelte","../src/components/tabs/actor/PC/Profile.svelte","../src/components/tabs/actor/PC/Inventory.svelte","../src/components/organisms/item/shared/EffectsTab.svelte","../src/components/applications/PCSheetShell.svelte","../src/documents/DocumentShell.svelte","../src/documents/DocumentSheet.js","../src/components/applications/PCSheet.js","../src/components/tabs/actor/NPC/Abilities.svelte","../src/components/molecules/Attributes/NPC/AttributeCol.svelte","../src/components/molecules/Attributes/NPC/PrimaryAttributes.svelte","../src/components/molecules/Attributes/NPC/SecondaryAttributes.svelte","../src/components/molecules/Attributes/NPC/AttributeBlock.svelte","../src/components/organisms/actor/NPC/AttributeSection.svelte","../src/components/organisms/actor/PointsSectionNPC.svelte","../src/components/organisms/actor/Portrait.svelte","../src/components/molecules/DescriptionBlockNPC.svelte","../src/components/tabs/actor/NPC/Attributes.svelte","../src/components/applications/NPCSheetShell.svelte","../src/components/applications/NPCSheet.js","../src/components/organisms/item/shared/DescriptionTab.svelte","../src/components/atoms/controls/ArraySelect.svelte","../src/components/molecules/Item/Duration.svelte","../src/components/organisms/item/type/action/tabs/Details.svelte","../src/helpers/FolderProcessor.js","../src/components/molecules/ItemBucket.svelte","../src/components/molecules/TagInput.svelte","../src/components/organisms/item/type/action/tabs/Links.svelte","../src/components/organisms/item/type/action/Tabs.svelte","../src/components/organisms/item/type/equipment/Header.svelte","../src/components/organisms/item/type/equipment/tabs/Details.svelte","../src/components/organisms/item/type/equipment/EquipmentTabs.svelte","../src/components/organisms/item/type/job/Header.svelte","../src/components/organisms/item/type/job/tabs/Details.svelte","../src/components/organisms/item/type/job/Tabs.svelte","../src/components/organisms/item/type/trait/Header.svelte","../src/components/organisms/item/type/trait/tabs/Details.svelte","../src/components/organisms/item/type/trait/Tabs.svelte","../src/components/organisms/item/type/effect/Header.svelte","../src/components/organisms/item/type/effect/tabs/Details.svelte","../src/components/organisms/item/type/effect/Tabs.svelte","../src/components/applications/ItemSheetShell.svelte","../src/components/applications/ItemSheet.js","../src/extensions/combat-tracker.js","../src/helpers/systemconfig.ts","../src/hooks/init.js","../src/hooks/index.js","../src/components/molecules/StarRating.svelte","../src/components/organisms/dialogs/ModifierDialog.svelte","../src/helpers/rolls/RollGuards.js","../src/helpers/rolls/RollCalc.js","../src/helpers/rolls/handlers/AttributeHandler.js","../src/helpers/rolls/handlers/GuardManager.js","../src/helpers/rolls/RollCalcActor.js","../src/index.js"],"sourcesContent":["export const SYSTEM_ID = 'foundryvtt-final-fantasy';\nexport const SYSTEM_CODE = 'FFXIV';\nexport const LOG_PREFIX = `${SYSTEM_CODE} |`;\nexport const LOG_PREFIX_COLOR = `%c[${SYSTEM_CODE}] |`;\nexport const ASSET_PATH = `systems/${SYSTEM_ID}/assets`;\nexport const LOG_STYLES = {\n  p: 'color: purple;',\n  g: 'color: green;',\n  r: 'color: red;',\n  o: 'color: orange;',\n  b: 'color: blue;',\n  y: 'color: yellow;',\n  c: 'color: cyan;',\n  m: 'color: magenta;',\n  gr: 'color: gray;',\n  br: 'color: brown;',\n  pi: 'color: pink;',\n  t: 'color: teal;'\n};\n\nexport const getDamageDiceRerollOptions = () => [\n  { value: 1, label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DamageDiceReroll.one\") },\n  { value: 2, label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DamageDiceReroll.two\") },\n  { value: 3, label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DamageDiceReroll.three\") },\n];\n\nexport const getDurationOptions = () => [\n  { value: 1, label: game.i18n.localize(\"FFXIV.one\") },\n  { value: 2, label: game.i18n.localize(\"FFXIV.two\") },\n  { value: 3, label: game.i18n.localize(\"FFXIV.three\") },\n  { value: 4, label: game.i18n.localize(\"FFXIV.four\") },\n];\n\nexport function getDurationTypeOptions() {\n  return [\n    { value: \"hasAmount\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DurationType.hasAmount\") },\n    { value: \"hasQualifier\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DurationType.hasQualifier\") },\n  ];\n}\n\nexport const getDurationQualifierOptions = () => [\n  { value: \"endOfThis\", label: game.i18n.localize(\"FFXIV.Types.Item.Duration.Options.endOfThis\") },\n  { value: \"endOfNext\", label: game.i18n.localize(\"FFXIV.Types.Item.Duration.Options.endOfNext\") },\n  { value: \"startOfNext\", label: game.i18n.localize(\"FFXIV.Types.Item.Duration.Options.startOfNext\") },\n  { value: \"untilDamage\", label: game.i18n.localize(\"FFXIV.Types.Item.Duration.Options.untilDamage\") },\n  { value: \"nextAbility\", label: game.i18n.localize(\"FFXIV.Types.Item.Duration.Options.nextAbility\") },\n];\n\nexport const getDurationUnits = () => [\n  { value: \"phase\", label: game.i18n.localize(\"FFXIV.Phase\") },\n  { value: \"turn\", label: game.i18n.localize(\"FFXIV.Turn\") },\n  { value: \"round\", label: game.i18n.localize(\"FFXIV.Round\") }\n];\nexport const getLimitationOptions = () => [\n  { value: 1, label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Limitation.once\") },\n  { value: 2, label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Limitation.twice\") },\n  { value: 3, label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Limitation.thrice\") },\n];\n\nexport const getLimitationUnits = () => [\n  { value: \"phase\", label: game.i18n.localize(\"FFXIV.Phase\") },\n  { value: \"turn\", label: game.i18n.localize(\"FFXIV.Turn\") }\n];\n\nexport const getTypeOptions = () => [\n  { value: \"primary\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Type.primary\") },\n  { value: \"secondary\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Type.secondary\") },\n  { value: \"reaction\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Type.reaction\") },\n  { value: \"limit\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Type.limit\") },\n  { value: \"combo\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Type.combo\") },\n];\n\nexport const getBaseEffectHealingTypeOptions = () => [\n  { value: \"self\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.BaseEffectHealingType.self\") },\n  { value: \"target\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.BaseEffectHealingType.target\") },\n];\n\nexport const getSizeOptions = () => [\n  { value: \"small\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Size.small\") },\n  { value: \"medium\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Size.medium\") },\n  { value: \"large\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Size.large\") },\n  { value: \"huge\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Size.huge\") },\n  { value: \"gargantuan\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Size.gargantuan\") }\n];\n\nexport const getRangeOptions = () => [\n  { value: \"1sq\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.1sq\") },\n  { value: \"5sq\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.5sq\") },\n  { value: \"10sq\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.10sq\") },\n  { value: \"3x3a\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.3x3a\") },\n  { value: \"3x3aa\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.3x3aa\") },\n  { value: \"5x5a\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.5x5a\") },\n  { value: \"5x5e\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.5x5e\") },\n  { value: \"5x5i\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Range.5x5i\") },\n];\n\nexport const getCROptions = () => [\n  { value: \"def\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.CR.def\") },\n  { value: \"mag\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.CR.mag\") },\n  // { value: \"vig\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.CR.vig\") },\n  // { value: \"spd\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.CR.spd\") },\n  { value: \"heal\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.CR.heal\") },\n  { value: \"other\", label: game.i18n.localize(\"FFXIV.Other\") },\n  { value: \"none\", label: game.i18n.localize(\"FFXIV.None\") },\n  // { value: \"special\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.CR.special\") },\n];\n\nexport const getTargetOptions = () => [\n  { value: \"self\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Target.self\") },\n  { value: \"single\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Target.single\") },\n  { value: \"enemy\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Target.enemy\") },\n  { value: \"all\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Target.all\") },\n  { value: \"allallies\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Target.allallies\") },\n  { value: \"ally\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Target.ally\") },\n];\n\nexport const getAspectedOptions = () => [\n  { value: \"earth\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Aspected.earth\") },\n  { value: \"lightning\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Aspected.lightning\") },\n  { value: \"wind\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Aspected.wind\") },\n  { value: \"ice\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Aspected.ice\") },\n  { value: \"fire\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Aspected.fire\") },\n];\n\nexport const getUsesUnitOptions = () => [\n  { value: \"turn\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.UsesUnit.turn\") },\n  { value: \"phase\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.UsesUnit.phase\") },\n  { value: \"round\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.UsesUnit.round\") },\n];\nexport const getTriggerOptions = () =>  [\n  { value: \"any\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.any\") },\n  { value: \"ability\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.ability\") },\n  { value: \"beforeresolve\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.beforeresolve\") },\n  { value: \"nearby\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.nearby\") },\n  { value: \"move\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.move\") },\n  { value: \"beforedamage\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.beforedamage\") },\n  { value: \"endturn\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.endturn\") },\n  { value: \"startturn\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.startturn\") },\n  { value: \"invoke\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.invoke\") },\n  { value: \"adjacentinvoke\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Trigger.adjacentinvoke\") },\n];\n\nexport const getHeavyshotOptions = () => [\n  { value: \"straignt\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Heavyshot.straignt\") },\n  { value: \"spread\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.Heavyshot.spread\") },\n];\n\nexport const getDirectHitOptions = () => [\n  { value: \"damage\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DirectHit.damage\") },\n  { value: \"markers\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DirectHit.markers\") },\n  { value: \"condition\", label: game.i18n.localize(\"FFXIV.Types.Item.Types.Options.DirectHit.condition\") },\n];\n\nexport const ACTIVE_EFFECT_MODES = {\n  CUSTOM: 0,\n  MULTIPLY: 1,\n  ADD: 2,\n  OVERRIDE: 3,\n  DOWNGRADE: 4,\n  UPGRADE: 5\n};\n\nexport const activeEffectModes = [\n  { value: ACTIVE_EFFECT_MODES.CUSTOM, label: \"custom\" },\n  { value: ACTIVE_EFFECT_MODES.MULTIPLY, label: \"multiply\" },\n  { value: ACTIVE_EFFECT_MODES.ADD, label: \"add\" },\n  { value: ACTIVE_EFFECT_MODES.OVERRIDE, label: \"override\" },\n  { value: ACTIVE_EFFECT_MODES.DOWNGRADE, label: \"downgrade\" },\n  { value: ACTIVE_EFFECT_MODES.UPGRADE, label: \"upgrade\" }\n];\n\n","import { SYSTEM_ID } from \"~/src/helpers/constants.js\";\n\n/**\n * Handles the default chat message for an item\n */\nexport default class DefaultChatHandler {\n  /**\n   * @param {Actor} actor - The actor this handler is for\n   */\n  constructor(actor) {\n    this.actor = actor;\n  }\n\n  /**\n   * @param {Item} item - The item to create a chat message for\n   */\n  handle(item) {\n    ChatMessage.create({\n      user: game.user.id,\n      speaker: game.settings.get(SYSTEM_ID, 'chatMessageSenderIsActorOwner')\n        ? ChatMessage.getSpeaker({ actor: this.actor })\n        : null,\n      flags: {\n        [SYSTEM_ID]: {\n          data: {\n            chatTemplate: 'RollChat',\n            actor: {\n              _id: this.actor._id,\n              name: this.actor.name,\n              img: this.actor.img\n            },\n            item: {\n              _id: item._id,\n              uuid: item.uuid,\n              name: item.name,\n              img: item.img,\n              type: item.type,\n              system: item.system\n            }\n          }\n        }\n      }\n    });\n  }\n}\n","import DefaultChatHandler  from \"~/src/helpers/rolls/handlers/DefaultChatHandler\";\n/**\n * Handles all effect-related operations\n */\nexport default class EffectManager {\n  /**\n   * @param {Actor} actor - The actor this handler is for\n   */\n  constructor(actor) {\n    this.actor = actor;\n    this.DefaultChatHandler = new DefaultChatHandler(actor);\n  }\n\n  /**\n   * Apply effects from a list to specified targets\n   * @protected\n   * @param {Item} sourceItem - The item granting the effects\n   * @param {Array} effectList - List of effect references to process\n   * @param {Array} targets - Array of targets to apply effects to\n   */\n  async _applyEffectsFromList(sourceItem, effectList, targets) {\n    if (!effectList?.length || !targets?.length) {\n      if (!effectList?.length) {\n        game.system.log.w(\"[EFFECT MANAGER] No effects to apply\");\n      }\n      if (!targets?.length) {\n        game.system.log.w(\"[EFFECT MANAGER] No targets to apply effects to\");\n      }\n      return;\n    }\n\n    game.system.log.o(\"[EFFECT MANAGER] Processing effects from:\", {\n      sourceItem: sourceItem?.name,\n      sourceItemUUID: sourceItem?.uuid,\n      actor: this.actor?.name,\n      effectList,\n      targets: targets.map(t => t.actor?.name)\n    });\n\n    for (const target of targets) {\n      const targetActor = target.actor;\n      if (!targetActor) continue;\n\n      try {\n        const effectData = await this._prepareEffectData(sourceItem, effectList, targetActor);\n        if (effectData.length) {\n          await targetActor.createEmbeddedDocuments('ActiveEffect', effectData);\n        }\n      } catch (error) {\n        game.system.log.e(\"Error applying effects to target\", error);\n        ui.notifications.error(game.i18n.format(\"FFXIV.Errors.EffectApplicationFailed\", { target: targetActor.name }));\n      }\n    }\n  }\n\n  /**\n   * Handle all effects for an action\n   * @override\n   * @param {Item} item - The item being used\n   * @param {Object} result - The result from the action handler\n   * @return {Promise<void>} Returns a promise that resolves when all effects are handled\n   */\n    async handleEffects(item, result) {\n\n    }\n\n  /**\n   * Prepare effect data from effect items\n   * @protected\n   * @param {Item} sourceItem - The item granting the effects\n   * @param {Array} effectList - List of effect references to process\n   * @param {Actor} targetActor - The actor to check against for existing effects\n   * @return {Promise<Array>} Array of prepared effect data\n   */\n  async _prepareEffectData(sourceItem, effectList, targetActor) {\n    // Get all effects from the grants list\n    const effectPromises = effectList.flatMap(async (grantRef) => {\n      const effectItem = await fromUuid(grantRef.uuid);\n      if (!effectItem) return [];\n\n      // Get all effects from the effect item\n      return effectItem.effects.map(effect => {\n        // Check if effect already exists\n        const existingEffect = targetActor.effects.find(e =>\n          e.name === effect.name &&\n          e.origin === sourceItem.uuid\n        );\n\n        // Skip if effect already exists\n        if (existingEffect) return null;\n\n        // Handle status effects\n        if (effect.statuses?.size) {\n          return this._handleStatusEffect(effect, targetActor);\n        }\n\n        // For non-status effects, prepare clean data\n        return this._prepareCleanEffectData(effect, effectItem, sourceItem);\n      });\n    });\n\n    // Wait for all effect data to be prepared and flatten the array\n    return (await Promise.all(effectPromises)).flat().filter(Boolean);\n  }\n\n  /**\n   * Handle status effect application\n   * @protected\n   * @param {ActiveEffect} effect - The effect to process\n   * @param {Actor} targetActor - The actor to apply the status to\n   * @return {null} Always returns null as statuses are handled directly\n   */\n  _handleStatusEffect(effect, targetActor) {\n    const statuses = Array.from(effect.statuses);\n    // Only toggle statuses that aren't already active\n    const statusesToToggle = statuses.filter(status => !targetActor.statuses.has(status));\n    if (statusesToToggle.length) {\n      targetActor.toggleStatusEffect(statusesToToggle[0]);\n    }\n    return null;\n  }\n\n  /**\n   * Prepare clean effect data for creation\n   * @protected\n   * @param {ActiveEffect} effect - The effect to clean\n   * @param {Item} effectItem - The item containing the effect\n   * @param {Item} sourceItem - The item granting the effect\n   * @return {Object} Clean effect data\n   */\n  _prepareCleanEffectData(effect, effectItem, sourceItem) {\n    game.system.log.o('[EFFECT MANAGER] Preparing clean effect data:', {\n      effectName: effect.name,\n      effectItemSystem: effectItem.system,\n      sourceItemSystem: sourceItem.system\n    });\n\n    // Get durations array from source item (the granting item) first, then fall back to effect item\n    const durations = sourceItem.system.durations || effectItem.system.durations || [];\n    // Use the first applicable duration\n    const duration = durations[0] || { type: 'none' };\n\n    // Prepare the duration data\n    const durationData = {\n      startTime: game.time.worldTime,\n      startRound: game.combat?.round ?? 0,\n      startTurn: game.combat?.turn ?? 0,\n      combat: game.combat?.id\n    };\n\n    // Add duration-specific data based on type\n    if (duration.type === 'hasAmount' && duration.amount) {\n      durationData.type = duration.units || 'rounds';\n      durationData[duration.units === 'turns' ? 'turns' : 'rounds'] = duration.amount;\n    } else if (duration.type === 'hasQualifier' && duration.qualifier) {\n      durationData.type = duration.qualifier;\n      if (duration.qualifier === 'nextAbility') {\n        durationData.requiresAbility = true;\n      } else if (duration.qualifier === 'untilDamage') {\n        durationData.requiresDamage = true;\n      }\n    }\n\n    game.system.log.o('[EFFECT MANAGER] Prepared duration data:', {\n      effectName: effect.name,\n      durationType: duration.type,\n      durationUnits: duration.units,\n      durationQualifier: duration.qualifier,\n      durationData\n    });\n\n    return {\n      name: effect.name,\n      img: effect.img,\n      changes: foundry.utils.deepClone(effect.changes),\n      duration: durationData,\n      disabled: false,\n      flags: foundry.utils.deepClone(effect.flags),\n      origin: sourceItem.uuid,\n    };\n  }\n\n  /**\n   * Handle enabler effects for an action\n   * @protected\n   */\n  async _handleEnablerEffects(item) {\n    if (!item.system.enables?.list?.length) return [];\n\n    const enabledEffects = [];\n    for (const enableRef of item.system.enables.list) {\n      const effects = await this._processEnablerRef(item, enableRef);\n      enabledEffects.push(...effects);\n    }\n\n    game.system.log.o('[ABILITY:ENABLER] Enabled effects:', enabledEffects);\n    return enabledEffects;\n  }\n\n  /**\n   * Process a single enabler reference\n   * @protected\n   * @param {Item} sourceItem - The item triggering the enabler\n   * @param {Object} enableRef - The reference to the item to enable\n   * @return {Promise<Array>} Array of enabled effect UUIDs\n   */\n  async _processEnablerRef(sourceItem, enableRef) {\n    \n  }\n\n  /**\n   * Find and validate compendium and actor items for an enabler reference\n   * @protected\n   * @param {Object} enableRef - The reference to the item to enable\n   * @return {Promise<Object>} Object containing compendium and actor items\n   */\n  async _findEnablerItems(enableRef) {\n    const compendiumItem = await fromUuid(enableRef.uuid);\n    if (!compendiumItem) {\n      game.system.log.w(\"[ENABLE] Could not find compendium item:\", enableRef.uuid);\n      return { compendiumItem: null, actorItem: null };\n    }\n\n    const actorItem = this.actor.items.find(item => \n      item.name === compendiumItem.name && \n      item.type === compendiumItem.type\n    );\n\n    if (!actorItem) {\n      game.system.log.w(\"[ENABLE] Could not find matching actor item:\", compendiumItem.name);\n      return { compendiumItem, actorItem: null };\n    }\n\n    return { compendiumItem, actorItem };\n  }\n\n  /**\n   * Check if item should be disabled by tags\n   * @protected\n   */\n  async _shouldDisableByTags(item, origin) {\n    const itemTags = item?.system?.tags || [];\n    const shouldDisable = origin?.system?.tags?.some(tag => itemTags.includes(tag)) || false;\n    return shouldDisable;\n  }\n\n  /**\n   * Check if item should be disabled by requirements\n   * @protected\n   */\n  async _shouldDisableByRequirements(item, effect) {\n    if (!item.hasRequires) return false;\n    const requiresList = item.system.requires.list || [];\n    // Get all required items first\n    const requiredItems = await Promise.all(requiresList.map(req => fromUuid(req.uuid)));\n    // Then compare names\n    const shouldDisable = requiredItems.some(requiredItem => {\n      return requiredItem?.name === effect.name;\n    });\n    return shouldDisable;\n  }\n\n} ","import { SYSTEM_ID } from \"~/src/helpers/constants\"\n\n/**\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\n * @extends {Actor}\n */\nexport default class FFXIVActor extends Actor {\n\n  /**\n   * Creates a new FFXIV actor\n   * @param {object} data - The actor data\n   * @param {object} context - The initialization context\n   */\n  constructor(data = {}, context) {\n    super(data, context);\n  }\n\n  /**\n   * Gets the active token for this actor\n   * @return {Token|null} The active token or null if none found\n   */\n  get activeToken() {\n    for (const token of canvas.tokens.placeables) {\n      if (token.actor === this) {\n        return token;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Gets all ally tokens for this actor\n   * @return {Token[]} Array of ally tokens\n   */\n  get allyTokens() {\n    // Get all tokens on the canvas\n    const tokens = canvas.tokens.placeables;\n    if (!tokens?.length) return [];\n\n    // Get current combat\n    const combat = game.combat;\n    if (!combat) return [];\n\n    // Get all combatant actor IDs for quick lookup\n    const combatantActorIds = new Set(combat.combatants.contents.map(c => c.actor?.id).filter(Boolean));\n\n    // Find all ally tokens (non-hostile) that are also combatants\n    return tokens.filter(token =>\n      token.actor // Must have an actor\n      && token.document.disposition === 1 // Must be friendly\n      && combatantActorIds.has(token.actor.id) // Must be a combatant in the current combat\n      && token.actor.id !== this.id // Must not be the source actor\n    );\n  }\n\n\n  /**\n   * Checks for specific duplicates in an array\n   * @param {Array} arr - The array to check\n   * @param {string} str - The string to look for duplicates\n   * @return {boolean} Whether duplicates were found\n   */\n  hasSpecificDuplicate(arr, str) {\n    return arr.filter(item => item === str).length > 1;\n  }\n\n  /**\n   * Check if an item has remaining uses\n   * @param {Item} item - The item to check for remaining uses\n   * @return {boolean} Whether the item has remaining uses\n   */\n  async actorItemHasRemainingUses(item) {\n    game.system.log.p(\"[USES] Checking remaining uses for:\", item);\n    game.system.log.p(\"[USES] Checking remaining uses item name:\", item.name);\n    game.system.log.p(\"[USES] hasLimitation:\", item.system.hasLimitation);\n    game.system.log.p(\"[USES] currentUses:\", item.currentUses);\n    game.system.log.p(\"[USES] usesRemaining:\", item.usesRemaining);\n\n    if (!item.system.hasLimitation) { return true }\n    return item.usesRemaining > 0;\n  }\n\n\n  /**\n   * Get the set of actor UUIDs that have applied an effect with this name\n   * @param {ActiveEffect} effect - The effect to check for\n   * @return {Set<string>} Set of actor UUIDs that have applied this effect\n   */\n  getEffectSources(effect) {\n    return new Set(\n      this.effects\n        .filter(e => e.name === effect.name)\n        .map(e => e.getFlag(SYSTEM_ID, 'transferredBy.actor.uuid') || this.uuid)\n    );\n  }\n\n  /**\n   * Remove the first duplicate from an array\n   * @param {Array} arr - The array to process\n   * @param {string} name - The name to check for duplicates\n   * @return {Array} The processed array\n   */\n  removeFirstDuplicate(arr, name) {\n    const index = arr.indexOf(name); // Find the first occurrence\n    if (index !== -1 && arr.slice(index + 1).includes(name)) {\n      arr.splice(index, 1); // Remove only the first duplicate\n    }\n    return arr;\n  };\n\n  /**\n   * Only applies via the token HUD\n   * @param {string} statusId - The ID of the status effect to toggle\n   * @param {object} options - Options for toggling the status effect\n   * @return {Promise<ActiveEffect|boolean|undefined>} A promise which resolves to one of the following values:\n   *                                 - ActiveEffect if a new effect need to be created\n   *                                 - true if was already an existing effect\n   *                                 - false if an existing effect needed to be removed\n   *                                 - undefined if no changes need to be made\n   */\n  async toggleStatusEffect(statusId, options) {\n    if (game.combat?.started && statusId === 'focus') {\n      //- if actor has focus, and there are no secondary action slots left, prevent the effect from being removed\n      if (this.statuses.has('focus') && !this.system.actionState.available.includes('secondary')) {\n        ui.notifications.warn('You cannot change Focus while you have no secondary action slots left.');\n        return false;\n      }\n      if (!this.statuses.has('focus') && this.system.hasMoved) {\n        ui.notifications.warn('You cannot change Focus while you have moved this turn.');\n        return false;\n      }\n\n      // Find all traits that sacrifice movement\n      const movementSacrificingTraits = this.items.filter(item => \n        item.type === 'trait' && \n        item.system.sacrificesMovement\n      );\n\n      game.system.log.o('[TOGGLE STATUS] Found movement sacrificing traits:', {\n        traits: movementSacrificingTraits.map(t => ({\n          name: t.name,\n          type: t.type,\n          sacrificesMovement: t.system.sacrificesMovement,\n          effects: t.effects.map(e => ({\n            name: e.name,\n            disabled: e.disabled,\n            changes: e.changes,\n            flags: e.flags\n          }))\n        }))\n      });\n      \n      this.handlePluginOverrides(movementSacrificingTraits)\n    }\n\n    if(['ko', 'dead', 'comatose', 'brink', 'surprised', 'bind', 'stun'].includes(statusId)) {\n      options = {...options, overlay: true};\n    }\n\n    return super.toggleStatusEffect(statusId, options);\n  }\n\n  /**\n   * Handles plugin overrides for status effect toggling\n   * @override\n   * @param {Array<Trait>} movementSacrificingTraits - The traits that sacrifice movement\n   */\n  async handlePluginOverrides(movementSacrificingTraits) {\n    \n  }\n\n\n  /** @override */\n  prepareData() {\n    // Prepare data for the actor. Calling the super version of this executes\n    // the following, in order: data reset (to clear active effects),\n    // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\n    // prepareDerivedData().\n    super.prepareData();\n  }\n\n  /** @override */\n  prepareBaseData() {\n    // Data modifications in this step occur before processing embedded\n    // documents or derived data.\n    super.prepareBaseData();\n\n    // console.log('prepareBaseData');\n  }\n\n  /**\n   * @override\n   * Augment the basic actor data with additional dynamic data. Typically,\n   * you'll want to handle most of your calculated/derived data in this step.\n   * Data calculated in this step should generally not exist in template.json\n   * (such as ability modifiers rather than ability scores) and should be\n   * available both inside and outside of character sheets (such as if an actor\n   * is queried and has a roll executed directly from it).\n  */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    // const actorData = this.data;\n    // const data = actorData.data;\n    // const flags = actorData.flags.boilerplate || {};\n\n    // Make separate methods for each Actor type (character, npc, etc.) to keep\n    // things organized.\n    // this._prepareCharacterData(actorData);\n    // this._prepareNpcData(actorData);\n    // console.log('prepareDerivedData', this.system.spd.level);\n\n    // disable any passive effects for items that are not equipped. @deprecated? maybe not needed. See extended/active-effects:isSuppressed\n    // for (let item of this.items) {\n    //   if (item.system.wearable && item.system.location != 'worn') {\n    //     for (let effect of item.effects) {\n    //       effect.updateSource({ disabled: true })\n    //     }\n    //   }\n    // }\n  }\n\n  /**\n   * Deletes all items of a specific type from the actor\n   * @param {string} type - The type of items to delete\n   * @return {Promise<void>} Returns a promise that resolves when items are deleted\n   */\n  async deleteAllItems(type) {\n    game.system.log.d(type)\n    game.system.log.d(typeof type)\n    for (const item of this.items) {\n      if (Array.isArray(type) && type.includes(item.type) || !type || type === 'all' || item.type === type) {\n        await item.delete();\n      }\n    }\n  }\n\n  /**\n   * Handles pre-creation setup\n   * @return {Promise<void>} Returns a promise that resolves when setup is complete\n   */\n  async _preCreate() {\n    game.system.log.d('preCreate', this);\n    if (this.type === 'PC') {\n      const prototypeToken = { disposition: 1, actorLink: true }; // Set disposition to \"Friendly\"\n      this.updateSource({ prototypeToken });\n    }\n  }\n\n  /**\n   * Handles dropping content onto the actor\n   * @param {DragEvent} event - The drop event\n   * @return {Promise<void>} Returns a promise that resolves when the drop is handled\n   */\n  async _onDrop(event) {\n    console.log('_onDrop in the actor.js', event);\n  }\n\n}","/**\n * Extend the base Item document by defining a custom roll data structure which is ideal for the Simple system.\n * @extends {Item}\n */\nexport default class FFXIVItem extends Item {\n  /**\n   * Whether the item has a limitation on its usage\n   * @return {boolean} True if the item has a limitation\n   */\n  get hasLimitation() {\n    return this.system.hasLimitation;\n  }\n\n  /**\n   * Whether the item has requirements that must be met\n   * @return {boolean} True if the item has requirements\n   */\n  get hasRequires() {\n    return this.system.requires?.value === true;\n  }\n\n  /**\n   * Get the number of uses remaining for this item\n   * @return {number} Number of uses remaining\n   */\n  get usesRemaining() {\n    if (!this.system.hasLimitation) return 0;\n    return parseInt(this.system.limitation || 0) - this.currentUses;\n  }\n  \n  /**\n   * Get the maximum number of uses for this item\n   * @return {number} Maximum number of uses\n   */\n  get maxUses() {\n    return parseInt(this.system.limitation || 0);\n  }\n\n  /**\n   * Get the current number of times this item has been used\n   * @return {number} Current number of uses\n   */\n  get currentUses() {\n    // Only return a number if uses is explicitly set to a number\n    if (this.system.uses === undefined || this.system.uses === null || this.system.uses === '') return 0;\n    const parsed = parseInt(this.system.uses);\n    if (isNaN(parsed)) return 0;\n    return parsed;\n  }\n\n  /**\n   * Whether the item has any active effects\n   * @return {boolean} True if the item has effects\n   */\n  get hasEffects() {\n    return this.effects?.size > 0;\n  }\n}\n","import { SYSTEM_ID } from \"~/src/helpers/constants.js\";\n\n/**\n * Extension of the ActiveEffect class for FFXIV\n * @extends {ActiveEffect}\n */\nexport default class FFActiveEffect extends ActiveEffect {\n\n  /**\n   * Creates a new FFXIV active effect\n   * @param {object} data - The effect data\n   * @param {object} context - The initialization context\n   */\n  constructor(data, context) {\n    super(data, context);\n  }\n\n  /**\n   * Gets whether the effect is temporary\n   * @return {boolean} Returns true if the effect is temporary\n   */\n  get isTemporary() {\n    if (this.getFlag(SYSTEM_ID, \"overlay\")) return true;\n    return super.isTemporary;\n  }\n\n  /**\n   * Check if the effect is transferred from an item \n   * (i.e. a passive effect from an item owned by that actor, \n   * rather than an active effect transferred as a result of an action \n   * by another actor)\n   * @return {boolean} Whether the effect is transferred from an item\n   */\n  get isTransferred() {\n    const origin = fromUuidSync(this.origin);\n    if (!origin?.transferredEffects?.length) return false;\n    return Array.isArray(origin.transferredEffects) && \n            origin.transferredEffects.length > 0;\n  }\n\n\n  /**\n   * Updates the combat duration\n   * @return {Promise<void>} Returns a promise that resolves when the duration is updated\n   */\n  async updateCombatDuration() {\n    game.system.log.o('[ACTIVE EFFECT] Starting updateCombatDuration for:', {\n      name: this.name,\n      origin: this.origin,\n      duration: this.duration\n    });\n\n    // Get the origin item uuid of the effect from this.origin\n    const originUuid = this.origin;\n    if (!originUuid) {\n      game.system.log.w('[ACTIVE EFFECT] No origin UUID found');\n      return;\n    }\n\n    // Get the item from the origin item uuid\n    const originItem = await fromUuid(originUuid);\n    if (!originItem) {\n      game.system.log.w('[ACTIVE EFFECT] No origin item found for UUID:', originUuid);\n      return;\n    }\n\n    game.system.log.o('[ACTIVE EFFECT] Found origin item:', {\n      name: originItem.name,\n      system: originItem.system\n    });\n\n    // Get the duration (and units) from the item\n    const duration = originItem.system.duration;\n    if (!duration) {\n      game.system.log.w('[ACTIVE EFFECT] No duration found on origin item');\n      return;\n    }\n\n    const effectData = {\n      duration: {\n        startRound: game.combat?.round ?? 0,\n        startTurn: game.combat?.turn ?? 0\n      }\n    }\n\n    if(originItem.system.durationUnits === \"rounds\") {\n      effectData.duration.rounds = originItem.system.duration;\n      effectData.duration.turns = 0;\n      game.system.log.o('[ACTIVE EFFECT] Setting rounds duration:', effectData.duration);\n    } else if(originItem.system.durationUnits === \"turns\") {\n      effectData.duration.turns = originItem.system.duration;\n      effectData.duration.rounds = 0;\n      game.system.log.o('[ACTIVE EFFECT] Setting turns duration:', effectData.duration);\n    }\n\n    // Set the duration to the effect\n    game.system.log.o('[ACTIVE EFFECT] Updating effect with duration:', effectData);\n    await this.update(effectData);\n  }\n\n  async delete(options={}) {\n    game.system.log.o('[ACTIVE EFFECT] Starting effect deletion:', {\n      effectName: this.name,\n      effectId: this.id,\n      effectDuration: this.duration,\n      effectFlags: this.flags,\n      effectChanges: this.changes,\n      effectDisabled: this.disabled,\n      options\n    });\n\n    try {\n      const result = await super.delete(options);\n      game.system.log.o('[ACTIVE EFFECT] Effect deletion completed:', {\n        effectName: this.name,\n        result\n      });\n      return result;\n    } catch (error) {\n      game.system.log.e('[ACTIVE EFFECT] Effect deletion failed:', {\n        effectName: this.name,\n        error\n      });\n      throw error;\n    }\n  }\n}\n","const {\n  StringField, ArrayField, BooleanField\n} = foundry.data.fields;\n\n/**\n * Model for Active Effects in the system\n * @extends {foundry.abstract.TypeDataModel}\n */\nexport default class FFEffectModel extends foundry.abstract.TypeDataModel {\n  /**\n   * Defines the schema for Active Effect data\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      tags: new ArrayField(\n        new StringField({ required: false, initial: '' })\n      ),\n    }\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n    \n    // Ensure flags exist\n    if (!this.parent.flags['foundryvtt-final-fantasy']) {\n      this.parent.flags['foundryvtt-final-fantasy'] = {};\n    }\n    \n    // Set default stackable behavior if not already set\n    if (!this.parent.flags['foundryvtt-final-fantasy'].stackable) {\n      this.parent.flags['foundryvtt-final-fantasy'].stackable = 'differentSource';\n    }\n  }\n}","/**\n * Extends the Token class to implement system-specific token functionality\n * @extends {Token}\n */\nexport default class FFToken extends Token {\n  /**\n   * Whether this token represents an ally\n   * @return {boolean} True if the token is an ally\n   */\n  get isAlly() {\n    return this.document.disposition === 1;\n  }\n\n  /**\n   * Whether this token represents an enemy\n   * @return {boolean} True if the token is an enemy\n   */\n  get isEnemy() {\n    return this.document.disposition === -1;\n  }\n}","\n/**\n * Extended Combat class for Final Fantasy system\n * @extends {Combat}\n */\nexport default class FFCombat extends Combat {\n  /**\n   * Initialize the combat instance\n   * @param {object} data - The combat data\n   * @param {object} context - The initialization context\n   */\n  constructor(data, context) {\n    super(data, context);\n  }\n\n  /**\n   * Returns true if the current turn represents the end of the adventurer step\n   * (i.e., if the current turn is the last PC and the next turn is an NPC)\n   * @type {boolean}\n   */\n  get isAdventurerStepEnd() {\n    if (!this.started || this.turn === null) return false;\n    const currentCombatant = this.turns[this.turn];\n    const nextCombatant = this.turns[this.turn + 1];\n    return currentCombatant?.actor?.type === \"PC\" && nextCombatant?.actor?.type === \"NPC\";\n  }\n\n  /**\n   * Returns true if the current turn represents the end of the enemy step\n   * (i.e., if the current turn is the last NPC and the next turn is a PC or the round ends)\n   * @type {boolean}\n   */\n  get isEnemyStepEnd() {\n    if (!this.started || this.turn === null) return false;\n    const currentCombatant = this.turns[this.turn];\n    const nextCombatant = this.turns[this.turn + 1];\n    return currentCombatant?.actor?.type === \"NPC\" && (!nextCombatant || nextCombatant?.actor?.type === \"PC\");\n  }\n\n\n  /**\n   * Return the Array of combatants sorted into initiative order\n   * @return {Combatant[]} Array of sorted combatants\n   */\n  setupTurns() {\n    this.turns ||= [];\n\n    // Determine the turn order and the current turn\n    const turns = this.combatants.contents.sort(this._sortCombatants);\n    if (this.turn !== null) this.turn = Math.clamp(this.turn, 0, turns.length-1);\n\n    // Update state tracking\n    const currentTurn = turns[this.turn];\n    this.current = this._getCurrentState(currentTurn);\n\n    // One-time initialization of the previous state\n    if (!this.previous) this.previous = this.current;\n\n    // Return the array of prepared turns\n    return this.turns = turns;\n  }\n\n  /**\n   * Define how the array of Combatants is sorted in the displayed list\n   * @param {Combatant} a - First combatant to compare\n   * @param {Combatant} b - Second combatant to compare\n   * @return {number} Sort order modifier\n   * @protected\n   */\n  _sortCombatants(a, b) {\n    const aIsNPC = a.actor?.type === \"NPC\";\n    const bIsNPC = b.actor?.type === \"NPC\";\n    \n    // Set CSS classes based on the order\n    if (aIsNPC && !bIsNPC) {\n      a.css = 'npc-group-start'; // First NPC\n      b.css = 'pc-group-end'; // Last PC before NPC\n      return 1;\n    } else if (!aIsNPC && bIsNPC) {\n      a.css = 'pc-group-end'; // Last PC before NPC\n      b.css = 'npc-group-start'; // First NPC\n      return -1;\n    }\n\n    if (a.initiative === null && b.initiative === null) return 0;\n    if (a.initiative === null) return 1;\n    if (b.initiative === null) return -1;\n    return b.initiative - a.initiative;\n  }\n}","/**\n * Extend the base Combatant class to implement additional system-specific logic.\n * Controls the display of Combatants in the Combat Tracker.\n */\nexport default class FFCombatants extends Combatant {\n  /**\n   * Initialize the combatant\n   * @param {object} object - The combatant data\n   * @param {object} [options={}] - Additional options\n   */\n  constructor(object, options = {}) {\n    super(object, options);\n  }\n}","/**\n * Adjusts the alpha value of an RGBA color string\n * @param {string} rgba - The RGBA color string to adjust\n * @param {number} alpha - The new alpha value\n * @return {string} The adjusted RGBA color string\n */\nexport function adjustAlpha(rgba, alpha) {\n  const [r, g, b] = rgba.match(/\\d+/g);\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n}\n\n/**\n * Calculator for determining contrasting colors and color adjustments\n */\nexport default class ColourContrastCalculator {\n  /**\n   * Creates a new color contrast calculator\n   * @param {string|Color} colour - The color to calculate contrast for\n   * @param {object} options - Configuration options\n   * @param {string} [options.calculationType=\"contrast\"] - Type of calculation to perform\n   * @param {string} [options.outputFormat=\"hex\"] - Format for the output color\n   */\n  constructor(colour, { calculationType = \"contrast\", outputFormat = \"hex\" } = {}) {\n    this.colour = colour;\n    this.calculationType = calculationType;\n    this.outputFormat = outputFormat;\n  }\n\n  /**\n   * Converts a hex color string or Color object to RGB values\n   * @param {string|Color} hex - The hex color string or Color object to convert\n   * @return {number[]} Array of RGB values [r, g, b]\n   */\n  hexToRgb(hex) {\n    // Handle Color object from Foundry\n    if (hex instanceof Color) {\n      // Convert from 0-1 range to 0-255 range\n      return [\n        Math.round(hex.r * 255),\n        Math.round(hex.g * 255),\n        Math.round(hex.b * 255)\n      ];\n    }\n\n    // Handle string hex values\n    if (typeof hex === 'string') {\n      // Remove the hash symbol and parse the hex values to integers\n      hex = hex.replace(/^#/, '');\n      const bigint = parseInt(hex, 16);\n      \n      // Extract RGB values using bitwise operations\n      const r = (bigint >> 16) & 255;\n      const g = (bigint >> 8) & 255;\n      const b = bigint & 255;\n      \n      return [r, g, b];\n    }\n\n    // If neither a Color object nor a string, return a default color\n    console.warn('Invalid color format provided to hexToRgb:', hex);\n    return [0, 0, 0];\n  }\n\n  /**\n   * Converts RGB values to a hex color string\n   * @param {number[]} rgb - Array of RGB values\n   * @return {string} Hex color string\n   */\n  rgbToHex(rgb) {\n    // Convert RGB values to a hex string\n    return `#${rgb.map(val => (val < 16 ? '0' : '') + val.toString(16)).join('')}`;\n  }\n\n  /**\n   * Calculates brightness contrast value for RGB color\n   * @param {number[]} rgb - Array of RGB values\n   * @return {number} Brightness contrast value between 0 and 1\n   */\n  brightnessContrast(rgb) {\n    // Calculate brightness as per W3C recommendation\n    return (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\n  }\n\n  /**\n   * Calculates color difference between two RGB colors\n   * @param {number[]} rgb1 - First RGB color array\n   * @param {number[]} rgb2 - Second RGB color array\n   * @return {number} Color difference value\n   */\n  differenceContrast(rgb1, rgb2) {\n    // Calculate color difference using Euclidean distance in RGB space\n    return Math.sqrt(\n      Math.pow(rgb1[0] - rgb2[0], 2) +\n      Math.pow(rgb1[1] - rgb2[1], 2) +\n      Math.pow(rgb1[2] - rgb2[2], 2)\n    );\n  }\n\n  /**\n   * Calculates the highest contrast color based on calculation type\n   * @return {number[]} RGB values of the highest contrast color\n   */\n  calculateHighestContrastColour() {\n    const inputRgb = this.hexToRgb(this.colour);\n    let highestContrastRgb;\n\n    if (this.calculationType === \"brightness\") {\n      // Adjust threshold from 0.5 to 0.7 to make more colors use dark text\n      highestContrastRgb = this.brightnessContrast(inputRgb) >= 0.5 ? [40, 32, 26] : [255, 255, 255];\n    } else if (this.calculationType === \"difference\") {\n      // Calculate the highest contrast color based on difference\n      highestContrastRgb = this.differenceContrast(inputRgb, [40, 32, 26]) >= this.differenceContrast(inputRgb, [255, 255, 255]) ? [40, 32, 26] : [255, 255, 255];\n    } else if (this.calculationType === \"contrast\") {\n      // Use same threshold as brightness for consistency\n      highestContrastRgb = this.brightnessContrast(inputRgb) >= 0.5 ? [40, 32, 26] : [255, 255, 255];\n    } else {\n      throw new Error(\"Invalid calculationType\");\n    }\n\n    return highestContrastRgb;\n  }\n\n  /**\n   * Calculates the contrast color with optional alpha\n   * @param {number} [alpha=1.0] - Alpha value for RGBA output\n   * @return {string} Contrast color in specified output format\n   */\n  calculateContrast(alpha = 1.0) {\n    const highestContrastRgb = this.calculateHighestContrastColour();\n\n    if (this.outputFormat === \"hex\") {\n      return this.rgbToHex(highestContrastRgb);\n    } else if (this.outputFormat === \"rgb\") {\n      return `rgb(${highestContrastRgb[0]}, ${highestContrastRgb[1]}, ${highestContrastRgb[2]})`;\n    } else if (this.outputFormat === \"rgba\") {\n      return `rgba(${highestContrastRgb[0]}, ${highestContrastRgb[1]}, ${highestContrastRgb[2]}, ${alpha})`;\n    } else {\n      throw new Error(\"Invalid outputFormat\");\n    }\n  }\n\n  /**\n   * Get CSS variables for a color including contrast and RGB values\n   * @return {object} Object containing CSS-ready color values\n   */\n  getCSSVariables() {\n    const rgbValues = this.hexToRgb(this.colour);\n    return {\n      color: this.colour instanceof Color ? this.colour.toString() : this.colour,\n      contrast: this.calculateContrast(),\n      rgb: rgbValues.join(', ')\n    };\n  }\n}\n\n\n","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","/**\n * Provides various utilities for generating hash codes for strings and UUIDs.\n *\n * This class should not be constructed as it only contains static methods.\n */\nclass Hashing\n{\n   static #regexUuidv = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n   /**\n    * @hideconstructor\n    */\n   constructor()\n   {\n      throw new Error('Hashing constructor: This is a static class and should not be constructed.');\n   }\n\n   /**\n    * Provides a solid string hashing algorithm.\n    *\n    * Sourced from: https://stackoverflow.com/a/52171480\n    *\n    * @param {string}   str - String to hash.\n    *\n    * @param {number}   [seed=0] - A seed value altering the hash.\n    *\n    * @returns {number} Hash code.\n    */\n   static hashCode(str, seed = 0)\n   {\n      if (typeof str !== 'string') { return 0; }\n\n      let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n      for (let ch, i = 0; i < str.length; i++)\n      {\n         ch = str.charCodeAt(i);\n         h1 = Math.imul(h1 ^ ch, 2654435761);\n         h2 = Math.imul(h2 ^ ch, 1597334677);\n      }\n\n      h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n      h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n      return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n   }\n\n   /**\n    * Validates that the given string is formatted as a UUIDv4 string.\n    *\n    * @param {string}   uuid - UUID string to test.\n    *\n    * @returns {boolean} Is UUIDv4 string.\n    */\n   static isUuidv4(uuid)\n   {\n      return this.#regexUuidv.test(uuid);\n   }\n\n   /**\n    * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\n    *\n    * This code is an evolution of the following Gist.\n    * https://gist.github.com/jed/982883\n    *\n    * There is a public domain / free copy license attached to it that is not a standard OSS license...\n    * https://gist.github.com/jed/982883#file-license-txt\n    *\n    * @returns {string} UUIDv4\n    */\n   static uuidv4()\n   {\n      return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n       (c ^ (globalThis.crypto ?? globalThis.msCrypto).getRandomValues(\n        new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n   }\n}\n\n/**\n * Provides utility functions for strings.\n *\n * This class should not be constructed as it only contains static methods.\n */\nclass Strings\n{\n   /**\n    * @hideconstructor\n    */\n   constructor()\n   {\n      throw new Error('Strings constructor: This is a static class and should not be constructed.');\n   }\n\n   /**\n    * Escape a given input string prefacing special characters with backslashes for use in a regular expression.\n    *\n    * @param {string}   string - An un-escaped input string.\n    *\n    * @returns {string} The escaped string suitable for use in a regular expression.\n    */\n   static escape(string)\n   {\n      return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n   }\n\n   /**\n    * Normalizes a string.\n    *\n    * @param {string}   string - A string to normalize for comparisons.\n    *\n    * @returns {string} Cleaned string.\n    *\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n    */\n   static normalize(string)\n   {\n      return string.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, ''); // eslint-disable-line no-control-regex\n   }\n}\n\n/**\n * Provides timing related higher-order functions.\n *\n * This class should not be constructed as it only contains static methods.\n */\nclass Timing\n{\n   /**\n    * @hideconstructor\n    */\n   constructor()\n   {\n      throw new Error('Timing constructor: This is a static class and should not be constructed.');\n   }\n\n   /**\n    * Wraps a callback in a debounced timeout. Delay execution of the callback function until the function has not been\n    * called for the given delay in milliseconds.\n    *\n    * @template Args\n    *\n    * @param {(...args: Args[]) => void} callback - A function to execute once the debounced threshold has been passed.\n    *\n    * @param {number}   delay - An amount of time in milliseconds to delay.\n    *\n    * @returns {(...args: Args[]) => void} A wrapped function that can be called to debounce execution.\n    *\n    * @example\n    * /**\n    *  * Debounce the update invocation by 500ms.\n    *  *\\/\n    * const updateDebounced = Timing.debounce(() => doc.update(), 500);\n    *\n    * // Use the function like:\n    * updateDebounced();\n    *\n    * @example\n    * /**\n    *  * Debounce the update invocation by 500ms.\n    *  *\n    *  * \\@param {string} value - A value to update.\n    *  *\\/\n    * const updateDebounced = Timing.debounce((value) => doc.update(value), 500);\n    *\n    * // Use the function like:\n    * updateDebounced('new value');\n    */\n   static debounce(callback, delay)\n   {\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`'callback' must be a function.`);\n      }\n\n      if (!Number.isInteger(delay) || delay < 0)\n      {\n         throw new TypeError(`'delay' must be a positive integer representing milliseconds.`);\n      }\n\n      let timeoutId;\n\n      return function(...args)\n      {\n         globalThis.clearTimeout(timeoutId);\n         timeoutId = globalThis.setTimeout(() => { callback.apply(this, args); }, delay);\n      };\n   }\n\n   /**\n    * Creates a double click event handler that distinguishes between single and double clicks. Calls the `single`\n    * callback on a single click and the `double` callback on a double click. The default double click delay to invoke\n    * the `double` callback is 400 milliseconds.\n    *\n    * @param {object}   opts - Optional parameters.\n    *\n    * @param {(event: Event) => void} [opts.single] - Single click callback.\n    *\n    * @param {(event: Event) => void} [opts.double] - Double click callback.\n    *\n    * @param {number}   [opts.delay=400] - Double click delay.\n    *\n    * @returns {(event: Event) => void} The gated double-click handler.\n    *\n    * @example\n    * // Given a button element.\n    * button.addEventListener('click', Timing.doubleClick({\n    *    single: (event) => console.log('Single click: ', event),\n    *    double: (event) => console.log('Double click: ', event)\n    * });\n    */\n   static doubleClick({ single, double, delay = 400 })\n   {\n      if (single !== void 0 && typeof single !== 'function') { throw new TypeError(`'single' must be a function.`); }\n      if (double !== void 0 && typeof double !== 'function') { throw new TypeError(`'double' must be a function.`); }\n\n      if (!Number.isInteger(delay) || delay < 0)\n      {\n         throw new TypeError(`'delay' must be a positive integer representing milliseconds.`);\n      }\n\n      let clicks = 0;\n      let timeoutId;\n\n      return (event) =>\n      {\n         globalThis.clearTimeout(timeoutId);\n         clicks++;\n\n         if (clicks === 1)\n         {\n            timeoutId = globalThis.setTimeout(() =>\n            {\n               if (typeof single === 'function') { single(event); }\n               clicks = 0;\n            }, delay);\n         }\n         else\n         {\n            if (typeof double === 'function') { double(event); }\n            clicks = 0;\n         }\n      };\n   }\n}\n\nexport { Hashing, Strings, Timing };\n//# sourceMappingURL=index.js.map\n","function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\nconst s_TAG_OBJECT = '[object Object]';\nconst s_TAG_MAP = '[object Map]';\nconst s_TAG_SET = '[object Set]';\nconst s_TAG_STRING = '[object String]';\n/**\n * Freezes all entries traversed that are objects including entries in arrays.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {Set<string>}   [skipFreezeKeys] - A Set of strings indicating keys of objects to not freeze.\n *\n * @returns {object | []} The frozen object.\n */\nfunction deepFreeze(data, skipFreezeKeys) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 4 */\n    if (skipFreezeKeys !== void 0 && !(skipFreezeKeys instanceof Set)) {\n        throw new TypeError(`'skipFreezeKeys' is not an 'Set'.`);\n    }\n    return _deepFreeze(data, skipFreezeKeys);\n}\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj) {\n    if (Object.prototype.toString.call(target) !== s_TAG_OBJECT) {\n        throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n    }\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT) {\n            throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n        }\n    }\n    return _deepMerge(target, ...sourceObj);\n}\n/**\n * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n * The result of the callback function is used to modify in place the given data.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {(any) => any}  func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}       modify - If true then the result of the callback function is used to modify in place\n *                                  the given data.\n *\n * @returns {*} The data object.\n */\nfunction depthTraverse(data, func, modify = false) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 1 */\n    if (typeof func !== 'function') {\n        throw new TypeError(`'func' is not a 'function'.`);\n    }\n    return _depthTraverse(data, func, modify);\n}\n/**\n * Returns a list of accessor keys by traversing the given object.\n *\n * @param {object}   data - An object to traverse for accessor keys.\n *\n * @returns {string[]} Accessor list.\n */\nfunction getAccessorList(data) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`);\n    }\n    return _getAccessorList(data);\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {unknown}  target - Any target to test.\n *\n * @param {new (...args: any[]) => any} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype) {\n    /* c8 ignore next */\n    if (typeof target !== 'function') {\n        return false;\n    }\n    if (target === Prototype) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n        if (proto === Prototype) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isAsyncIterable(value) {\n    if (typeof value !== 'object' || value === null || value === void 0) {\n        return false;\n    }\n    return Symbol.asyncIterator in value;\n}\n/**\n * Tests for whether an object is iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value) {\n    if (value === null || value === void 0 || typeof value !== 'object') {\n        return false;\n    }\n    return Symbol.iterator in value;\n}\n/**\n * Tests for whether object is not null, typeof object, and not an array.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: `{}`, `new Object()` or `Object.create(null)`.\n *\n * @param {unknown} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Safely returns keys on an object or an empty array if not an object.\n *\n * @param {object} object - An object.\n *\n * @returns {string[]}  Object keys or empty array.\n */\nfunction objectKeys(object) {\n    return isObject(object) ? Object.keys(object) : [];\n}\n/**\n * Safely returns an objects size. Note for String objects unicode is not taken into consideration.\n *\n * @param {any} object - Any value, but size returned for object / Map / Set / arrays / strings.\n *\n * @returns {number} Size of object.\n */\nfunction objectSize(object) {\n    if (object === void 0 || object === null || typeof object !== 'object') {\n        return 0;\n    }\n    const tag = Object.prototype.toString.call(object);\n    if (tag === s_TAG_MAP || tag === s_TAG_SET) {\n        return object.size;\n    }\n    if (tag === s_TAG_STRING) {\n        return object.length;\n    }\n    return Object.keys(object).length;\n}\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access with keys separated by `.`.\n *\n * @param {any}      [defaultValue] - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue) {\n    if (typeof data !== 'object') {\n        return defaultValue;\n    }\n    if (typeof accessor !== 'string') {\n        return defaultValue;\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If the next level of object access is undefined or null then return the empty string.\n        if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) {\n            return defaultValue;\n        }\n        data = data[access[cntr]];\n    }\n    return data;\n}\n/**\n * Provides a way to safely batch set an objects data / entries given an array of accessor strings which describe the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk. If value is an object the accessor will be used to access a target value from `value` which is\n * subsequently set to `data` by the given operation. If `value` is not an object it will be used as the target\n * value to set across all accessors.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string[]} accessors - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {any}      [defaultAccessValue=0] - A new value to set if an entry for accessor is found.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects automatically.\n */\nfunction safeBatchSet(data, accessors, value, operation = 'set', defaultAccessValue = 0, createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeBatchSet error: 'data' is not an 'object'.`);\n    }\n    if (!Array.isArray(accessors)) {\n        throw new TypeError(`safeBatchSet error: 'accessors' is not an 'array'.`);\n    }\n    if (typeof value === 'object') {\n        accessors.forEach((accessor) => {\n            const targetValue = safeAccess(value, accessor, defaultAccessValue);\n            safeSet(data, accessor, targetValue, operation, createMissing);\n        });\n    }\n    else {\n        accessors.forEach((accessor) => {\n            safeSet(data, accessor, value, operation, createMissing);\n        });\n    }\n}\n/**\n * Compares a source object and values of entries against a target object. If the entries in the source object match\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\n * is returned.\n *\n * @param {object}   source - Source object.\n *\n * @param {object}   target - Target object.\n *\n * @returns {boolean} True if equal.\n */\nfunction safeEqual(source, target) {\n    if (typeof source === 'undefined' || source === null || typeof target === 'undefined' || target === null) {\n        return false;\n    }\n    const sourceAccessors = getAccessorList(source);\n    for (let cntr = 0; cntr < sourceAccessors.length; cntr++) {\n        const accessor = sourceAccessors[cntr];\n        const sourceObjectValue = safeAccess(source, accessor);\n        const targetObjectValue = safeAccess(target, accessor);\n        if (sourceObjectValue !== targetObjectValue) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSet error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessor !== 'string') {\n        throw new TypeError(`safeSet error: 'accessor' is not a 'string'.`);\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n        if (Array.isArray(data)) {\n            const number = (+access[cntr]);\n            if (!Number.isInteger(number) || number < 0) {\n                return false;\n            }\n        }\n        if (cntr === access.length - 1) {\n            switch (operation) {\n                case 'add':\n                    data[access[cntr]] += value;\n                    break;\n                case 'div':\n                    data[access[cntr]] /= value;\n                    break;\n                case 'mult':\n                    data[access[cntr]] *= value;\n                    break;\n                case 'set':\n                    data[access[cntr]] = value;\n                    break;\n                case 'set-undefined':\n                    if (typeof data[access[cntr]] === 'undefined') {\n                        data[access[cntr]] = value;\n                    }\n                    break;\n                case 'sub':\n                    data[access[cntr]] -= value;\n                    break;\n            }\n        }\n        else {\n            // If createMissing is true and the next level of object access is undefined then create a new object entry.\n            if (createMissing && typeof data[access[cntr]] === 'undefined') {\n                data[access[cntr]] = {};\n            }\n            // Abort if the next level is null or not an object and containing a value.\n            if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') {\n                return false;\n            }\n            data = data[access[cntr]];\n        }\n    }\n    return true;\n}\n/**\n * Performs bulk setting of values to the given data object.\n *\n * @param {object}            data - The data object to set data.\n *\n * @param {Record<string, any>}  accessorValues - Object of accessor keys to values to set.\n *\n * @param {SafeSetOperation}  [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n *        default (`set`).\n *\n * @param {boolean}           [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n */\nfunction safeSetAll(data, accessorValues, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSetAll error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessorValues !== 'object') {\n        throw new TypeError(`safeSetAll error: 'accessorValues' is not an 'object'.`);\n    }\n    for (const accessor of Object.keys(accessorValues)) {\n        if (!Object.prototype.hasOwnProperty.call(accessorValues, accessor)) {\n            continue;\n        }\n        safeSet(data, accessor, accessorValues[accessor], operation, createMissing);\n    }\n}\n/**\n * Performs bulk validation of data given an object, `validationData`, which describes all entries to test.\n *\n * @param {object}                           data - The data object to test.\n *\n * @param {Record<string, ValidationEntry>}  validationData - Key is the accessor / value is a validation entry.\n *\n * @param {string}                           [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validate(data, validationData = {}, dataName = 'data') {\n    if (typeof data !== 'object') {\n        throw new TypeError(`validate error: '${dataName}' is not an 'object'.`);\n    }\n    if (typeof validationData !== 'object') {\n        throw new TypeError(`validate error: 'validationData' is not an 'object'.`);\n    }\n    let result;\n    for (const key of Object.keys(validationData)) {\n        if (!Object.prototype.hasOwnProperty.call(validationData, key)) {\n            continue;\n        }\n        const entry = validationData[key];\n        switch (entry.test) {\n            case 'array':\n                result = validateArray(data, key, entry, dataName);\n                break;\n            case 'entry':\n                result = validateEntry(data, key, entry, dataName);\n                break;\n            case 'entry|array':\n                result = validateEntryOrArray(data, key, entry, dataName);\n                break;\n        }\n    }\n    return result;\n}\n/**\n * Validates all array entries against potential type and expected tests.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry object\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateArray(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataArray = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry?.required && typeof dataArray === 'undefined') {\n        return true;\n    }\n    if (!Array.isArray(dataArray)) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not an 'array'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if (typeof valEntry.type === 'string') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!(typeof dataArray[cntr] === valEntry.type)) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(TypeError, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not a '${valEntry.type}'.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    // If expected is a function then test all array entries against the test function. If expected is a Set then\n    // test all array entries for inclusion in the set. Otherwise, if expected is a string then test that all array\n    // entries as a `typeof` test against expected.\n    if (Array.isArray(valEntry.expected)) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.includes(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (valEntry.expected instanceof Set) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.has(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            try {\n                const result = valEntry.expected(dataArray[cntr]);\n                if (typeof result === 'undefined' || !result) {\n                    throw new Error(valEntry.message);\n                }\n            }\n            catch (err) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' failed validation: ${err.message}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * Validates data entry with a typeof check and potentially tests against the values in any given expected set.\n *\n * @param {object}            data - The object data to validate.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntry(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataEntry = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry.required && typeof dataEntry === 'undefined') {\n        return true;\n    }\n    if (valEntry.type && typeof dataEntry !== valEntry.type) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not a '${valEntry.type}'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if ((valEntry.expected instanceof Set && !valEntry.expected.has(dataEntry)) ||\n        (Array.isArray(valEntry.expected) && !valEntry.expected.includes(dataEntry))) {\n        if (valEntry.error) {\n            const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n            throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n        }\n        else {\n            return false;\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        try {\n            const result = valEntry.expected(dataEntry);\n            if (typeof result === 'undefined' || !result) {\n                throw new Error(valEntry.message);\n            }\n        }\n        catch (err) {\n            if (valEntry.error) {\n                const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n                throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' failed to validate: ${err.message}.`);\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Dispatches validation of data entry to string or array validation depending on data entry type.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   [entry] - A validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntryOrArray(data, accessor, entry, dataName = 'data') {\n    const dataEntry = safeAccess(data, accessor);\n    let result;\n    if (Array.isArray(dataEntry)) {\n        result = validateArray(data, accessor, entry, dataName);\n    }\n    else {\n        result = validateEntry(data, accessor, entry, dataName);\n    }\n    return result;\n}\n// Module private ---------------------------------------------------------------------------------------------------\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}         data - An object or array or any leaf.\n *\n * @param {Set<string>} [skipFreezeKeys] - An array of strings indicating keys of objects to not freeze.\n *\n * @returns {*} The frozen object.\n * @ignore\n * @private\n */\nfunction _deepFreeze(data, skipFreezeKeys) {\n    if (Array.isArray(data)) {\n        for (let cntr = 0; cntr < data.length; cntr++) {\n            _deepFreeze(data[cntr], skipFreezeKeys);\n        }\n    }\n    else if (isObject(data)) {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key) && !skipFreezeKeys?.has?.(key)) {\n                _deepFreeze(data[key], skipFreezeKeys);\n            }\n        }\n    }\n    return Object.freeze(data);\n}\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj) {\n    // Iterate and merge all source objects into target.\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        const obj = sourceObj[cntr];\n        for (const prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                // Handle the special property starting with '-=' to delete keys.\n                if (prop.startsWith('-=')) {\n                    delete target[prop.slice(2)];\n                    continue;\n                }\n                // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n                // otherwise assign obj[prop] to target[prop].\n                target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n                    obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n            }\n        }\n    }\n    return target;\n}\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}      data - An object, array, or any leaf value\n *\n * @param {Function} func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}  modify - If true then the result of the callback function is used to modify in place the\n *        given data.\n *\n * @returns {*} The data object.\n * @ignore\n * @private\n */\nfunction _depthTraverse(data, func, modify = false) {\n    if (modify) {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                data[cntr] = _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (isObject(data)) {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    data[key] = _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            data = func(data);\n        }\n    }\n    else {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (typeof data === 'object') {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            func(data);\n        }\n    }\n    return data;\n}\n/**\n * Private implementation of `getAccessorList`.\n *\n * @param {object}   data - An object to traverse.\n *\n * @returns {string[]} Accessor list.\n * @ignore\n * @private\n */\nfunction _getAccessorList(data) {\n    const accessors = [];\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            if (typeof data[key] === 'object') {\n                const childKeys = _getAccessorList(data[key]);\n                childKeys.forEach((childKey) => {\n                    accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\n                });\n            }\n            else {\n                accessors.push(key);\n            }\n        }\n    }\n    return accessors;\n}\n/**\n * Creates a new error of type `clazz` adding the field `_objectValidateError` set to true.\n *\n * @param {Error}    clazz - Error class to instantiate.\n *\n * @param {string}   message - An error message.\n *\n * @returns {*} Error of the clazz.\n * @ignore\n * @private\n */\nfunction _validateError(clazz, message = void 0) {\n    const error = new clazz(message);\n    error._objectValidateError = true;\n    return error;\n}\n\nexport { deepFreeze, deepMerge, depthTraverse, getAccessorList, hasAccessor, hasGetter, hasPrototype, hasSetter, isAsyncIterable, isIterable, isObject, isPlainObject, klona, objectKeys, objectSize, safeAccess, safeBatchSet, safeEqual, safeSet, safeSetAll, validate, validateArray, validateEntry, validateEntryOrArray };\n//# sourceMappingURL=index.js.map\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a minimal writable store by having a\n * `subscribe` and `set` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a {@link MinimalWritable} store.\n */\nfunction isMinimalWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe`, `set, and `update`\n * functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function' &&\n          typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\nexport { isMinimalWritableStore, isReadableStore, isWritableStore, subscribeFirstRest, subscribeIgnoreFirst };\n//# sourceMappingURL=index.js.map\n","import { writable, get } from 'svelte/store';\nimport { isMinimalWritableStore } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { Strings } from '@typhonjs-fvtt/runtime/util';\nimport { isIterable, safeAccess } from '@typhonjs-fvtt/runtime/util/object';\n\nclass DynReducerUtils {\n    /**\n     * Checks for array equality between two arrays of numbers.\n     *\n     * @param a - Array A\n     *\n     * @param b - Array B\n     *\n     * @returns Arrays are equal.\n     */\n    static arrayEquals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        /* c8 ignore next */\n        if (a === null || b === null) {\n            return false;\n        }\n        /* c8 ignore next */\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let cntr = a.length; --cntr >= 0;) {\n            /* c8 ignore next */\n            if (a[cntr] !== b[cntr]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Provides a solid string hashing algorithm.\n     *\n     * Sourced from: https://stackoverflow.com/a/52171480\n     *\n     * @param str - String to hash.\n     *\n     * @param seed - A seed value altering the hash.\n     *\n     * @returns Hash code.\n     */\n    static hashString(str, seed = 0) {\n        let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n        for (let ch, i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i);\n            h1 = Math.imul(h1 ^ ch, 2654435761);\n            h2 = Math.imul(h2 ^ ch, 1597334677);\n        }\n        h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n        h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n        return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n    }\n    /**\n     * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\n     *\n     * Currently objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\n     * case, but it is not common to use objects as keys in Maps.\n     *\n     * @param value - An unknown value to convert to a number.\n     */\n    static hashUnknown(value) {\n        if (value === null || value === void 0) {\n            return 0;\n        }\n        let result = 0;\n        switch (typeof value) {\n            case 'boolean':\n                result = value ? 1 : 0;\n                break;\n            case 'bigint':\n                result = Number(BigInt.asIntN(64, value));\n                break;\n            case 'function':\n                result = this.hashString(value.name);\n                break;\n            case 'number':\n                result = Number.isFinite(value) ? value : 0;\n                break;\n            case 'object':\n                // TODO: consider hashing an object IE `object-hash` and convert to number.\n                break;\n            case 'string':\n                result = this.hashString(value);\n                break;\n            case 'symbol':\n                result = this.hashString(Symbol.keyFor(value));\n                break;\n        }\n        return result;\n    }\n    /**\n     * @param target -\n     *\n     * @param Prototype -\n     *\n     * @returns target constructor function has Prototype.\n     */\n    static hasPrototype(target, Prototype) {\n        /* c8 ignore next */\n        if (typeof target !== 'function') {\n            return false;\n        }\n        if (target === Prototype) {\n            return true;\n        }\n        // Walk parent prototype chain. Check for descriptor at each prototype level.\n        for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n            if (proto === Prototype) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\n     *\n     * @param data - Data to verify as iterable.\n     *\n     * @returns Is data iterable.\n     */\n    static isIterable(data) {\n        return data !== null && data !== void 0 && typeof data === 'object' &&\n            typeof data[Symbol.iterator] === 'function';\n    }\n}\n\n/**\n * Provides the `derived` API for all dynamic reducers.\n *\n * @template D, K, T\n */\nclass AdapterDerived {\n    #hostData;\n    #DerivedReducerCtor;\n    #parentIndex;\n    #derived = new Map();\n    #destroyed = false;\n    /**\n     * @param {DynDataHost<D>} hostData - Hosted data structure.\n     *\n     * @param {IndexerAPI<K, T>}  parentIndex - Any associated parent index API.\n     *\n     * @param {DynDerivedReducerCtor<T>} DerivedReducerCtor - The default derived reducer constructor function.\n     */\n    constructor(hostData, parentIndex, DerivedReducerCtor) {\n        this.#hostData = hostData;\n        this.#parentIndex = parentIndex;\n        this.#DerivedReducerCtor = DerivedReducerCtor;\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new derived reducer.\n     *\n     * @param {DynOptionsDerivedCreate<T>} options - Options defining the new derived reducer.\n     *\n     * @returns {DynDerivedReducer<D, K, T>} Newly created derived reducer.\n     */\n    create(options) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.create error: this instance has been destroyed.`);\n        }\n        let name;\n        let rest = {};\n        let ctor;\n        const DerivedReducerCtor = this.#DerivedReducerCtor;\n        if (typeof options === 'string') {\n            name = options;\n            ctor = DerivedReducerCtor;\n        }\n        else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor)) {\n            ctor = options;\n        }\n        else if (typeof options === 'object' && options !== null) {\n            ({ name, ctor = DerivedReducerCtor, ...rest } = options);\n        }\n        else {\n            throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\n        }\n        if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor)) {\n            throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\n        }\n        name = name ?? ctor?.name;\n        if (typeof name !== 'string') {\n            throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`);\n        }\n        const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\n        this.#derived.set(name, derivedReducer);\n        return derivedReducer;\n    }\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear() {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.destroy();\n        }\n        this.#derived.clear();\n    }\n    /**\n     * Deletes and destroys a derived reducer by name.\n     *\n     * @param {string}   name - Name of the derived reducer.\n     *\n     * @returns {boolean} true if an element in the Map existed and has been removed, or false if the element does not\n     *          exist.\n     */\n    delete(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.delete error: this instance has been destroyed.`);\n        }\n        const reducer = this.#derived.get(name);\n        if (reducer) {\n            reducer.destroy();\n        }\n        return this.#derived.delete(name);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.clear();\n        this.#hostData = [null];\n        this.#parentIndex = null;\n        this.#destroyed = true;\n    }\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param {string}   name - Name of derived reducer.\n     *\n     * @returns {DynDerivedReducer<D, K, T>} Any associated derived reducer.\n     */\n    get(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.get error: this instance has been destroyed.`);\n        }\n        return this.#derived.get(name);\n    }\n    /**\n     * Updates all managed derived reducer indexes.\n     *\n     * @param {boolean}  [force=false] - Force an update to subscribers.\n     */\n    update(force = false) {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.index.update(force);\n        }\n    }\n}\n\nclass AdapterFilters {\n    #filtersData;\n    #indexUpdate;\n    #mapUnsubscribe = new Map();\n    constructor(indexUpdate, filtersAdapter) {\n        this.#indexUpdate = indexUpdate;\n        this.#filtersData = filtersAdapter;\n        Object.freeze(this);\n    }\n    get length() { return this.#filtersData.filters.length; }\n    *[Symbol.iterator]() {\n        if (this.#filtersData.filters.length === 0) {\n            return;\n        }\n        for (const entry of this.#filtersData.filters) {\n            yield { ...entry };\n        }\n    }\n    add(...filters) {\n        /**\n         * Tracks the number of filters added that have subscriber functionality.\n         */\n        let subscribeCount = 0;\n        for (const filter of filters) {\n            const filterType = typeof filter;\n            if (filterType !== 'function' && (filterType !== 'object' || filter === null)) {\n                throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\n            }\n            let data = void 0;\n            let subscribeFn = void 0;\n            if (filterType === 'function') {\n                data = {\n                    id: void 0,\n                    filter: filter,\n                    weight: 1\n                };\n                subscribeFn = filter.subscribe;\n            }\n            else if (filterType === 'object') {\n                if ('filter' in filter) {\n                    if (typeof filter.filter !== 'function') {\n                        throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                    }\n                    if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\n                        (filter.weight < 0 || filter.weight > 1)) {\n                        throw new TypeError(`AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                    }\n                    data = {\n                        id: filter.id !== void 0 ? filter.id : void 0,\n                        filter: filter.filter,\n                        weight: filter.weight || 1\n                    };\n                    subscribeFn = filter.filter.subscribe ?? filter.subscribe;\n                }\n                else {\n                    throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                }\n            }\n            // Find the index to insert where data.weight is less than existing values weight.\n            const index = this.#filtersData.filters.findIndex((value) => {\n                return data.weight < value.weight;\n            });\n            // If an index was found insert at that location.\n            if (index >= 0) {\n                this.#filtersData.filters.splice(index, 0, data);\n            }\n            else // push to end of filters.\n             {\n                this.#filtersData.filters.push(data);\n            }\n            if (typeof subscribeFn === 'function') {\n                const unsubscribe = subscribeFn(this.#indexUpdate);\n                // Ensure that unsubscribe is a function.\n                if (typeof unsubscribe !== 'function') {\n                    throw new TypeError('AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\n                }\n                // Ensure that the same filter is not subscribed to multiple times.\n                if (this.#mapUnsubscribe.has(data.filter)) {\n                    throw new Error('AdapterFilters error: Filter added already has an unsubscribe function registered.');\n                }\n                this.#mapUnsubscribe.set(data.filter, unsubscribe);\n                subscribeCount++;\n            }\n        }\n        // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n        // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\n        if (subscribeCount < filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n    clear() {\n        this.#filtersData.filters.length = 0;\n        // Unsubscribe from all filters with subscription support.\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\n            unsubscribe();\n        }\n        this.#mapUnsubscribe.clear();\n        this.#indexUpdate();\n    }\n    remove(...filters) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        for (const data of filters) {\n            // Handle the case that the filter may either be a function or a filter entry / object.\n            const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n                data.filter : void 0;\n            if (!actualFilter) {\n                continue;\n            }\n            for (let cntr = this.#filtersData.filters.length; --cntr >= 0;) {\n                if (this.#filtersData.filters[cntr].filter === actualFilter) {\n                    this.#filtersData.filters.splice(cntr, 1);\n                    // Invoke any unsubscribe function for given filter then remove from tracking.\n                    let unsubscribe = void 0;\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function') {\n                        unsubscribe();\n                        this.#mapUnsubscribe.delete(actualFilter);\n                    }\n                }\n            }\n        }\n        // Update the index a filter was removed.\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n    removeBy(callback) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            const remove = callback.call(callback, { ...data });\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            // Reverse remove boolean to properly filter / remove this filter.\n            return !remove;\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n    removeById(...ids) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            let remove = 0;\n            for (const id of ids) {\n                remove |= (data.id === id ? 1 : 0);\n            }\n            // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\n            if (!!remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            return !remove; // Swap here to actually remove the item via array filter method.\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n}\n\n/**\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\n * applied.\n *\n * @template D, K, T\n */\nclass AdapterIndexer {\n    derivedAdapter;\n    filtersData;\n    hostData;\n    hostUpdate;\n    indexData;\n    sortData;\n    sortFn;\n    destroyed = false;\n    /**\n     * @param {DynDataHost<D>}       hostData - Hosted data structure.\n     *\n     * @param {Function}             hostUpdate - Host update function invoked on index updates.\n     *\n     * @param {DynIndexerAPI<K, T>} [parentIndexer] - Any associated parent index API.\n     *\n     * @returns Indexer adapter instance.\n     */\n    constructor(hostData, hostUpdate, parentIndexer) {\n        this.hostData = hostData;\n        this.hostUpdate = hostUpdate;\n        this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\n    }\n    /**\n     * @returns Returns whether the index is active.\n     */\n    get active() {\n        return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\n            this.indexData.parent?.active === true;\n    }\n    /**\n     * @returns Returns length of reduced index.\n     */\n    get length() {\n        return this.indexData.index ? this.indexData.index.length : 0;\n    }\n    /* c8 ignore start */\n    /**\n     * @returns Returns reversed state.\n     */\n    get reversed() { return this.indexData.reversed; }\n    /* c8 ignore end */\n    /**\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) { this.indexData.reversed = reversed; }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\n     * is set to null. Set calculated new hash value to the index adapter hash value.\n     *\n     * After hash generation compare old and new hash values and perform an update if they are different. If they are\n     * equal check for array equality between the old and new index array and perform an update if they are not equal.\n     *\n     * @param oldIndex - Old index array.\n     *\n     * @param oldHash - Old index hash value.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    calcHashUpdate(oldIndex, oldHash, force = false) {\n        // Use force if a boolean otherwise default to false.\n        const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\n        let newHash = null;\n        const newIndex = this.indexData.index;\n        if (newIndex) {\n            for (let cntr = newIndex.length; --cntr >= 0;) {\n                newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\n            }\n        }\n        this.indexData.hash = newHash;\n        if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true)) {\n            this.hostUpdate();\n        }\n    }\n    /**\n     * Destroys all resources.\n     */\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.indexData.index = null;\n        this.indexData.hash = null;\n        this.indexData.reversed = null;\n        this.indexData.parent = null;\n        this.destroyed = true;\n    }\n    /**\n     * Store associated filter and sort data that are constructed after the indexer.\n     *\n     * @param filtersData - Associated AdapterFilters instance.\n     *\n     * @param sortData - Associated AdapterSort instance.\n     *\n     * @param derivedAdapter - Associated AdapterDerived instance.\n     */\n    initAdapters(filtersData, sortData, derivedAdapter) {\n        this.filtersData = filtersData;\n        this.sortData = sortData;\n        this.derivedAdapter = derivedAdapter;\n        this.sortFn = this.createSortFn();\n    }\n}\n\nclass AdapterSort {\n    #sortData;\n    #indexUpdate;\n    #unsubscribe;\n    constructor(indexUpdate, sortData) {\n        this.#indexUpdate = indexUpdate;\n        this.#sortData = sortData;\n        Object.freeze(this);\n    }\n    clear() {\n        const oldCompareFn = this.#sortData.compareFn;\n        this.#sortData.compareFn = null;\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        // Only update index if an old compare function is set.\n        if (typeof oldCompareFn === 'function') {\n            this.#indexUpdate(true);\n        }\n    }\n    set(sort) {\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        let compareFn = void 0;\n        let subscribeFn = void 0;\n        switch (typeof sort) {\n            case 'function':\n                compareFn = sort;\n                subscribeFn = sort.subscribe;\n                break;\n            case 'object':\n                // Early out if sort is null / noop.\n                if (sort === null) {\n                    break;\n                }\n                if (typeof sort.compare !== 'function') {\n                    throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\n                }\n                compareFn = sort.compare;\n                subscribeFn = sort.compare.subscribe ?? sort.subscribe;\n                break;\n        }\n        if (typeof compareFn === 'function') {\n            this.#sortData.compareFn = compareFn;\n        }\n        else {\n            const oldCompareFn = this.#sortData.compareFn;\n            this.#sortData.compareFn = null;\n            // Update index if the old compare function exists.\n            if (typeof oldCompareFn === 'function') {\n                this.#indexUpdate();\n            }\n            return;\n        }\n        if (typeof subscribeFn === 'function') {\n            this.#unsubscribe = subscribeFn(this.#indexUpdate);\n            // Ensure that unsubscribe is a function.\n            if (typeof this.#unsubscribe !== 'function') {\n                throw new Error(`AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\n            }\n        }\n        else {\n            // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\n            // Only manually update the index if there is no subscriber functionality.\n            this.#indexUpdate(true);\n        }\n    }\n}\n\nclass IndexerAPI {\n    #indexData;\n    /**\n     * Provides a getter to determine if the index is active.\n     */\n    active;\n    /**\n     * Provides length of reduced / indexed elements.\n     */\n    length;\n    /**\n     * Manually invoke an update of the index.\n     *\n     * @param force - Force update to any subscribers.\n     */\n    update;\n    constructor(adapterIndexer) {\n        this.#indexData = adapterIndexer.indexData;\n        this.update = adapterIndexer.update.bind(adapterIndexer);\n        // Defines getters on the public API to get the index hash, active state, and index length.\n        Object.defineProperties(this, {\n            active: { get: () => adapterIndexer.active },\n            length: { get: () => adapterIndexer.length }\n        });\n        Object.freeze(this);\n    }\n    get hash() {\n        return this.#indexData.hash;\n    }\n    *[Symbol.iterator]() {\n        const indexData = this.#indexData;\n        if (!indexData.index) {\n            return;\n        }\n        const reversed = indexData.reversed;\n        const length = indexData.index.length;\n        if (reversed) {\n            for (let cntr = length; --cntr >= 0;) {\n                yield indexData.index[cntr];\n            }\n        }\n        else {\n            for (let cntr = 0; cntr < length; cntr++) {\n                yield indexData.index[cntr];\n            }\n        }\n    }\n}\n\n/**\n * Provides a public API for managing derived reducers.\n */\nclass DerivedAPI {\n    clear;\n    create;\n    delete;\n    destroy;\n    get;\n    constructor(adapterDerived) {\n        this.clear = adapterDerived.clear.bind(adapterDerived);\n        this.create = adapterDerived.create.bind(adapterDerived);\n        this.delete = adapterDerived.delete.bind(adapterDerived);\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\n        this.get = adapterDerived.get.bind(adapterDerived);\n        Object.freeze(this);\n    }\n}\n\n/**\n */\nclass ArrayIndexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0][a], this.hostData[0][b]);\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns {number[]} New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const array = this.hostData[0];\n        if (!array) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const adjustedIndex of parentIndex) {\n                const value = array[adjustedIndex];\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(adjustedIndex);\n                }\n            }\n        }\n        else {\n            for (let cntr = 0, length = array.length; cntr < length; cntr++) {\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(array[cntr])) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(cntr);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param {boolean} [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const array = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && array?.length !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && Array.isArray(array)) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = [...Array(array.length).keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n *\n * Note: That you should never directly create an instance of a derived reducer, but instead use the\n * {@link DynArrayReducerDerived.initialize} callback to set up any initial state in a custom derived reducer.\n *\n * @template T\n */\nclass DynArrayReducerDerived {\n    #array;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param {DynDataHost<T[]>}           array - Data host array.\n     *\n     * @param {DynIndexerAPI<number, T>}  parentIndex - Parent indexer.\n     *\n     * @param {DynDataOptions<T>}          options - Any filters and sort functions to apply.\n     */\n    constructor(array, parentIndex, options) {\n        this.#array = array;\n        this.#index = new ArrayIndexer(this.#array, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        const { filters, sort, ...optionsRest } = options;\n        if (filters !== void 0) {\n            if (!DynReducerUtils.isIterable(filters)) {\n                throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n            }\n            this.filters.add(...filters);\n        }\n        if (sort !== void 0) {\n            if (typeof sort !== 'function' && (typeof sort !== 'object' || sort === null)) {\n                throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n            }\n            this.sort.set(sort);\n        }\n        // Invoke a custom initialization for child classes.\n        this.initialize(optionsRest);\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link DynIndexerAPI.update} with `true` to recalculate the index and\n     * notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.index.length :\n            array ? array.length : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#array = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @param [optionsRest] - Any additional custom options passed beyond {@link DynDataOptions}.\n     *\n     * @protected\n     */\n    initialize(optionsRest) { }\n    /**\n     * Provides an iterator for data stored in DerivedArrayReducer.\n     *\n     * @returns {IterableIterator<T>}\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedArrayReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n *\n * @template T\n */\nclass DynArrayReducer {\n    #array = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataIterable = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && Symbol.iterator in data) {\n            dataIterable = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data)) {\n                throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\n            }\n            dataIterable = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataIterable) {\n            this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\n        }\n        this.#index = new ArrayIndexer(this.#array, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke `update` via {@link DynArrayReducer.index} with `true` to recalculate\n     * the index and notify all subscribers.\n     *\n     * @returns {T[]|null} The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns {DynDerivedAPI<T[], number, T>} Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns {DynIndexerAPI<number, T>} Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * @returns {boolean} Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            array ? array.length : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns {DynAdapterSort<T>} The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param {boolean}  reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#array = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param {T[] | Iterable<T> | null}   data - New data to set to internal data.\n     *\n     * @param {boolean} [replace=false] - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const array = this.#array[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!Array.isArray(array) || replace) {\n            if (data) {\n                this.#array[0] = Array.isArray(data) ? data : [...data];\n            }\n        }\n        else {\n            if (data) {\n                // Remove all entries in internal data. This will not replace any initially set array.\n                array.length = 0;\n                // Add all new data.\n                array.push(...data);\n            }\n            else {\n                this.#array[0] = null;\n            }\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynArrayReducer instance.\n     *\n     * @param {(value: DynArrayReducer<T>) => void} handler - Callback function that is invoked on update / changes.\n     *        Receives `this` reference.\n     *\n     * @returns {() => void} Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynArrayReducer.\n     *\n     * @yields {T}\n     * @returns {IterableIterator<T>} Iterator for data stored in DynArrayReducer.\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @template K, T\n */\nclass MapIndexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0].get(a), this.hostData[0].get(b));\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns {K[]} New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const map = this.hostData[0];\n        if (!map) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const key of parentIndex) {\n                const value = map.get(key);\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        else {\n            for (const key of map.keys()) {\n                include = true;\n                const value = map.get(key);\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param {boolean}  [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const map = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && map?.size !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && map instanceof Map) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = this.indexData.index = [...map.keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for Maps / DynMapReducer.\n *\n * Note: That you should never directly create an instance of a derived reducer, but instead use the\n * {@link DynMapReducerDerived.initialize} callback to set up any initial state in a custom derived reducer.\n *\n * @template K, T\n */\nclass DynMapReducerDerived {\n    #map;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param {DynDataHost<Map<K, T>>}  map - Data host Map.\n     *\n     * @param {DynIndexerAPI<K, T>}    parentIndex - Parent indexer.\n     *\n     * @param {DynDataOptions<T>}       options - Any filters and sort functions to apply.\n     */\n    constructor(map, parentIndex, options) {\n        this.#map = map;\n        this.#index = new MapIndexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        const { filters, sort, ...optionsRest } = options;\n        if (filters !== void 0) {\n            if (!DynReducerUtils.isIterable(filters)) {\n                throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n            }\n            this.filters.add(...filters);\n        }\n        if (sort !== void 0) {\n            if (typeof sort !== 'function' && (typeof sort !== 'object' || sort === null)) {\n                throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n            }\n            this.sort.set(sort);\n        }\n        // Invoke custom initialization for child classes.\n        this.initialize(optionsRest);\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: The returned map is the same map set by the main reducer. If any changes are performed to the data\n     * externally do invoke {@link DynIndexerAPI.update} with `true` to recalculate the index and notify all\n     * subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.index.length :\n            map ? map.size : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#map = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @param [optionsRest] - Any additional custom options passed beyond {@link DynDataOptions}.\n     *\n     * @protected\n     */\n    initialize(optionsRest) { }\n    /**\n     * Provides an iterator for data stored in DerivedMapReducer.\n     *\n     * @returns {IterableIterator<T>}\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedMapReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed Map with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n *\n * @template K, T\n */\nclass DynMapReducer {\n    #map = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param {Map<K, T> | DynMapData<K, T>} [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataMap = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && data instanceof Map) {\n            dataMap = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !(data.data instanceof Map)) {\n                throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\n            }\n            dataMap = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataMap) {\n            this.#map[0] = dataMap;\n        }\n        this.#index = new MapIndexer(this.#map, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynMap.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: When a map is set as data then that map is used as the internal data. If any changes are performed to the\n     * data externally do invoke `update` via {@link DynMapReducer.index} with `true` to recalculate the  index and\n     * notify all subscribers.\n     *\n     * @returns {Map<K, T> | null} The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns {DynDerivedAPI<Map<K, T>, K, T>} Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns {DynAdapterFilters<T>} The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns {DynIndexerAPI<K, T>} Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * @returns {boolean} Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            map ? map.size : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns {DynAdapterSort<T>} The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param {boolean} reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#map = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param {Map<K, T> | null}  data - New data to set to internal data.\n     *\n     * @param {boolean} [replace=false] - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const map = this.#map[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!(map instanceof Map) || replace) {\n            this.#map[0] = data instanceof Map ? data : null;\n        }\n        else if (data instanceof Map && map instanceof Map) {\n            // Create a set of all current entry IDs.\n            const removeKeySet = new Set(map.keys());\n            for (const key of data.keys()) {\n                map.set(key, data.get(key));\n                if (removeKeySet.has(key)) {\n                    removeKeySet.delete(key);\n                }\n            }\n            // Remove entries that are no longer in data.\n            for (const key of removeKeySet) {\n                map.delete(key);\n            }\n        }\n        else if (data === null) {\n            this.#map[0] = null;\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynMapReducer instance.\n     *\n     * @param {(value: DynMapReducer<K, T>) => void} handler - Callback function that is invoked on update / changes.\n     *        Receives `this` reference.\n     *\n     * @returns {() => void} Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynMapReducer.\n     *\n     * @returns {IterableIterator<T>}\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Creates a filter function to compare objects by a given accessor key against a regex test. The returned function\n * is also a writable Svelte store that builds a regex from the stores value.\n *\n * This filter function can be used w/ a dynamic reducer and bound as a store to input elements.\n *\n * @param {string | Iterable<string>}   accessors - Property key / accessors to lookup key to compare. To access deeper\n *        entries into the object format the accessor string with `.` between entries to walk.\n *\n * @param {object}   [opts] - Optional parameters.\n *\n * @param {boolean}  [opts.accessWarn=false] - When true warnings will be posted if accessor not retrieved.\n *\n * @param {boolean}  [opts.caseSensitive=false] - When true regex test is case-sensitive.\n *\n * @param {import('#runtime/svelte/store/util').MinimalWritable<string>}  [opts.store] - Use the provided minimal\n *        writable store to instead of creating a default `writable` store.\n *\n * @returns {((data: object) => boolean) & import('#runtime/svelte/store/util').MinimalWritable<string>}\n *        The query string filter.\n */\nfunction regexObjectQuery(accessors, { accessWarn = false, caseSensitive = false, store } = {})\n{\n   let keyword = '';\n   let regex;\n\n   if (store !== void 0 && !isMinimalWritableStore(store))\n   {\n      throw new TypeError(`regexObjectQuery error: 'store' is not a minimal writable store.`);\n   }\n\n   const storeKeyword = store ? store : writable(keyword);\n\n   // If an existing store is provided then set initial values.\n   if (store)\n   {\n      const current = get(store);\n\n      if (typeof current === 'string')\n      {\n         keyword = Strings.normalize(current);\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\n      }\n      else\n      {\n         store.set(keyword);\n      }\n   }\n\n   /**\n    * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\n    * created from the search input element.\n    *\n    * @param {object} data - Data object to test against regex.\n    *\n    * @returns {boolean} AnimationStore filter state.\n    */\n   function filterQuery(data)\n   {\n      if (keyword === '' || !regex) { return true; }\n\n      if (isIterable(accessors))\n      {\n         for (const accessor of accessors)\n         {\n            const value = safeAccess(data, accessor);\n            if (typeof value !== 'string')\n            {\n               if (accessWarn)\n               {\n                  console.warn(`regexObjectQuery warning: could not access string data from '${accessor}'.`);\n               }\n\n               continue;\n            }\n\n            if (regex.test(Strings.normalize(value))) { return true; }\n         }\n\n         return false;\n      }\n      else\n      {\n         const value = safeAccess(data, accessors);\n\n         if (typeof value !== 'string')\n         {\n            if (accessWarn)\n            {\n               console.warn(`regexObjectQuery warning: could not access string data from '${accessors}'.`);\n            }\n\n            return false;\n         }\n\n         return regex.test(Strings.normalize(value));\n      }\n   }\n\n   /**\n    * Create a custom store that changes when the search keyword changes.\n    *\n    * @param {(string) => void} handler - A callback function that accepts strings.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n    */\n   filterQuery.subscribe = (handler) =>\n   {\n      return storeKeyword.subscribe(handler);\n   };\n\n   /**\n    * Set\n    *\n    * @param {string}   value - A new value for the keyword / regex test.\n    */\n   filterQuery.set = (value) =>\n   {\n      if (typeof value === 'string')\n      {\n         keyword = Strings.normalize(value);\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\n         storeKeyword.set(keyword);\n      }\n   };\n\n   return filterQuery;\n}\n\nconst filters = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    regexObjectQuery: regexObjectQuery\n});\n\n/**\n * Provides helper functions to create dynamic store driven filters and sort functions for dynamic reducers. The\n * returned functions are also Svelte stores and can be added to a reducer as well as used as a store.\n */\nclass DynReducerHelper\n{\n   /**\n    * Returns the following filter functions:\n    * - regexObjectQuery(accessors, options); suitable for object reducers matching one or more property keys /\n    *   accessors against the store value as a regex. To access deeper entries into the object format the accessor\n    *   string with `.` between entries to walk. Optional parameters include logging access warnings, case sensitivity,\n    *   and passing in an existing store.\n    *\n    * @returns {{\n    *    regexObjectQuery: (accessors: string|Iterable<string>, options?: {accessWarn?: boolean,\n    *     caseSensitive?: boolean, store?: import('svelte/store').Writable<string>}) =>\n    *      (((data: {}) => boolean) & import('#runtime/svelte/store/util').MinimalWritable<string>)\n    * }} All available filters.\n    */\n   static get filters() { return filters; }\n}\n\nexport { DynArrayReducer, DynArrayReducerDerived, DynMapReducer, DynMapReducerDerived, DynReducerHelper };\n//# sourceMappingURL=index.js.map\n","import { tick } from 'svelte';\nimport { Hashing } from '@typhonjs-fvtt/runtime/util';\nimport { isPlainObject, isObject, hasPrototype } from '@typhonjs-fvtt/runtime/util/object';\nimport { DynMapReducer } from '@typhonjs-fvtt/runtime/svelte/store/reducer';\n\n/**\n * Provides management of reactive embedded collections.\n *\n * TODO: Consider subscribing to TJSDocument rather than exposing {@link EmbeddedStoreManager.handleDocChange} and\n * {@link EmbeddedStoreManager.handleUpdate}\n */\nclass EmbeddedStoreManager\n{\n   /**\n    * RegExp for detecting CRUD updates for renderContext.\n    *\n    * @type {RegExp}\n    */\n   static #renderContextRegex = /(?<action>create|delete|update)(?<sep>\\.?)(?<name>\\w+)/;\n\n   /**\n    * @type {Map<string, EmbeddedCollectionData<any>>}\n    */\n   #name = new Map();\n\n   /**\n    * @type {foundry.abstract.Document[]}\n    */\n   #document;\n\n   /**\n    * @type {Map<string, string>}\n    */\n   #collectionToDocName = new Map();\n\n   /**\n    * @type {Set<string>}\n    */\n   #embeddedNames = new Set();\n\n   /**\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\n    */\n   constructor(document)\n   {\n      this.#document = document;\n\n      this.handleDocChange();\n\n      Object.seal(this);\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\n    *\n    * @param {import('#runtime/svelte/store/reducer').DynOptionsMapCreate<string, T>} options - DynMapReducer\n    *        creation options.\n    *\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, T>} DynMapReducer instance.\n    */\n   create(FoundryDoc, options)\n   {\n      const docName = FoundryDoc?.documentName;\n\n      if (typeof docName !== 'string')\n      {\n         throw new TypeError(\n          `EmbeddedStoreManager.create error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n      }\n\n      /** @type {foundry.abstract.Document} */\n      const doc = this.#document[0];\n\n      let collection = null;\n\n      if (doc)\n      {\n         try\n         {\n            collection = doc.getEmbeddedCollection(docName);\n         }\n         catch (err)\n         {\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${docName}`);\n         }\n      }\n\n      let embeddedData;\n\n      if (!this.#name.has(docName))\n      {\n         embeddedData = {\n            collection,\n            stores: new Map()\n         };\n\n         this.#name.set(docName, embeddedData);\n      }\n      else\n      {\n         embeddedData = this.#name.get(docName);\n      }\n\n      /** @type {string} */\n      let name;\n\n      /** @type {import('#runtime/svelte/store/reducer').DynDataOptions<T>} */\n      let rest = {};\n\n      /** @type {import('#runtime/svelte/store/reducer').IDynMapReducerCtor<string, T>} */\n      let ctor;\n\n      if (typeof options === 'string')\n      {\n         name = options;\n         ctor = DynMapReducer;\n      }\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\n      {\n         ctor = options;\n      }\n      else if (isObject(options))\n      {\n         ({ name, ctor = DynMapReducer, ...rest } = options);\n      }\n      else\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\n      }\n\n      if (!hasPrototype(ctor, DynMapReducer))\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\n      }\n\n      name = name ?? ctor?.name;\n\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`);\n      }\n\n      if (embeddedData.stores.has(name))\n      {\n         return embeddedData.stores.get(name);\n      }\n      else\n      {\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\n         const store = new ctor(storeOptions);\n         embeddedData.stores.set(name, store);\n         return store;\n      }\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\n    * store name just that particular store is destroyed and removed.\n    *\n    * @param {T}   [FoundryDoc] - A Foundry document class / constructor.\n    *\n    * @param {string}   [storeName] - Specific store name.\n    *\n    * @returns {boolean} One or more stores destroyed?\n    */\n   destroy(FoundryDoc, storeName)\n   {\n      let count = 0;\n\n      // Destroy all embedded stores\n      if (FoundryDoc === void 0)\n      {\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n            for (const store of embeddedData.stores.values())\n            {\n               store.destroy();\n               count++;\n            }\n         }\n\n         this.#name.clear();\n      }\n      else\n      {\n         const docName = FoundryDoc?.documentName;\n\n         if (typeof docName !== 'string')\n         {\n            throw new TypeError(\n             `EmbeddedStoreManager.delete error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n         }\n\n         if (storeName === void 0)\n         {\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n               for (const store of embeddedData.stores.values())\n               {\n                  store.destroy();\n                  count++;\n               }\n            }\n\n            this.#name.delete(docName);\n         }\n         else if (storeName === 'string')\n         {\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               const store = embeddedData.stores.get(storeName);\n               if (store)\n               {\n                  store.destroy();\n                  count++;\n               }\n            }\n         }\n      }\n\n      return count > 0;\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\n    *\n    * @param {string} storeName - Name of the embedded collection to retrieve.\n    *\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, InstanceType<T>>} DynMapReducer\n    *          instance.\n    */\n   get(FoundryDoc, storeName)\n   {\n      const docName = FoundryDoc?.documentName;\n\n      if (typeof docName !== 'string')\n      {\n         throw new TypeError(\n          `EmbeddedStoreManager.get error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n      }\n\n      if (!this.#name.has(docName)) { return void 0; }\n\n      return this.#name.get(docName).stores.get(storeName);\n   }\n\n   /**\n    * Updates all existing embedded collection stores with the associated embedded collection\n    */\n   handleDocChange()\n   {\n      const doc = this.#document[0];\n\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         const existingEmbeddedNames = new Set(this.#name.keys());\n\n         /** @type {[string, string][]} */\n         const embeddedNames = Object.entries(doc.constructor?.metadata?.embedded ?? []);\n\n         this.#collectionToDocName.clear();\n\n         // Remove all previously stored embedded name CRUD keys.\n         this.#embeddedNames.clear();\n\n         for (const [docName, collectionName] of embeddedNames)\n         {\n            // Remove processed embedded doc name from existingEmbeddedNames set.\n            existingEmbeddedNames.delete(docName);\n\n            // Update CRUD keys for v10.\n            this.#embeddedNames.add(`create${docName}`);\n            this.#embeddedNames.add(`delete${docName}`);\n            this.#embeddedNames.add(`update${docName}`);\n\n            // Update CRUD keys for v11.\n            this.#embeddedNames.add(`create.${collectionName}`);\n            this.#embeddedNames.add(`delete.${collectionName}`);\n            this.#embeddedNames.add(`update.${collectionName}`);\n\n            // Update CRUD keys for v12.\n            this.#embeddedNames.add(`create${collectionName}`);\n            this.#embeddedNames.add(`delete${collectionName}`);\n            this.#embeddedNames.add(`update${collectionName}`);\n\n            // v10 collection to doc name lookup.\n            this.#collectionToDocName.set(docName, docName);\n            this.#collectionToDocName.set(collectionName, docName);\n\n            let collection = null;\n\n            try\n            {\n               // Update any existing stores with the actual collection.\n               collection = doc.getEmbeddedCollection(docName);\n            }\n            catch (err)\n            {\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${docName}`);\n            }\n\n            // Update EmbeddedData for new collection.\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               embeddedData.collection = collection;\n\n               // Update all existing stores.\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\n            }\n         }\n\n         // Update all existing embedded collections with null data that aren't processed above.\n         for (const embeddedName of existingEmbeddedNames)\n         {\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n            }\n         }\n      }\n      else // Reset all embedded reducer stores to null data.\n      {\n         this.#collectionToDocName.clear();\n         this.#embeddedNames.clear();\n\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n         }\n      }\n   }\n\n   /**\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\n    *\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\n    *\n    * @param {string}   renderContext - render context update from document.\n    */\n   handleUpdate(renderContext)\n   {\n      if (!this.#embeddedNames.has(renderContext)) { return; }\n\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\n\n      if (match)\n      {\n         const docOrCollectionName = match.groups.name;\n         const embeddedName = this.#collectionToDocName.get(docOrCollectionName);\n\n         if (!this.#name.has(embeddedName)) { return; }\n\n         for (const store of this.#name.get(embeddedName).stores.values())\n         {\n            store.index.update(true);\n         }\n      }\n   }\n}\n\n/**\n * @template T\n *\n * @typedef {object} EmbeddedCollectionData\n *\n * @property {foundry.abstract.Collection} collection -\n *\n * @property {Map<string, import('#runtime/svelte/store/reducer').DynMapReducer<string, T>>} stores -\n */\n\n/**\n * @template [T=import('./types').NamedDocumentConstructor]\n *\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n */\nclass TJSDocument\n{\n   /**\n    * Fake Application API that ClientDocumentMixin uses for document model callbacks.\n    *\n    * @type {{ close: Function, render: Function }}\n    */\n   #callbackAPI;\n\n   /**\n    * @type {T[]}\n    */\n   #document = [void 0];\n\n   /**\n    * @type {EmbeddedStoreManager}\n    */\n   #embeddedStoreManager;\n\n   /**\n    * @type {import('./types').EmbeddedAPI}\n    */\n   #embeddedAPI;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {{ delete?: Function, preDelete?: Function }}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentUpdateOptions) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentUpdateOptions}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\n    *\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\n    */\n   constructor(document, options = {})\n   {\n      this.#uuidv4 = `tjs-document-${Hashing.uuidv4()}`;\n\n      this.#callbackAPI = {\n         close: this.#deleted.bind(this),\n         render: this.#updateSubscribers.bind(this)\n      };\n\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(document);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(document);\n      }\n   }\n\n   /**\n    * @returns {import('./types').EmbeddedAPI} Embedded store manager.\n    */\n   get embedded()\n   {\n      if (!this.#embeddedAPI)\n      {\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\n\n         /** @type {import('./types').EmbeddedAPI} */\n         this.#embeddedAPI = {\n            create: (doc, options) => this.#embeddedStoreManager.create(doc, options),\n            destroy: (doc, storeName) => this.#embeddedStoreManager.destroy(doc, storeName),\n            get: (doc, storeName) => this.#embeddedStoreManager.get(doc, storeName)\n         };\n      }\n\n      return this.#embeddedAPI;\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentUpdateOptions} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuidv4() { return this.#uuidv4; }\n\n   /**\n    * Register the callback API with the underlying Foundry document.\n    */\n   #callbackRegister()\n   {\n      const doc = this.#document[0];\n      if (doc instanceof globalThis.foundry.abstract.Document && isObject(doc?.apps) && !doc.apps[this.#uuidv4])\n      {\n         doc.apps[this.#uuidv4] = this.#callbackAPI;\n      }\n   }\n\n   /**\n    * Unregister the callback API with the underlying Foundry document.\n    */\n   #callbackUnregister()\n   {\n      const doc = this.#document[0];\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         delete doc?.apps?.[this.#uuidv4];\n      }\n   }\n\n   /**\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const doc = this.#document[0];\n\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\n      if (doc instanceof globalThis.foundry.abstract.Document && !doc?.collection?.has(doc.id))\n      {\n         this.#setDocument(void 0);\n\n         if (typeof this.#options.preDelete === 'function') { await this.#options.preDelete(doc); }\n\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\n\n         if (typeof this.#options.delete === 'function') { await this.#options.delete(doc); }\n\n         // Allow subscribers to be able to query `updateOptions` involving any reactive statements.\n         await tick();\n\n         this.#updateOptions = void 0;\n      }\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * ClientDocumentMixin `apps` tracking object.\n    */\n   destroy()\n   {\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.destroy();\n         this.#embeddedStoreManager = void 0;\n         this.#embeddedAPI = void 0;\n      }\n\n      this.#setDocument(void 0);\n\n      this.#options.delete = void 0;\n      this.#options.preDelete = void 0;\n\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @returns {T} Current document\n    */\n   get() { return this.#document[0]; }\n\n   /**\n    * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n    *\n    * @param {object}   data - Drop transfer data.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.compendium=true] - Accept compendium documents.\n    *\n    * @param {boolean}  [opts.world=true] - Accept world documents.\n    *\n    * @param {string[]} [opts.types] - Require the `data.type` to match entry in `types`.\n    *\n    * @returns {string|undefined} Foundry UUID for drop data.\n    */\n   static getUUIDFromDataTransfer(data, { compendium = true, world = true, types = void 0 } = {})\n   {\n      if (!isObject(data)) { return void 0; }\n      if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n      let uuid = void 0;\n\n      if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n      {\n         const isCompendium = data.uuid.startsWith('Compendium');\n\n         if (isCompendium && compendium)\n         {\n            uuid = data.uuid;\n         }\n         else if (world)\n         {\n            uuid = data.uuid;\n         }\n      }\n\n      return uuid;\n   }\n\n\n   /**\n    * @param {T | undefined}  document - New document to set.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - New document update options to set.\n    */\n   set(document, options = {})\n   {\n      if (document !== void 0 && !(document instanceof globalThis.foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      // Only post an update if the document has changed.\n      if (this.#setDocument(document))\n      {\n         // Only add registration if there are current subscribers.\n         if (document instanceof globalThis.foundry.abstract.Document && this.#subscriptions.length)\n         {\n            this.#callbackRegister();\n         }\n\n         this.#updateSubscribers(false, { action: `tjs-set-${document === void 0 ? 'undefined' : 'new'}`, ...options });\n      }\n   }\n\n   /**\n    * Internally sets the new document being tracked.\n    *\n    * @param {T | undefined} doc -\n    *\n    * @returns {boolean} Whether the document changed.\n    */\n   #setDocument(doc)\n   {\n      const changed = doc !== this.#document[0];\n\n      // Unregister before setting new document state.\n      if (changed) { this.#callbackUnregister(); }\n\n      this.#document[0] = doc;\n\n      if (changed && this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\n\n      return changed;\n   }\n\n   /**\n    * Potentially sets new document from data transfer object.\n    *\n    * @param {object}   data - Document transfer data.\n    *\n    * @param {{ compendium?: boolean, world?: boolean, types?: string[] }}   [options] - Optional parameters for\n    *        {@link TJSDocument.getUUIDFromDataTransfer}.\n    *\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\n    */\n   async setFromDataTransfer(data, options)\n   {\n      return this.setFromUUID(TJSDocument.getUUIDFromDataTransfer(data, options));\n   }\n\n   /**\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n    *\n    * @param {string}   uuid - A Foundry UUID to lookup.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - New document update options to set.\n    *\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\n    */\n   async setFromUUID(uuid, options = {})\n   {\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\n\n      try\n      {\n         const doc = await globalThis.fromUuid(uuid);\n\n         if (doc)\n         {\n            this.set(doc, options);\n            return true;\n         }\n      }\n      catch (err) { /**/ }\n\n      return false;\n   }\n\n   /**\n    * Sets options for this document wrapper / store.\n    *\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && options.delete !== null && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function or null.`);\n      }\n\n      if (options.preDelete !== void 0 && options.preDelete !== null && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'preDelete' attribute in options is not a function or null.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete !== void 0)\n      {\n         this.#options.delete = typeof options.delete === 'function' ? options.delete : void 0;\n      }\n\n      if (options.preDelete !== void 0)\n      {\n         this.#options.preDelete = typeof options.preDelete === 'function' ? options.preDelete : void 0;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentUpdateOptions) => void} handler - Callback function that is\n    * invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\n\n      // Register callback with first subscriber.\n      if (this.#subscriptions.length === 1) { this.#callbackRegister(); }\n\n      const updateOptions = { action: 'subscribe', data: void 0 };\n\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n\n         // Unsubscribe from document callback if there are no subscribers.\n         if (this.#subscriptions.length === 0) { this.#callbackUnregister(); }\n      };\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - Options from render call; will have document update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const doc = this.#document[0];\n\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\n      }\n   }\n}\n\n/**\n * @typedef {object} TJSDocumentOptions\n *\n * @property {((doc?: object) => void) | null} [delete] Optional post delete function to invoke when\n * document is deleted _after_ subscribers have been notified.\n *\n * @property {((doc?: object) => void) | null} [preDelete] Optional pre delete function to invoke\n * when document is deleted _before_ subscribers are notified.\n */\n\n/**\n * @typedef TJSDocumentUpdateOptions Provides data regarding the latest document change.\n *\n * @property {string}   [action] The update action. Useful for filtering.\n *\n * @property {string}   [renderContext] The update action. Useful for filtering.\n *\n * @property {object[]|string[]} [data] Foundry data associated with document changes.\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template [T=DocumentCollection]\n */\nclass TJSDocumentCollection\n{\n   /**\n    * Fake Application API that DocumentCollection uses for document model callbacks.\n    *\n    * @type {{ uuid: string, close: Function, render: Function }}\n    */\n   #callbackAPI;\n\n   /**\n    * @type {DocumentCollection}\n    */\n   #collection;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {{ delete?: Function, preDelete?: Function }}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentCollectionUpdateOptions<T>}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n    *\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\n    */\n   constructor(collection, options = {})\n   {\n      this.#uuidv4 = `tjs-collection-${Hashing.uuidv4()}`;\n\n      this.#callbackAPI = {\n         uuid: this.#uuidv4,\n         close: this.#deleted.bind(this),\n         render: this.#updateSubscribers.bind(this)\n      };\n\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(collection);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(collection);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentCollectionUpdateOptions<T>} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuid() { return this.#uuidv4; }\n\n   /**\n    * Register the callback API with the underlying Foundry collection.\n    */\n   #callbackRegister()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection && Array.isArray(collection?.apps))\n      {\n         const index = collection.apps.findIndex((sub) => sub === this.#callbackAPI);\n         if (index === -1) { collection.apps.push(this.#callbackAPI); }\n      }\n   }\n\n   /**\n    * Unregister the callback API with the underlying Foundry collection.\n    */\n   #callbackUnregister()\n   {\n      const collection = this.#collection;\n      if (collection instanceof DocumentCollection && Array.isArray(collection?.apps))\n      {\n         const index = collection.apps.findIndex((sub) => sub === this.#callbackAPI);\n         if (index >= 0) { collection.apps.splice(index, 1); }\n      }\n   }\n\n   /**\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const collection = this.#collection;\n\n      this.#callbackUnregister();\n      this.#collection = void 0;\n\n      if (typeof this.#options.preDelete === 'function') { await this.#options.preDelete(collection); }\n\n      this.#updateSubscribers(false,\n       { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\n\n      if (typeof this.#options.delete === 'function') { await this.#options.delete(collection); }\n\n      // Allow subscribers to be able to query `updateOptions` involving any reactive statements.\n      await tick();\n\n      this.#updateOptions = void 0;\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * DocumentCollection `apps` tracking array.\n    */\n   destroy()\n   {\n      this.#callbackUnregister();\n      this.#collection = void 0;\n\n      this.#options.delete = void 0;\n      this.#options.preDelete = void 0;\n\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @returns {T} Current collection\n    */\n   get() { return this.#collection; }\n\n   /**\n    * @param {T | undefined}  collection - New collection to set.\n    *\n    * @param {TJSDocumentCollectionUpdateOptions<T>}  [options] - New collection update options to set.\n    */\n   set(collection, options = {})\n   {\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\n      {\n         throw new TypeError(\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      const changed = this.#collection !== collection;\n\n      if (changed) { this.#callbackUnregister(); }\n\n      this.#collection = collection;\n      this.#updateOptions = options;\n\n      if (changed)\n      {\n         if (collection instanceof DocumentCollection && this.#subscriptions.length) { this.#callbackRegister(); }\n\n         this.#updateSubscribers(false,\n          { action: `tjs-set-${collection === void 0 ? 'undefined' : 'new'}`, ...options });\n      }\n   }\n\n   /**\n    * Sets options for this collection wrapper / store.\n    *\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && options.delete !== null && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function or null.`);\n      }\n\n      if (options.preDelete !== void 0 && options.preDelete !== null && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(\n          `TJSDocumentCollection error: 'preDelete' attribute in options is not a function or null.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete !== void 0)\n      {\n         this.#options.delete = typeof options.delete === 'function' ? options.delete : void 0;\n      }\n\n      if (options.preDelete !== void 0)\n      {\n         this.#options.preDelete = typeof options.preDelete === 'function' ? options.preDelete : void 0;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void} handler - Callback function\n    * that is invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\n\n      // Register callback with first subscriber.\n      if (this.#subscriptions.length === 1) { this.#callbackRegister(); }\n\n      const collection = this.#collection;\n\n      const documentType = collection?.documentName ?? void 0;\n\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\n\n      handler(collection, updateOptions);  // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n\n         // Unsubscribe from collection if there are no subscribers.\n         if (this.#subscriptions.length === 0) { this.#callbackUnregister(); }\n      };\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {TJSDocumentCollectionUpdateOptions<T>}   [options] - Options from render call; will have collection\n    *        update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const subscriptions = this.#subscriptions;\n      const collection = this.#collection;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\n   }\n}\n\nexport { TJSDocument, TJSDocumentCollection };\n//# sourceMappingURL=index.js.map\n","import { LOG_PREFIX, LOG_STYLES, LOG_PREFIX_COLOR, SYSTEM_CODE } from './constants';\n\nexport const log = {\n  ASSERT: 1, ERROR: 2, WARN: 3, INFO: 4, DEBUG: 5, VERBOSE: 6,\n  set level(level) {\n    this.a = (level >= this.ASSERT) ? console.assert.bind(window.console, LOG_PREFIX) : () => { };\n    this.e = (level >= this.ERROR) ? console.error.bind(window.console, LOG_PREFIX) : () => { };\n    this.w = (level >= this.WARN) ? console.warn.bind(window.console, LOG_PREFIX) : () => { };\n    this.i = (level >= this.INFO) ? console.info.bind(window.console, LOG_PREFIX) : () => { };\n    this.d = (level >= this.DEBUG) ? console.debug.bind(window.console, LOG_PREFIX) : () => { };\n    this.v = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX) : () => { };\n\n    // Colorized log methods - short versions\n    this.p = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.p) : () => { };\n    this.g = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.g) : () => { };\n    this.r = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.r) : () => { };\n    this.o = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.o) : () => { };\n    this.b = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.b) : () => { };\n    this.y = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.y) : () => { };\n    this.c = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.c) : () => { };\n    this.m = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.m) : () => { };\n    this.gr = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.gr) : () => { };\n    this.br = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.br) : () => { };\n    this.pi = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.pi) : () => { };\n    this.t = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX_COLOR, LOG_STYLES.t) : () => { };\n\n    // Colorized log methods - full name aliases\n    this.purple = this.p;\n    this.green = this.g;\n    this.red = this.r;\n    this.orange = this.o;\n    this.blue = this.b;\n    this.yellow = this.y;\n    this.cyan = this.c;\n    this.magenta = this.m;\n    this.gray = this.gr;\n    this.brown = this.br;\n    this.pink = this.pi;\n    this.teal = this.t;\n\n    this.loggingLevel = level;\n  },\n  get level() { return this.loggingLevel; }\n};\n\n/**\n * Toggles the bookmark/favorite status of an item\n * @param {Item} item - The item to toggle\n * @param {Function} callback - Callback function to run after toggle\n * @return {Promise<void>} A promise that resolves when the item is updated\n */\nexport async function toggleBookmark(item, callback = () => { }) {\n  await item.update({ system: { favourite: !item.system.favourite } });\n  callback();\n}\n\n/**\n * Gets the origin of an effect\n * @param {ActiveEffect} effect - The effect to get the origin for\n * @param {boolean} tryFromUuidSync - Whether to try getting from UUID synchronously\n * @return {Item|null} The origin item or null\n */\nexport function getEffectOrigin(effect, tryFromUuidSync = false) {\n  if (!game.actors) return null;\n  const origin = effect._source.origin;\n  if (!origin) return null;\n  const split = origin.split(\".\");\n  let item = void 0;\n  if (split.length == 4) {\n    item = effect.parent.items.get(split[3]);\n  } else {\n    try {\n      item = game.actors?.get(origin)\n        || game.items?.get(origin)\n        || game.packs?.get('effects');\n\n      if (!item && tryFromUuidSync) {\n        item = fromUuidSync(origin);\n      }\n    } catch (error) {\n      console.warn('getEffectOrigin', effect, origin);\n      throw error;\n    }\n  }\n\n  return item;\n}\n\n/**\n * Gets a localized string\n * @param {string} string - The string to localize\n * @return {string} The localized string\n */\nexport function localize(string) {\n  if (typeof game === 'undefined') return string; //- avoid lint error\n  return game.i18n.localize(`${SYSTEM_CODE}.${string}`);\n}\n\n/**\n * Checks if a value is a number\n * @param {*} value - The value to check\n * @return {boolean} Whether the value is a number\n */\nexport function isNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks if a value is an attribute\n * @param {string} val - The value to check\n * @return {boolean} Whether the value is an attribute\n */\nexport function isAttribute(val) {\n  if (Object.keys(attributes).includes(val)) return true;\n  return false;\n}\n\n\n/**\n * Checks if an item is a passive effect\n * @param {Item} item - The item to check\n * @return {boolean} Whether the item is a passive effect\n */\nexport function isPassiveEffectFromItem(item) {\n  game.system.log.d(\"isPassiveEffectFromItem item\", item);\n  if (item instanceof ActiveEffect) {\n    const parent = item.parent;\n    if (\n      parent instanceof Item\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Converts a string to slug format\n * @param {string} str - The string to slugify\n * @return {string} The slugified string\n */\nexport function slugify(str) {\n  return str.toLowerCase().replace(/ /g, '-');\n}\n\n/**\n * Checks if an item's parent is an actor\n * @param {Item} item - The item to check\n * @return {boolean} Whether the item's parent is an actor\n */\nexport function isParentActor(item) {\n  return item?.parent?.constructor?.name === 'FFXIVActor';\n}\n\n/**\n * Capitalizes the first letter of a string\n * @param {string} str - The string to capitalize\n * @return {string} The capitalized string\n */\nexport function ucfirst(str) {\n  if (!str) return str;\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\n/**\n * Checks if an object is empty\n * @param {object} obj - The object to check\n * @return {boolean} Whether the object is empty\n */\nexport const isEmptyObj = (obj) => Object.keys(obj).length === 0\n\n/**\n * Gets a compendium pack from a UUID\n * @param {string} uuid - The UUID to get the pack from\n * @return {Promise<CompendiumCollection|boolean>} The pack or false if not found\n */\nexport const getPackFromUuid = async (uuid) => {\n  const split = uuid.split(\".\");\n  if (split[0] !== 'Compendium') {\n    log.w('Not a compendium uuid', uuid)\n    return false;\n  }\n  const packName = `${split[1]}.${split[2]}`;\n  const pack = game.packs.get(packName);\n  return pack;\n}\n\n/**\n * Generates a random element ID\n * @param {number} length - The length of the ID\n * @return {string} The generated ID\n */\nexport function generateRandomElementId(length = 8) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n}\n\n/**\n * Gets the actor owner\n * @param {Actor} actor The actor to get the owner for\n * @return {User} The owner user\n */\nexport function getActorOwner(actor) {\n  const owners = getOwners(actor);\n  if (owners.length === 0) {\n    return game.user;\n  }\n  if (owners.length === 1) {\n    return owners[0];\n  }\n\n  const owner = owners.reduce((owner, currentOwner) => {\n    if (!currentOwner.isGM) {\n      return currentOwner;\n    }\n    return owner;\n  }, null);\n\n  if (!owner) {\n    if (game.user.isGM) {\n      return game.user;\n    }\n  }\n\n  if (!owner) {\n    return game.users.find(u => u.isGM);\n  }\n  return owner;\n}\n\n/**\n * Gets the owners of an actor\n * @param {Actor} actor - The actor to get owners for\n * @return {User[]} Array of users who own the actor\n */\nexport function getOwners(actor) {\n  return game.users.filter(u => actor.testUserPermission(u, CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER))\n}\n\n/**\n * Gets all GM users\n * @return {string[]} Array of GM user IDs\n */\nexport function getGMs() {\n  return game.users.filter(u => u.isGM).map(u => u.id)\n}\n\n/**\n * Converts a UUID string to a storage-safe format by replacing dots with underscores\n * @param {string} uuid - The UUID string to encode\n * @return {string} The encoded UUID string with dots replaced by underscores\n */\nexport function encodeUuidString(uuid) {\n  return uuid.replace(/\\./g, \"_\");\n}\n\n/**\n * Converts a storage-safe UUID string back to standard format by replacing underscores with dots\n * @param {string} uuid - The encoded UUID string to decode\n * @return {string} The decoded UUID string with underscores replaced by dots\n */\nexport function decodeUuidString(uuid) {\n  return uuid.replace(/_/g, \"\\.\");\n}\n\n/**\n * Finds all keys in an object that have a specific value\n * @param {object} obj - The object to search\n * @param {*} value - The value to search for\n * @return {Array<string>} Array of keys that have the specified value\n */\nexport function findKeysByValue(obj, value) {\n  return Object.entries(obj)\n    .filter(([key, val]) => val === value)\n    .map(([key]) => key);\n}\n\n/**\n * Truncates a string to a specified length\n * @param {string} str The string to truncate\n * @param {number} n The maximum length\n * @return {string} The truncated string\n */\nexport function truncate(str, n) {\n  return str.length > n ? str.substr(0, n - 1) + \"...\" : str;\n}\n\n/**\n * Updates a chat message\n * @param {string} messageId The ID of the message to update\n * @param {object} data The update data\n * @return {Promise<void>} A promise that resolves when the message is updated\n */\nexport async function updateMessage(messageId, data) {\n  // check if chat message owner is this user\n  const message = game.messages.get(messageId);\n  if (message.user.id !== game.user.id) {\n    // emit to owner of message\n    game.socket.emit(`system.${game.system.id}`, {\n      type: \"chatMessage\",\n      mode: \"messageUpdate\",\n      messageId,\n      data\n    });\n  } else {\n    game.system.log.d('Current user is message owner');\n    // update message\n    await message.update(data)\n  }\n}\n\n\n","import { writable } from 'svelte/store';\n\n//- tracks all current game targets (along with mapped metadata)\nexport const mappedGameTargets = writable(false);  \n\n// Store for tracking token movement\nconst tokenMovement = new Map();\nexport const getTokenMovement = (tokenId) => tokenMovement.get(tokenId) || 0;\nexport const addTokenMovement = (tokenId, distance) => {\n    const current = getTokenMovement(tokenId);\n    tokenMovement.set(tokenId, current + distance);\n};\nexport const resetTokenMovement = (tokenId) => {\n    tokenMovement.set(tokenId, 0);\n};\n\n","//- from: https://github.com/whitespine/foundryvtt-icon/blob/main/src/util/paths.js\n\n/**\n * Helper function to format a dotpath to not have any square brackets, instead using pure dot notation\n *\n * @param {string} path The path to format\n *\n * @return {string} The same path, but with all square brackets replaced with dots\n */\nexport function formatDotpath(path) {\n  return path.replace(/\\[/g, \".\").replace(/]/g, \"\");\n}\n\n\n/**\n * Helper function to get arbitrarily deep array references\n * Returns every item along the path, starting with the object itself\n * Any failed pathlet resolutions will still be emitted, but as an undefined\n * An empty string resolved in this way will simply return root.\n * \n * @param {object} obj The object to drill down into\n *\n * @param {string} path The dotpath to use\n *\n * @return {Array<PathResolutionStep>} An array of the steps we took resolving the path\n */\nexport function stepwiseResolveDotpath(obj, path) {\n  const pathlets = formatDotpath(path).split(\".\");\n  // game.system.log.d(\"pathlets\", pathlets);\n  // Resolve each key, starting with root\n  const result = [\n    {\n      pathlet: null, \n      val: obj\n    },\n  ];\n  // game.system.log.d(\"result\", result);\n\n  for (const pathlet of pathlets) {\n    obj = obj?.[pathlet];\n    result.push({\n      pathlet,\n      val: obj,\n    });\n  }\n  // game.system.log.d(\"result\", result);\n  return result;\n}\n\n/**\n * An object providing context on the path and result relative to the most deploy nested document we encounter\n *\n * @typedef {object} DrilldownDocumentResult \n *\n * @property {IconActor | IconItem} sub_doc The last document traversed while following path from root_doc. Usually just root_doc\n *\n * @property {string} sub_path Path from sub_doc to terminus\n *\n * @property {any} terminus The actual value pointed to by the initial path query\n */\n\n/**\n * A variant of resolve_dotpath that provides more context about documents we encounter along the way.\n *\n * @param {IconActor | IconItem} rootDoc The document we are starting at\n * @param {string} path The path to resolve\n * @return {DrilldownDocumentResult} Result\n */\nexport function drilldownDocument(rootDoc, path) {\n  const steps = stepwiseResolveDotpath(rootDoc, path);\n  for (let i = steps.length - 1; i >= 0; i--) {\n    // Walk it back till first document\n    const step = steps[i];\n    if (step.val instanceof foundry.abstract.Document) {\n      // Recombine rest of path\n      const subPath = steps\n        .slice(i + 1)\n        .map((v) => v.pathlet)\n        .join(\".\");\n      const subDoc = step.val;\n      return { subDoc, subPath, terminus: steps[steps.length - 1].val };\n    }\n  }\n  throw new Error(\"Drilldown document must have at least one document in its path\");\n}\n\n/**\n * @typedef {object} ResolveDotpathOptions\n *\n * @property {number} [shorten_by] If provided, skip the last <shorten_by> path items. Useful for getting e.x. the containing array of an item\n */\n\n/**\n * Helper function to get arbitrarily deep array references\n * Any failed resolutions will still be emitted, but as a dedicated symbol\n *\n * @param {object} obj The object to drill down into\n *\n * @param {string} path The dotpath to follow\n *\n * @param {any} [default_=undefined] The default value to return if the dotpath is not reached.\n *\n * @param {ResolveDotpathOptions} [opts] Additional arguments\n *\n * @return {any} Value at end of path, or default value\n */\nexport function resolveDotpath(obj, path, default_ = undefined, opts = null) {\n  const evaluated = stepwiseResolveDotpath(obj, path);\n  let item;\n\n  // Get the last item, or one even further back if shorten-by provided\n  if (opts?.shorten_by) {\n    item = evaluated[evaluated.length - 1 - opts.shorten_by];\n  } else {\n    item = evaluated[evaluated.length - 1];\n  }\n  return item.val === undefined ? default_ : item.val;\n}","<script>\n  import { getContext } from \"svelte\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { resolveDotpath } from \"~/src/helpers/paths\";\n\n  export let tag = \"\";\n  export let remover = true;\n  export let path = \"system.tags\";\n\n  const doc = getContext(\"#doc\");\n\n  async function removeTag(tag) {\n    if (remover) {\n      if (path.startsWith('flags.')) {\n        // Handle flags path\n        const flagPath = path.slice(6); // Remove 'flags.' prefix\n        const [moduleId, ...rest] = flagPath.split('.');\n        const currentTags = $doc.getFlag(moduleId, rest.join('.')) || [];\n        const tags = currentTags.filter(t => t !== tag);\n        await $doc.setFlag(moduleId, rest.join('.'), tags);\n      } else if (path.startsWith('system.')) {\n        // Handle system path\n        const currentTags = $doc.system.tags || [];\n        const tags = currentTags.filter(t => t !== tag);\n        await $doc.update({ system: { tags } });\n      } else {\n        const currentTags = resolveDotpath($doc, path);\n        game.system.log.g('currentTags', currentTags);\n        const type = Array.isArray(currentTags) ? 'array' : currentTags instanceof Set ? 'set' : 'object';\n        game.system.log.g('type', type);\n        let tags;\n        if (type === 'array') {\n          tags = currentTags.filter(t => t !== tag);\n          await $doc.update({ [path]: tags });\n        } else if (type === 'set') {\n          tags = new Set([...currentTags].filter(t => t !== tag));\n          game.system.log.g('tags', tags);\n          await $doc.update({ [path]: tags });\n        } else {\n          game.system.log.g('currentTags NOT IMPLEMENTED', currentTags);\n        }\n      }\n    }\n  }\n  \n</script>\n\n<template lang=\"pug\">\n.badge.center({...$$restProps})\n  .label {tag}\n  +if(\"remover\")\n    div.remove.right(\n      on:click!=\"{() => removeTag(tag)}\"\n      aria-label=\"Remove tag\"\n      role=\"button\"\n    )\n      i.fas.fa-xmark\n</template>\n\n<style lang=\"sass\">\n  @use '../../styles/_mixins' as mixins\n\n  .badge\n    display: inline-flex\n    line-height: 1.5rem\n    padding: 2px 0px 0 5px\n    +mixins.badge(var(--ff-border-color),#ffffff,  0.9rem, 0, transparent)\n    \n\n  .round\n    border-radius: 1000px\n\n  .low\n    padding-top: 0 !important\n    padding-bottom: 0 !important\n\n  .square\n    border-radius: var(--border-radius)\n\n\n  .remove\n    cursor: pointer\n    padding: 4px 5px 0 5px\n    margin: -1px 0 0 3px\n    background: none\n    color: inherit\n    border: 1px solid transparent\n    border-radius: 50%\n    line-height: 1rem\n    vertical-align: middle\n\n    &:hover\n      background: #ffffff\n      color: var(--ff-border-color)\n  .stealth\n    background: none\n    border: none\n    padding: 0\n    margin: 0\n</style>\n","<script>\n  import { getContext, onMount, createEventDispatcher } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import Tag from \"~/src/components/atoms/Tag.svelte\";\n\n  export let showDescription = false;\n\n  const dispatch = createEventDispatcher();\n  const message = getContext(\"message\");\n  let FFMessage;\n  let actor;\n  let item = {};\n\n  const openItemSheet = async (e, uuid) => {\n    e.stopPropagation();\n    item.sheet.render(true);\n  };\n\n  const openActorSheet = (e) => {\n    e.stopPropagation();\n    actor.sheet.render(true);\n  };\n\n  const enterKey = (e) => {\n    if (e.key === 'Enter') {\n      openActorSheet(e);\n    }\n  };\n\n  const handleTitleClick = () => {\n    dispatch(\"toggleDescription\");\n  };\n\n\n\n  $: if ($message) {\n    FFMessage = $message.getFlag(SYSTEM_ID, \"data\");\n    if (FFMessage?.actor?._id) {\n      actor = game.actors.get(FFMessage.actor._id);\n    }\n  }\n  $: showProfileImage = game.settings.get(SYSTEM_ID, \"showChatProfileImages\");\n  $: tagsColumnClass = item?.system?.tags?.length > 1 ? \"flex4\" : item?.system?.tags?.length > 0 ? \"flex2\" : \"flex1\";\n\n  onMount(async () => {\n    if (FFMessage?.item?.uuid) {\n      item = await fromUuid(FFMessage.item.uuid);\n    }\n  });\n</script>\n\n<template lang=\"pug\">\n.chat-title\n  +if(\"!FFMessage\")\n    .title.flex1 loading...\n  +if(\"FFMessage\")\n    .title(class=\"{tagsColumnClass}\" on:click=\"{handleTitleClick}\" role=\"button\" aria-label=\"Toggle description\")\n      .texture\n      +if(\"showProfileImage\")\n        div(\n          role=\"button\" \n          on:click=\"{openActorSheet}\" \n          aria-label=\"Open {FFMessage.actor.name}'s character sheet\"\n        )\n          img.icon.avatar(\n            src=\"{FFMessage.actor.img}\" \n            alt=\"{FFMessage.actor.name}\"\n          ) \n      .flexcol.no-overflow.names\n        .col.actor-name.no-overflow.ellipsis(\n          ) \n          a(\n            on:click!=\"{openActorSheet}\" \n            role=\"button\"\n            aria-label=\"Open {FFMessage.actor.name}'s character sheet\"\n            ) {FFMessage.actor.name}\n        .col.font-cinzel.smaller.item-name.no-overflow.ellipsis(\n        ) \n          a(\n            on:click!=\"{(e) => openItemSheet(e, FFMessage.item.uuid)}\"\n            role=\"button\"\n            aria-label=\"Open {FFMessage.item.name} item sheet\"\n          ) {FFMessage.item.name}\n      div\n        .right.type-label.smaller.gold {FFMessage.item.type}\n        +if(\"item?.system?.tags?.length > 0\") \n          .right\n            .flexrow.right.no-overflow(style=\"justify-content: flex-end; gap: 2px\")\n              +each(\"item?.system?.tags as tag\")\n                .flex0.right\n                  Tag.badge.smaller.round.low({tag} remover=\"{false}\")\n      //- using if / else here makes the tooltip work reactively, otherwise it doesn't update while it's being hovered over\n      +if(\"showDescription\")\n        img.icon.right.item.pointer(\n          src=\"{FFMessage.item.img}\" alt=\"{FFMessage.item.name}\"\n          data-tooltip=\"{localize('Collapse')}\"\n        )\n        +else\n          img.icon.right.item.pointer(\n            src=\"{FFMessage.item.img}\" alt=\"{FFMessage.item.name}\"\n            data-tooltip=\"{localize('Expand')}\"\n          )\n\n</template>\n\n<style lang=\"sass\">\n@use '../../../../styles/_mixins' as mixins\n\n.chat-title\n  .title\n    display: grid\n    gap: 0.2rem\n    min-height: 40px\n    color: white\n  \n    border-radius: var(--border-radius)\n    position: relative\n    padding: 0.1rem\n    overflow: hidden\n  \n    +mixins.texture-texture($intensity: 0.05, $bgSize: 53%)\n    +mixins.inset($padding: 0, $shadow: 0 -3px 20px rgba(0,0,0, 1) inset, $margin: 0 0 0 0, $border: 1px solid var(--ff-border-color), $border-radius: var(--border-radius))\n    \n    &.flex1\n      grid-template-columns: minmax(40px, 1fr) 5fr minmax(50px, 1fr) minmax(40px, 1fr)\n    &.flex2\n      grid-template-columns: minmax(40px, 1fr) 5fr minmax(50px, 2fr) minmax(40px, 1fr)\n    &.flex4\n      grid-template-columns: minmax(40px, 1fr) 5fr minmax(50px, 4fr) minmax(40px, 1fr)\n\n  .names\n    align-self: center\n  img\n    background-color: var(--color-lowlight-dark)\n    &.icon\n      object-fit: cover\n      object-position: center\n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { activeEffectModes, SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { mappedGameTargets } from \"~/src/stores\";\n  import { resolveDotpath } from \"~/src/helpers/paths\";\n  import ChatTitle from \"~/src/components/molecules/chat/actionRoll/ChatTitle.svelte\";\n\n  // export let messageId;\n  export let FFMessage;\n  export let messageId;\n\n  const message = getContext(\"message\");\n\n  async function applyToTarget() {\n    game.system.log.d(\"applyToTarget\");\n    game.system.log.d(\"messageId\", messageId);\n\n    //- get item from message\n    const item = FFMessage.item;\n    const itemToUpdate = game.actors.get(FFMessage.actor._id).items.get(FFMessage.item._id);\n\n    game.system.log.d(\"FFMessage\", FFMessage);\n    game.system.log.d(\"item\", item);\n\n    const itemQuantity = Number(itemToUpdate.system.quantity); // Get the current quantity of the item\n\n    // Check if the item quantity is greater than 0\n    if (itemQuantity <= 0) {\n      // Show a notification and stop execution\n      ui.notifications.error(\"The actor doesn't have sufficient quantity of this item to apply.\");\n      return; // Stop further execution\n    }\n\n    //- get effects from item\n    const effects = item.effects;\n    game.system.log.d(\"effects\", effects);\n\n    //- process effects; look through each effect's changes and collect those that are of mode `custom`\n    const customChanges = [];\n    const customMode = activeEffectModes.find((x) => x.label === \"custom\").value;\n    game.system.log.d(\"customMode\", customMode);\n    for (const effect of effects) {\n      const changes = effect.changes;\n      for (const change of changes) {\n        const mode = change.mode;\n        game.system.log.d(\"mode\", mode);\n        if (mode === customMode) {\n          customChanges.push(change);\n        }\n      }\n    }\n\n    game.system.log.d(\"customChanges\", customChanges);\n\n    //- for `custom` mode effects, Add the value directly to the target actors corresponding system value from the effect key and value\n    for (const change of customChanges) {\n      const key = change.key;\n      const value = Number(change.value);\n\n      for (const target of $mappedGameTargets) {\n        const targetActor = fromUuidSync(target.actorUuid);\n        const oldValue = Number(resolveDotpath(targetActor, key));\n        game.system.log.d(\"oldValue\", oldValue);\n        let newValue = oldValue + value;\n        game.system.log.d(\"proposed nuewValue\", value);\n\n        //- does the key contain `.val` at the end?\n        const keyIsVal = key.endsWith(\".val\");\n        //- if so, create two new keys, one with `.min` and one with `.max`\n        if (keyIsVal) {\n          const keyMin = key.replace(\".val\", \".min\");\n          const keyMax = key.replace(\".val\", \".max\");\n          const min = resolveDotpath(targetActor, keyMin);\n          const max = resolveDotpath(targetActor, keyMax);\n          game.system.log.d(\"min\", min);\n          game.system.log.d(\"max\", max);\n          //- if min is defined and newValue is less than min, set newValue to min\n          if (min !== undefined && newValue < min) {\n            game.system.log.d(\"min matched\");\n            newValue = min;\n          }\n          //- if max is defined and newValue is greater than max, set newValue to max\n          if (max !== undefined && newValue > max) {\n            game.system.log.d(\"max matched\");\n            newValue = max;\n          }\n        }\n\n        game.system.log.d(\"value\", value);\n        game.system.log.d(\"newValue\", newValue);\n        game.system.log.d(\"before update\", resolveDotpath(targetActor, key));\n        await targetActor.update({ [key]: newValue });\n        game.system.log.d(\"after update\", resolveDotpath(targetActor, key));\n\n        const actor = await fromUuid(target.actorUuid);\n        game.system.log.d(\"actor var\", resolveDotpath(actor, key));\n      }\n    }\n\n\n\n    // Update the item's quantity in the actor's inventory\n    await itemToUpdate.update({ \"system.quantity\": itemToUpdate.system.quantity - 1 });\n    game.system.log.d(\"Updated item \", itemToUpdate);\n    \n    // await game.messages.get(messageId).update({ flags: { [SYSTEM_ID]: { data: {applied: true}  } } });\n    await $message.update({ flags: { [SYSTEM_ID]: { data: {applied: true}  } } });\n    game.system.log.d(\"message \", game.messages.get(messageId));\n\n  }\n\n  onMount(async () => {\n    game.system.log.d(\"EquipmentChat mounted\");\n    game.system.log.d(\"FFMessage\", FFMessage);\n    // game.system.log.d(messageId);\n  });\n\n  $: hasTargets = $mappedGameTargets.size > 0;\n  $: disabled = hasTargets ? false : true;\n  $: buttonCss = disabled || applied ? \"disabled\" : \"\";\n  $: applied = $message?.flags[SYSTEM_ID]?.data?.applied;\n  $: showProfileImage = game.settings.get(SYSTEM_ID,'showChatProfileImages');\n  $: senderIsOwner = game.settings.get(SYSTEM_ID,'chatMessageSenderIsActorOwner');\n</script>\n\n<template lang=\"pug\">\n.FFXIV\n  .chat\n    ChatTitle(sheet=\"{FFMessage.item.sheet}\")\n    .flexrow.justify-vertical.mt-sm\n      .flex4.buttons\n        button.short.wide.stealth.gold.rowimgbezelbutton.flexrow(class=\"{buttonCss}\" on:click=\"{applyToTarget}\") \n          .flex3.pa-sm {window.game.i18n.format(`FFXIV.Chat.Buttons.${applied ? 'AppliedTo' : 'ApplyItemToTarget'}`, [FFMessage.item.name, FFMessage.actor.name])}\n          .flex0\n            i.fa.fa-crosshairs.mr-sm.right.mt-sm.gold\n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n  \n  .chat\n    +mixins.buttons\n\n      \n        \n\n  \n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { activeEffectModes, SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { mappedGameTargets } from \"~/src/stores\";\n  import { resolveDotpath } from \"~/src/helpers/paths\";\n  import ChatTitle from \"~/src/components/molecules/chat/actionRoll/ChatTitle.svelte\";\n\n  // export let messageId;\n  export let FFMessage;\n\n  let showDescription = game.settings.get(SYSTEM_ID, 'defaultChatDescriptionVisible');\n\n  const message = getContext(\"message\");\n\n  async function applyToTarget() {\n    //- get item from message\n    const item = FFMessage.item;\n    const itemToUpdate = game.actors.get(FFMessage.actor._id).items.get(FFMessage.item._id);\n    const itemQuantity = Number(itemToUpdate.system.quantity); // Get the current quantity of the item\n\n    // Check if the item quantity is greater than 0\n    if (itemQuantity <= 0) {\n      // Show a notification and stop execution\n      ui.notifications.error(\"The actor doesn't have sufficient quantity of this item to apply.\");\n      return; // Stop further execution\n    }\n\n    //- get effects from item\n    const effects = item.effects;\n\n    //- process effects; look through each effect's changes and collect those that are of mode `custom`\n    const customChanges = [];\n    const customMode = activeEffectModes.find((x) => x.label === \"custom\").value;\n    for (const effect of effects) {\n      const changes = effect.changes;\n      for (const change of changes) {\n        const mode = change.mode;\n        if (mode === customMode) {\n          customChanges.push(change);\n        }\n      }\n    }\n\n    //- for `custom` mode effects, Add the value directly to the target actors corresponding system value from the effect key and value\n    for (const change of customChanges) {\n      const key = change.key;\n      const value = Number(change.value);\n\n      for (const target of $mappedGameTargets) {\n        const targetActor = fromUuidSync(target.actorUuid);\n        const oldValue = Number(resolveDotpath(targetActor, key));\n        let newValue = oldValue + value;\n\n        //- does the key contain `.val` at the end?\n        const keyIsVal = key.endsWith(\".val\");\n        //- if so, create two new keys, one with `.min` and one with `.max`\n        if (keyIsVal) {\n          const keyMin = key.replace(\".val\", \".min\");\n          const keyMax = key.replace(\".val\", \".max\");\n          const min = resolveDotpath(targetActor, keyMin);\n          const max = resolveDotpath(targetActor, keyMax);\n          //- if min is defined and newValue is less than min, set newValue to min\n          if (min !== undefined && newValue < min) {\n            newValue = min;\n          }\n          //- if max is defined and newValue is greater than max, set newValue to max\n          if (max !== undefined && newValue > max) {\n            newValue = max;\n          }\n        }\n\n        await targetActor.update({ [key]: newValue });\n\n        const actor = await fromUuid(target.actorUuid);\n      }\n    }\n\n\n\n    // Update the item's quantity in the actor's inventory\n    await itemToUpdate.update({ \"system.quantity\": itemToUpdate.system.quantity - 1 });\n    await $message.update({ flags: { [SYSTEM_ID]: { data: {applied: true}  } } });\n\n  }\n\n  const handleToggleDescription = () => {\n    showDescription = !showDescription;\n  };\n  \n  onMount(async () => {\n    \n  });\n\n  $: hasTargets = $mappedGameTargets.size > 0;\n  $: disabled = hasTargets ? false : true;\n  $: buttonCss = disabled || applied ? \"disabled\" : \"\";\n  $: applied = $message?.flags[SYSTEM_ID]?.data?.applied;\n  $: showProfileImage = game.settings.get(SYSTEM_ID,'showChatProfileImages');\n\n</script>\n\n<template lang=\"pug\">\n.chat\n  ChatTitle(on:toggleDescription=\"{handleToggleDescription}\" showDescription=\"{showDescription}\")\n  .description-wrapper(class=\"{showDescription ? 'expanded' : ''}\")\n    .flexrow(class=\"{showDescription ? 'visible' : ''}\")\n      .flex4#chat-description.inset {@html FFMessage.item.system.description} \n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n  \n  .description-wrapper\n    +mixins.description-wrapper\n  :global(.FFXIV #chat-description)\n    background: url('/systems/foundryvtt-final-fantasy/assets/parchment4.webp')\n    color: var(--color-text-dark)\n    padding: 0.2rem 0.5rem\n    margin-top: 0.2rem\n  :global(.FFXIV #chat-description p)\n    font-size: 0.7rem\n    line-height: 1.2rem\n    font-family: \"Trirong\", serif\n    \n      \n</style>\n","/**\n * Creates a scrolling text effect above a token showing damage or healing\n * @param {Token} token - The token to show text above\n * @param {number} amount - The amount of damage/healing to display\n * @param {boolean} isHealing - Whether this is healing (green) or damage (red)\n */\nexport function createDamageText(token, amount, isHealing = false) {\n  const displayValue = `${isHealing ? '+' : '-'}${Math.abs(amount)}`;\n  canvas.interface.createScrollingText(\n    token.center,\n    displayValue,\n    {\n      anchor: CONST.TEXT_ANCHOR_POINTS.TOP,\n      direction: CONST.TEXT_ANCHOR_POINTS.TOP,\n      duration: 1000,\n      distance: 100,\n      fontSize: 36,\n      fill: isHealing ? \"#00ff00\" : \"#ff0000\",\n      stroke: \"#000\",\n      strokeThickness: 4\n    }\n  );\n} ","<script>\n  export let size = 100;\n  export let strokeWidth = 2;\n  export let strokeColor = \"#000\";\n  export let rotation = 0;\n  export let fill = 'currentColor';\n  export let flip = ''\n</script>\n\n<template lang=\"pug\">\n  svg(\n    {...$$props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 106 114\"\n    style=\"--size: {size}px; --stroke-width: {strokeWidth}px; transform: scaleX({flip === 'horizontal' || flip === 'both' ? '-1' : '1'}) scaleY({flip === 'vertical' || flip === 'both' ? '-1' : '1'}) rotate({rotation}deg);\"\n  )\n    g(style=\"fill: {fill}; stroke: {strokeColor}; stroke-width: {strokeWidth};\")\n      path(d=\"M81.3438 77.9688C81.1465 78.3361 81.0124 78.7302 80.8125 79.0938C81.1317 78.9786 81.4026 78.8896 81.7188 78.7812C81.5892 78.5192 81.4693 78.1846 81.3438 77.9688Z\")\n      path(d=\"M105.562-0.09375L101.594 2.9375L101.562 9.40625C100.176 11.8292 96.6661 18.0195 94.4375 21.25C91.9565 24.844 85.5632 31.5625 85.5625 31.5625C85.5625 31.5625 86.2142 39.4735 85.5312 44.1875C84.9762 48.0195 83.0215 57.3338 81.6875 60.9688C80.0565 65.4144 78.969 68.6598 76.75 73.375C74.2739 74.1356 71.1542 75.7678 68.7188 77.0938C65.8498 78.6567 61.6277 82.2972 58.4688 84.2812C54.9897 86.4662 52.005 88.4043 48.25 90.6562C44.578 92.8583 40.7035 94.9483 37.1875 96.7812C33.9525 98.4692 31.748 99.4527 28.375 100.844C24.968 102.249 21.2595 103.187 17.6875 104.312C16.1979 104.781 14.8079 105.122 12.5 105.781L2.71875 105.812L0.21875 109.656L0 110L0.03125 114L99.0938 114L110 102.438L110 64.9375L110 0L105.562-0.09375ZM101.5 22.8438L101.375 69.1875C99.4872 69.1884 95.5264 69.1648 93.0625 69.5312C90.3515 69.9343 87.4145 70.324 84.8438 70.75C84.815 70.7548 84.779 70.7761 84.75 70.7812C84.7015 70.9048 84.674 71.0658 84.625 71.1875C84.5719 71.0159 84.5813 71.0035 84.5312 70.8438C84.5989 70.8305 84.6833 70.7931 84.75 70.7812C86.8489 65.4361 88.5838 58.421 89.9688 53.8125C91.1018 50.0435 91.6521 45.5913 91.9688 42.1562C92.2438 39.1772 91.8747 33.1875 91.875 33.1875C91.875 33.1875 96.4028 29.0543 97.5938 27.6562C98.8107 26.2262 100.412 24.2097 101.5 22.8438ZM94.6562 76.6562C97.516 76.6333 100.082 76.748 101.344 76.8125L101.281 99L95.1562 105.562L60.5625 105.656C62.7372 103.386 66.1864 99.8114 68.5625 97C69.5049 95.8849 70.4357 94.7502 71.375 93.625C71.6949 93.637 71.897 93.6024 72.1562 93.625C74.5343 93.832 78.4323 94.0907 81.1562 94.8438C83.7372 95.5577 88.5 98.1562 88.5 98.1562L90.2188 96.5C90.2188 96.5 88.273 93.0432 87.5 90.1562C86.749 87.3533 86.8763 80.8318 86.4062 77.9688C86.3789 77.8025 86.2852 77.5255 86.25 77.3438C88.6428 76.8397 91.7965 76.6792 94.6562 76.6562ZM81.3438 77.9688C81.4694 78.1846 81.5892 78.5192 81.7188 78.7812C81.9761 79.3017 82.2442 79.7392 82.4375 80.4062C82.7985 81.6513 82.6952 85.5942 83.0312 87.2812C83.4852 89.5562 84.2812 91.8438 84.2812 91.8438C84.2812 91.8438 81.3383 90.2571 79.7812 89.9688C79.1209 89.8468 76.606 89.2347 74.8438 89C75.4858 88.0766 76.1973 87.1987 76.75 86.2188C77.9875 84.0246 79.4247 81.6174 80.8125 79.0938C81.0124 78.7302 81.1465 78.3361 81.3438 77.9688ZM70.7188 83.9062C70.0811 84.8651 69.4293 85.9537 68.8125 86.7812C66.3415 90.0943 62.1708 94.7322 59.25 97.6562C56.9022 100.007 53.0594 103.512 50.6875 105.688L34.0625 105.719C36.1231 105.042 38.1655 104.468 40.125 103.594C43.643 102.024 47.9697 99.7545 51.7188 97.5312C55.5907 95.2352 60.3202 92.1225 63.375 89.8125C65.3525 88.3175 68.236 85.6926 70.7188 83.9062Z\")\n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n  +mixins.cornice\n  svg\n    // border: 10px solid black\n\n</style>\n","<script>\nimport { onMount } from 'svelte';\nimport { ASSET_PATH } from '~/src/helpers/constants';\nimport Corner from '~/src/components/atoms/PortraitFrame/corner.svelte';\n\nexport let img = false;\nexport let imgSrc = `${ASSET_PATH}/portraits/witch2.webp`;\nexport let strokeColor=\"#514030\";\nexport let onclick = undefined;\nexport let size = 50;\n\nonMount(() => {\n});\n</script>\n<template lang=\"pug\">\n.atom(class=\"{$$restProps?.class?.includes('high') ? 'high' : ''}\")\n  .frame({...$$restProps})\n    +if(\"img\")\n      img(src=\"{imgSrc}\" alt=\"avatar\" on:click=\"{onclick}\")\n      +else\n        slot\n    Corner.corner.bottom-right(strokeColor=\"{strokeColor}\" size=\"{size}\")\n    Corner.corner.bottom-left( flip=\"horizontal\" strokeColor=\"{strokeColor}\" size=\"{size}\")\n    Corner.corner.top-right(flip=\"vertical\" strokeColor=\"{strokeColor}\" size=\"{size}\")\n    Corner.corner.top-left( flip=\"both\" strokeColor=\"{strokeColor}\" size=\"{size}\")\n</template>\n\n<style lang='sass'>\n  @use '../../styles/_mixins' as mixins\n\n  .frame\n    position: relative\n    display: flex\n    border: 3px solid var(--ff-border-color) // Matching CSS border\n    border-radius: 17px\n    padding: 0px // Adjust based on SVG size\n    :not(.narrow)\n      min-width: 100px\n      min-height: 100px\n\n\n  :global(.corner)\n    position: absolute\n    border: none\n    color: var(--ff-border-color)\n    pointer-events: none\n\n\n  :global(.corner.top-left)\n    top: -5px\n    left: -5px\n\n  :global(.corner.top-right)\n    top: -5px\n    right: -5px\n\n  :global(.corner.bottom-left)\n    bottom: -5px\n    left: -5px\n\n  :global(.corner.bottom-right)\n    bottom: -5px\n    right: -5px\n</style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { getCROptions, getLimitationOptions, getRangeOptions } from \"~/src/helpers/constants.js\";\n  import { localize } from \"~/src/helpers/util\";\n  const item = getContext(\"#doc\");\n\n  const CROptions = getCROptions();\n  const limitationOptions = getLimitationOptions();\n  const rangeOptions = getRangeOptions();\n\n  const rangeDescription = (range) => {\n    const rangeOption = rangeOptions.find((option) => option.value === range);\n    return rangeOption ? rangeOption.label : range;\n  }\n\n</script>\n<template lang='pug'>\n  .item-header\n    .flexcol.description-tab\n      .flexrow\n        .flexcol.flex1.left\n          ol.properties-list\n            li.bg-gold.white.border-gold {$item?.system?.type?.capitalize()}\n            +if(\"$item?.system?.hasCostMP\")\n              li Cost: {$item?.system?.costMP} MP\n            +if(\"$item?.system?.hasCR\")\n              li {CROptions.find((option) => option.value === $item?.system?.CR)?.label}\n            +if(\"$item?.system?.hasCheck\")\n              li {$item?.system?.checkAttribute.toUpperCase()}\n            +if(\"$item?.system?.hasLimitation\")\n              li {limitationOptions.find((option) => option.value === $item?.system?.limitation)?.label}\n            +if(\"$item?.system?.hasRanged\")\n              li(data-tooltip=\"{rangeDescription($item?.system?.rangeType)}\") {localize(\"Types.Item.Range\")}: {$item?.system?.rangeType}\n            +if(\"$item?.system?.hasTarget\")\n              li {localize(\"Types.Item.Target\")}: {$item?.system?.target.capitalize()}\n            +if(\"$item?.system?.hasTrigger\")\n              li {localize(\"Types.Item.Trigger\")}: {$item?.system?.trigger.capitalize()}\n            +if(\"$item?.system?.directHitType\")\n              li {localize(\"Types.Item.Types.action.DirectHit\")}: {$item?.system?.directHitType.capitalize()}\n                +if(\"$item?.system?.directHitDamage\")\n                  | : {$item?.system?.directHitDamage}\n\n    \n</template>\n<style lang='sass'>\n  @use '../../../../../styles/_mixins' as mixins\n\n  .description-tab\n    +mixins.itemSheetDescriptionTab\n</style>","<script>\n  export let size = 35;\n  export let fill = 'currentColor';\n  export let innerFill = 'currentColor';\n  export let opacity = 1;\n  export let innerOpacity = 1;\n</script>\n\n<template lang=\"pug\">\nsvg(\n  {...$$props}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"68 33 457 497\"\n  width=\"{size}\"\n  height=\"{size}\"\n)\n  path(\n    fill=\"{fill}\"\n    opacity=\"{opacity}\"\n    stroke=\"none\"\n    d=\"M204.904602,524.370789 C202.419769,522.398743 201.128571,520.069763 200.468048,517.443359 C196.461655,501.512726 185.031342,492.296661 171.326187,485.151917 C158.590408,478.512543 144.666260,477.275879 130.681992,476.330566 C123.219444,475.826172 116.004601,474.368439 109.255928,470.971741 C110.009483,467.237274 113.019157,466.700195 115.287971,465.792694 C122.697716,462.828949 125.715134,457.700500 124.864571,449.742798 C124.230072,443.806427 124.628395,437.807159 123.809494,431.820435 C122.148384,419.676544 113.961716,410.441071 101.989792,408.363464 C96.511818,407.412842 91.974396,405.064087 88.166229,401.021179 C80.917534,393.325653 74.622894,384.993622 70.318176,375.272186 C69.580841,373.607086 68.785416,371.985168 68.670296,370.078674 C68.459007,366.579712 69.651787,364.942657 73.324554,366.118164 C78.715096,367.843445 83.409988,366.299774 87.954224,363.307922 C101.538925,354.364014 110.188980,342.244659 111.291000,325.751709 C111.755264,318.803436 110.623352,311.780914 107.459396,305.353302 C105.692230,301.763336 105.276939,298.103363 106.037788,294.194153 C107.301529,287.701050 104.149017,281.731415 97.731491,279.617462 C93.099556,278.091705 90.206230,275.718781 89.698227,270.695709 C89.165581,265.429047 91.714905,262.277893 96.170151,260.013763 C99.433098,258.355530 102.548256,256.368073 104.945511,253.494034 C108.531487,249.194839 109.904480,244.454742 107.443237,239.139389 C105.070007,234.014114 100.829407,231.831772 95.323860,232.044510 C92.834572,232.140701 90.361969,232.626999 87.872292,232.765915 C84.890617,232.932281 82.416931,231.302261 83.028877,228.461090 C84.974648,219.427002 84.125168,210.678070 81.758743,201.919846 C81.606613,201.356827 81.954597,200.658646 82.054062,200.110779 C84.135979,199.140228 85.337219,200.627472 86.745354,201.346680 C93.716621,204.907211 100.631554,208.582108 107.660675,212.024048 C114.213821,215.232925 120.574715,214.583267 126.550148,210.393845 C134.219574,205.016708 140.711395,198.734680 142.299728,189.192032 C145.120865,188.197876 146.438766,190.131332 148.042191,191.102753 C154.973663,195.302094 160.410904,194.507812 165.901993,188.629089 C167.866150,186.526291 167.987305,184.843155 165.463348,183.444458 C160.292114,180.578690 159.434204,176.624771 160.423859,170.864166 C161.691864,163.483414 158.457382,157.199219 152.317673,152.676437 C147.596344,149.198502 145.075653,144.533554 144.701141,138.720428 C144.476334,135.230865 145.908524,133.906494 149.559052,134.722717 C159.459274,136.936371 161.954239,135.885300 167.212372,127.194107 C171.350067,120.354904 175.342163,113.420990 179.181625,106.410133 C182.119156,101.046181 186.121628,96.721893 190.694168,92.742805 C193.495728,90.304878 195.360138,91.029793 197.248535,93.614998 C199.178253,96.256805 199.993179,99.270462 200.273804,102.471855 C201.016983,110.949303 204.905594,114.533127 213.498932,114.661285 C213.998734,114.668739 214.499359,114.645531 214.998566,114.664246 C217.753387,114.767471 221.070419,113.965820 221.999969,117.763557 C222.873627,121.332954 222.428574,124.657921 219.158203,127.180023 C215.999588,129.615921 213.090149,132.373093 209.959122,134.847244 C207.627014,136.690063 207.845566,138.512527 209.137665,140.909500 C214.211792,150.322449 224.170700,154.418106 236.655075,152.445709 C244.044739,151.278214 249.237869,147.731323 252.167862,140.734024 C253.380997,137.836868 255.106476,135.129669 256.798065,132.462387 C260.744507,126.239693 263.872681,119.772224 265.501770,112.460777 C267.894257,101.723152 277.625183,96.527824 288.026886,100.203217 C300.463318,104.597565 312.561493,103.593346 324.529327,98.629906 C332.033813,95.517563 337.743591,90.330841 341.753998,83.299149 C344.913269,77.759819 348.970886,72.918259 353.113342,68.119186 C355.468170,65.391052 358.070740,64.900673 361.038818,66.886421 C371.328735,73.770699 381.384308,72.879143 391.320831,66.111649 C393.109619,64.893349 395.162445,64.010910 396.792786,62.620838 C403.694489,56.736298 410.828857,54.007317 420.184021,57.377129 C426.380371,59.609131 432.627228,57.153507 437.819305,52.793751 C443.608521,47.932667 448.134003,41.938026 452.993774,36.238579 C453.837280,35.249344 454.342438,33.900146 456.419952,33.424694 C460.600800,40.110023 461.224945,47.471279 459.701965,55.079353 C457.874847,64.206917 452.680634,71.576584 446.460724,78.195793 C441.150452,83.846939 436.749756,89.979683 433.786560,97.188019 C430.592194,104.958733 424.822662,108.960396 416.206635,108.348747 C411.428741,108.009567 406.921936,108.631401 403.006439,111.773323 C401.508148,112.975616 399.701111,112.914154 397.773712,112.621010 C390.764069,111.554901 383.888397,111.762833 377.181458,114.641441 C373.495331,116.223526 369.770325,115.284485 366.052185,113.814392 C352.622528,108.504509 340.398804,111.412560 332.218109,121.578987 C329.079742,125.479126 327.361603,129.881577 327.319977,134.896133 C327.281281,139.561401 327.182587,144.230804 327.324738,148.891861 C327.565552,156.788223 333.014709,162.414749 340.952026,162.527466 C346.080261,162.600296 350.760895,163.706635 355.398102,165.821381 C360.594025,168.190933 373.041534,164.348923 376.372498,159.716476 C377.745056,157.807663 377.776306,155.682312 377.583984,153.494888 C377.442902,151.890259 376.621765,149.993118 378.670227,149.091431 C380.607971,148.238510 382.595886,148.614700 384.366241,149.820938 C387.464417,151.931885 387.608307,155.013794 387.120636,158.295853 C385.810852,167.111298 389.578003,174.411652 395.278473,180.275330 C401.316772,186.486450 411.219757,183.036804 414.627014,174.593369 C415.671692,172.004654 414.150696,168.116394 417.882751,166.878906 C420.768677,165.921951 423.346313,167.793243 426.055603,168.496750 C429.768158,169.460770 433.507141,169.920242 437.419586,169.362549 C442.022736,168.706390 446.652008,169.451691 449.841553,173.077454 C452.879364,176.530640 456.037445,177.050949 460.037964,175.449677 C461.570343,174.836319 463.223328,174.473206 464.853333,174.165680 C468.094818,173.554199 470.073669,172.380646 468.899902,168.443970 C468.047089,165.583786 468.918213,162.742920 471.077393,160.604584 C474.515228,157.199921 475.003174,153.169693 474.355438,148.627213 C473.566467,143.094238 475.623657,141.130829 481.112732,142.233276 C488.469604,143.710876 493.889923,140.919357 497.675140,134.856201 C499.582916,131.800385 502.118164,129.921829 505.394165,128.957108 C508.629333,128.004395 511.031311,130.159149 509.798828,133.257935 C507.876068,138.092346 506.954407,143.156677 505.506042,148.092941 C504.743835,150.690582 502.938477,152.234894 500.618988,153.449600 C494.719696,156.539001 488.912415,159.805115 482.993469,162.855316 C480.273132,164.257172 479.138214,166.283829 479.264008,169.285126 C479.385345,172.182510 480.858582,173.887955 483.475830,174.824066 C486.458588,175.890884 488.291626,177.927750 488.011230,181.194443 C487.718872,184.599915 485.235352,185.795685 482.204254,186.383987 C471.960938,188.372025 463.123688,192.386642 458.817749,202.852646 C454.014313,214.527893 457.971008,227.338699 469.268341,236.534515 C475.037842,241.230759 474.924194,247.003326 468.948425,251.553162 C468.156647,252.155991 467.268707,252.634094 466.417084,253.156540 C464.256104,254.482239 461.980774,255.811844 462.244537,258.816986 C462.515442,261.903229 464.842072,263.398865 467.398224,264.346283 C470.184204,265.378876 472.485016,266.824738 473.701996,269.625610 C474.875244,272.326050 474.416840,274.886322 472.691315,277.161469 C468.959839,282.081390 467.165894,287.716980 466.204987,293.720032 C465.603180,297.479767 464.296936,300.822998 460.211823,302.188354 C459.606110,302.390778 458.828033,302.770325 458.591797,303.281494 C454.971558,311.114777 449.026062,318.373901 452.625854,327.997803 C453.962524,331.571289 455.481537,335.206940 455.977112,338.939056 C457.221222,348.309082 462.684235,354.534027 469.938599,359.798035 C479.476379,366.718933 495.894073,363.569611 503.823975,353.054199 C509.453705,345.588898 512.293762,336.891724 514.565552,327.968750 C515.084229,325.931732 515.141296,323.687286 517.062561,322.171387 C519.269165,322.763092 519.068054,324.612335 519.242615,326.161560 C520.215210,334.792816 522.150085,343.180511 525.287292,351.295105 C528.127319,358.641174 527.318665,362.170471 520.818970,366.807587 C510.243530,374.352478 499.500946,381.671753 488.673035,388.851166 C481.232452,393.784698 475.350311,399.605133 472.803497,408.583557 C470.773285,415.740723 464.613403,418.105316 457.886200,419.354156 C444.865326,421.771423 436.634552,429.942719 433.766174,442.842834 C432.777527,447.289093 433.916656,451.415710 434.992554,455.593628 C436.028015,459.614349 437.176117,463.581268 437.643341,467.754272 C438.115417,471.970703 436.346985,474.046387 432.428131,474.737152 C431.446625,474.910126 430.439606,475.192688 429.466675,475.120972 C417.899170,474.268707 408.952667,479.549103 400.883362,487.087494 C394.540253,493.013336 388.635895,499.347351 382.982880,505.915985 C378.483185,511.144531 377.449310,517.642761 377.437958,524.160767 C377.429504,529.011230 375.289246,530.429932 371.041382,529.890686 C359.885864,528.474365 349.770233,525.370728 342.425262,515.731445 C333.888916,504.528625 322.391296,499.635986 308.174072,502.255524 C300.072601,503.748199 295.158081,509.136353 291.330750,515.914551 C285.204773,526.763672 282.346405,527.858948 270.309967,524.637756 C265.274811,523.290283 260.569305,521.255737 256.004211,518.821655 C247.665176,514.375305 239.216293,513.897339 230.600861,518.013855 C225.943283,520.239258 221.245468,522.380432 216.589172,524.608459 C212.782532,526.429932 209.011139,527.166016 204.904602,524.370789\"\n  )\n  path(\n    fill=\"{innerFill}\"\n    opacity=\"{innerOpacity}\"\n    stroke=\"none\"\n    d=\"M145.391006,328.313843 C145.749557,333.124908 145.836517,337.974457 146.512604,342.740479 C149.844406,366.228180 157.764481,388.064362 172.454330,406.796448 C207.885147,451.976837 253.545258,473.913361 311.208374,462.542816 C394.724213,446.074402 448.898895,358.338837 413.354034,272.423553 C383.390564,199.999008 304.321991,171.473511 237.636749,195.441040 C182.528870,215.247513 146.276688,267.715546 145.391006,328.313843 z\"\n  )\n</template>\n\n<style lang=\"sass\">\nsvg\n  width: var(--size)\n  height: var(--size)\n</style>","<script>\n  // game.system.log.d(\"race ---- START RollChat ----\");\n  import { onMount, getContext, setContext, tick } from \"svelte\";\n  import { writable, derived } from \"svelte/store\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n  import { createDamageText } from \"~/src/helpers/canvas\";\n  import { localize } from \"~/src/helpers/util\";\n  \n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n  import ChatTitle from \"~/src/components/molecules/chat/actionRoll/ChatTitle.svelte\";\n  import Header from \"~/src/components/organisms/item/type/action/Header.svelte\";\n  import Meteor from \"~/src/components/atoms/meteor.svelte\";\n\n  export let FFMessage\n  export let FFMessageState\n  export let content\n  export let classes = ''\n  classes //- avoid lint error\n  // export let messageId\n\n  const item = fromUuidSync(FFMessage.item.uuid);\n  if(item) {\n    const Item = new TJSDocument()\n    Item.set(item);\n    setContext(\"#doc\", Item);\n  }\n\n  const message = getContext(\"message\");\n\n  let showTraitButton = false;\n  let totalDamage = 0;\n  let isMounted = false;\n  let targetTokens = false;\n  let showDescription = false;\n  let roll = 0;\n  let hasTargets = false;\n\n  $: actor = game.actors.get(FFMessage?.actor?._id);\n  $: isApplyDisabled = (target)  => target.isUnlinked || FFMessageState.damageResults[target.id]?.applied;\n  $: displayDamage = (target)  => FFMessageState.damageResults[target.id]?.damage;\n  $: displayDamageFormula = (target)  => FFMessageState.damageResults[target.id]?.baseDamageFormula;\n  $: displayDirectHitDamage = (target)  =>\n    isApplyDisabled(target) ? FFMessageState.damageResults[target.id]?.directHitResult : FFMessageState.damageResults[target.id]?.directHit;\n  // $: displayVal = (target, type) =>  $displayValues.get(target.id)?.[type] || \"\";\n  $: displayDirectHitDisplayFormula = (target) => FFMessageState.damageResults[target.id]?.directHitDisplayFormula;\n  \n  $: showProfileImage = game.settings.get(SYSTEM_ID,'showChatProfileImages');\n\n  $: roll = FFMessage?.roll || 0;\n  $: penalty = FFMessage?.extraModifiers?.penalty || 0;\n  $: totalRoll = roll - penalty;\n  $: hasTargets = FFMessage?.hasTargets || false;\n\n  function log() {\n    game.system.log.b(\"RollChat roll\", roll);\n    game.system.log.b(\"RollChat penalty\", penalty);\n    game.system.log.b(\"RollChat totalRoll\", totalRoll);\n    game.system.log.b(\"RollChat totalDamage\", totalDamage);\n    game.system.log.b(\"RollChat hasTargets\", hasTargets);\n    game.system.log.b(\"RollChat item?.system?.hasDirectHit\", item?.system?.hasDirectHit);\n    game.system.log.b(\"RollChat item?.system?.directHitDamage\", item?.system?.directHitDamage);\n    game.system.log.b(\"RollChat item?.currentUses\", item?.currentUses);\n    game.system.log.b(\"RollChat $message\", $message);\n    game.system.log.b(\"RollChat FFMessage\", FFMessage);\n    game.system.log.b(\"RollChat FFMessage.isCritical\", FFMessage.isCritical);\n    game.system.log.b(\"RollChat item\", item);\n  }\n\n  function getDamageResults(passedTargets) {\n    const DamageResults = new Map();\n    for (const id of passedTargets) {\n      let token = canvas.tokens.get(id);\n      \n      // Handle base damage formula\n      let baseEffectDamage = item?.system?.baseEffectDamage;\n      if (FFMessage?.isCritical && baseEffectDamage) {\n        // Double the number of dice for critical hits\n        baseEffectDamage = baseEffectDamage.replace(/(\\d+)d(\\d+)/g, (match, count, sides) => {\n          return `${parseInt(count, 10) * 2}d${sides}`;\n        });\n      }\n\n      // For direct hit, we'll use the original formula, handle critical hits, and let the hooks handle modifications\n      const directHitDamage = item?.system?.directHitDamage;\n\n      const baseDamageFormula = item?.system?.hasSplitDamage \n        ? `Split BaseDamage (${baseEffectDamage} ÷ ${passedTargets.length})`\n        : `Base Damage (${baseEffectDamage})`;\n\n      const directHitDisplayFormula = item?.system?.hasSplitDamage\n        ? `Split Direct Hit (${directHitDamage} ÷ ${passedTargets.length})`\n        : `Direct Hit (${directHitDamage})`;\n\n      const damageResult = {\n        damage: baseEffectDamage,\n        healing: item?.system?.baseEffectHealing,\n        baseDamageFormula,\n        directHit: item?.system?.hasDirectHit ? directHitDamage : null,\n        directHitFormula: item?.system?.hasDirectHit ? directHitDamage : null,\n        directHitDisplayFormula: item?.system?.hasDirectHit ? directHitDisplayFormula : null,\n        directHitResult: false,\n        applied: false,\n        originalHP: token.actor?.system.points.HP.val,\n        wasKOd: false,\n      };\n\n      DamageResults.set(id, damageResult);\n    }\n\n    /**\n     *  @why callAll? - We need callAll because multiple game features or modules \n     * might need to modify the damage calculation independently \n     * - for example, one module might add elemental damage while another adds\n     *  status effect bonuses. Using call would only allow the first modification\n     *  to occur.\n    */\n    if (DamageResults.size > 0) {\n      Hooks.callAll('FFXIV.processAdditionalBaseDamageFromItem', {item, actor, DamageResults});\n      Hooks.callAll('FFXIV.DamageDiceReroll', {\n        item, \n        actor, \n        DamageResults, \n        isCritical: FFMessage?.isCritical\n      });\n    }\n\n    return DamageResults;\n  }\n\n  function getTargetTokens(targets) {\n    if(!targets.length) return [];\n    return targets.map((id) => canvas?.tokens?.get(id));\n  }\n\n  function setTargetTokens(targets) {\n    targetTokens = getTargetTokens(targets);\n  }\n\n  async function initializeStores() {\n    if (FFMessage?.item?.type === \"action\" && hasTargets) {\n      let storedDamageResults = FFMessageState.damageResults;\n\n      if (FFMessage.targets.length > 0) {\n        if (!storedDamageResults && !FFMessageState.initialised) {\n          storedDamageResults = getDamageResults(FFMessage.targets);\n          \n          if ($message) {\n            await $message.update({\n              flags: {\n                [SYSTEM_ID]: {\n                  state: {\n                    damageResults: Object.fromEntries(storedDamageResults),\n                    initialised: true\n                  }\n                },\n              },\n            });\n          }\n        }\n        \n        // Wait for canvas to be ready before getting tokens\n        if (canvas.ready) {\n          targetTokens = FFMessage.targets.map((id) => canvas.tokens.get(id)).filter(Boolean);\n        } else {\n          // If canvas isn't ready, wait for it\n          Hooks.once('canvasReady', () => {\n            targetTokens = FFMessage.targets.map((id) => canvas.tokens.get(id)).filter(Boolean);\n          });\n        }\n      }\n    }\n  }\n\n  onMount(async () => {\n    if (!isMounted) {\n      await initializeStores();\n      isMounted = true;\n    }\n    game.system.log.o('[ACTION ROLL CHAT] Mounted targetTokens', targetTokens);\n  });\n\n  /**************\n   * Apply Result\n   **************/\n  async function applyResult(target) {\n    if (isApplyDisabled(target)) return;\n\n    // Immediately update the message state to disable the button\n    const newDamageResults = {...FFMessageState.damageResults};\n    newDamageResults[target.id] = {\n      ...newDamageResults[target.id],\n      applied: true\n    };\n    await $message.update({\n      flags: {\n        [SYSTEM_ID]: {\n          state: {  \n            damageResults: newDamageResults\n          }\n        },\n      },\n    });\n\n    const token = canvas.tokens.get(target.id);\n    if (!token) return;\n\n    const damageResults = FFMessageState.damageResults[target.id];\n    if (!damageResults) return;\n\n    // Calculate base damage\n    const baseDamage = parseInt(damageResults.damage) || 0;\n    let directHitDamage = 0;\n\n    // Calculate direct hit damage if applicable - only if it's a hit\n    if (isHit(target) && item?.system?.hasDirectHit && item?.system?.directHitDamage) {\n      if (damageResults.directHit.includes('d')) {\n        const directHitRoll = await new Roll(damageResults.directHit).evaluate({ async: true });\n        if (game.modules.get('dice-so-nice')?.active) {\n          await game.dice3d.showForRoll(directHitRoll);\n        }\n        directHitDamage = directHitRoll.total;\n      } else {\n        directHitDamage = parseInt(damageResults.directHit) || 0;\n      }\n    }\n\n    const totalDamage = baseDamage + directHitDamage;\n    \n    game.system.log.o('[DAMAGE] Calculating total:', {\n      baseDamage,\n      directHitDamage,\n      totalDamage\n    });\n    \n    createDamageText(token, totalDamage);\n\n    // Handle barrier points first\n    const currentBP = token.actor.system.points.BP.val;\n    let remainingDamage = totalDamage;\n    let newBP = currentBP;\n\n    game.system.log.o('[BARRIER] Before damage application:', {\n      currentBP,\n      totalDamage,\n      remainingDamage\n    });\n\n    if (currentBP > 0) {\n      // If we have barrier points, reduce them first\n      if (currentBP >= totalDamage) {\n        // Barrier absorbs all damage\n        newBP = currentBP - totalDamage;\n        remainingDamage = 0;\n      } else {\n        // Barrier absorbs some damage\n        remainingDamage = totalDamage - currentBP;\n        newBP = 0;\n      }\n\n      game.system.log.o('[BARRIER] After barrier calculation:', {\n        newBP,\n        remainingDamage\n      });\n\n      // Update barrier points\n      await token.actor.update({ \"system.points.BP.val\": newBP });\n    }\n\n    // Update the actor's HP with remaining damage\n    const currentHP = token.actor.system.points.HP.val;\n    const newHP = Math.max(currentHP - remainingDamage, 0);\n    game.system.log.o('[KO CHECK] Before HP update:', {\n      currentHP,\n      remainingDamage,\n      newHP\n    });\n\n    await token.actor.update({ \"system.points.HP.val\": newHP });\n\n    // Call the damage hook\n    await Hooks.callAll('FFXIV.onDamage', { actor: token.actor, damage: remainingDamage });\n\n    game.system.log.o('[KO CHECK] After HP update:', {\n      updatedCurrentHP: token.actor.system.points.HP.val,\n      hasKoStatus: token.actor.statuses.has('ko')\n    });\n\n    // Toggle KO if HP is 0 and not already KO'd\n    if (token.actor.system.points.HP.val === 0 && !token.actor.statuses.has('ko')) {\n      game.system.log.o('[KO CHECK] Applying KO status');\n      await token.actor.toggleStatusEffect(\"ko\");\n      game.system.log.o('[KO CHECK] KO status applied');\n    }\n\n    // Update the final state with all the results\n    newDamageResults[target.id] = {\n      ...newDamageResults[target.id],\n      wasKOd: newHP <= 0,\n      directHitResult: directHitDamage\n    };\n\n    await $message.update({\n      flags: {\n        [SYSTEM_ID]: {\n          state: {  \n            damageResults: newDamageResults\n          }\n        },\n      },\n    });\n  }\n\n  /**************\n   * Undo Result\n   **************/\n  async function undoResult(target) {\n    if (!target.actor || target.isUnlinked) return;\n\n    const token = canvas.tokens.get(target.id);\n    if (!token) return;\n\n    const result = FFMessageState.damageResults[target.id];\n    if (!result || !result.applied) return;  // Only undo if it was actually applied\n\n    const currentHP = token.actor.system.points.HP.val;\n    const originalHP = result.originalHP;\n\n    // Only restore HP if it's different from the original\n    if (currentHP !== originalHP) {\n      createDamageText(token, originalHP - currentHP, true);\n      await token.actor.update({\n        \"system.points.HP.val\": originalHP\n      });\n    }\n\n    // Only remove KO if we applied it\n    if (result.wasKOd) {\n      await token.actor.toggleStatusEffect(\"ko\");\n    }\n\n    // Update only this target's results in the message state\n    const newDamageResults = {...FFMessageState.damageResults};\n    newDamageResults[target.id] = {\n      ...newDamageResults[target.id],\n      applied: false,\n      wasKOd: false,\n      directHitResult: false\n    };\n\n    await $message.update({\n      flags: {\n        [SYSTEM_ID]: {\n          state: {  \n            damageResults: newDamageResults\n          }\n        },\n      },\n    });\n  }\n\n\n  async function applyTrait() {\n    if (!item?.system?.enables?.list?.length) return;\n\n    const trait = await fromUuid(item?.system?.enables?.list[0].uuid);\n    if (!trait) return;\n\n    // Apply trait to all existing targets\n    for (const target of targets) {\n      if (target?.actor && !target?.isUnlinked) {\n        await target?.actor?.createEmbeddedDocuments(\"Item\", [trait]);\n      }\n    }\n\n    showTraitButton = false;\n  }\n\n  function getDefenseValue(target) {\n    if (target?.isUnlinked || !target?.actor?.system?.attributes) return 0;\n\n    // For NPCs, defense is directly in attributes\n    if (target?.actor?.type === \"npc\") {\n      const defense = target?.actor?.system?.attributes?.defence?.val || 0;\n      return defense;\n    }\n\n    // For PCs, defense is in secondary attributes\n    const defense = target?.actor?.system?.attributes?.secondary?.def?.val || 0;\n    const magicDefense = target?.actor?.system?.attributes?.secondary?.mag?.val || 0;\n    return Math.max(defense, magicDefense);\n  }\n\n  function isHit(target) {\n    return totalRoll >= getDefenseValue(target);\n  }\n\n  function getTargetImage(target) {\n    if (target?.isUnlinked) return null;\n    return target?.document?.texture?.src || target?.actor?.img;\n  }\n\n  function openActorSheet(actor) {\n    if (!actor) return;\n    actor?.sheet?.render(true);\n  }\n\n  const handleToggleDescription = () => {\n    showDescription = !showDescription;\n  };\n</script>\n\n<template lang=\"pug\">\n\n.chat\n  //- div.pointer(role=\"button\" on:click!=\"{log}\" class=\"{classes}\") \n  //-   i.fa-solid.fa-bug\n  ChatTitle(on:toggleDescription=\"{handleToggleDescription}\")\n  .description-wrapper(class=\"{showDescription ? 'expanded' : ''}\")\n    .flexrow.mt-xs(class=\"{showDescription ? 'visible' : ''}\")\n      .flex4#chat-description.inset {@html item?.system?.description}\n        Header\n  +if(\"content\")\n    .flexrow.gap-4.leather.mt-xs\n      .flex3.content\n        div {@html content}\n  +if(\"FFMessage?.item?.type === 'action' && item && targetTokens.length\")\n    .action-result\n      .target-list\n        +each(\"targetTokens as target\")\n          //- wait for target to be defined\n          +if(\"target\") \n            .leatherbook\n              .background\n                .texture\n                .target-row.flexrow(class=\"{target.isUnlinked ? 'unlinked' : ''}\")\n                  .flex3\n                    .flexrow.justify-vertical.gap-4\n                      .flex0.target-info.pointer\n                        +if(\"target && !target.isUnlinked\")\n                          img.target-img.clickable(src=\"{getTargetImage(target)}\" alt=\"{target.name}\" on:click!=\"{openActorSheet(target.actor)}\")\n                      .flex1.flexcol.thin-border\n                        .col.target-name.font-cinzel.smaller {target.name}\n                        .col.flexrow.justify-vertical.no-wrap\n                          .flex1.left.font-cinzel(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"Defense\") {localize(\"Types.Actor.Types.PC.Attributes.secondary.def.Abbreviation\")} \n                          .flex1.m1-xs.left {getDefenseValue(target)}\n                          .flex1.relative.right\n                            +if(\"FFMessage?.isCritical\")\n                              .critical\n                                Meteor(fill=\"var(--ff-border-color)\" innerFill=\"var(--message-color)\" innerOpacity=\"1\" opacity=\"1\" size=\"25\")\n                                .overlay(style=\"margin: 0; font-size: 1rem; color: #fff\") \n                                  i.icon.fa-solid.bg-white.round(data-tooltip=\"{localize('CriticalSuccess')}\" class=\"{isHit(target) ? 'fa-circle-check positive' : 'fa-circle-xmark negative'}\")\n                              +else\n                                i.icon.fa-solid.bg-white.round(data-tooltip=\"{isHit(target) ? localize('DirectHit') : localize('Types.Item.Types.action.DirectHitMissed')}\" class=\"{isHit(target) ? 'fa-circle-check positive' : 'fa-circle-xmark negative'}\")\n                  \n                  .flex2.thin-border.offwhite(style=\"min-height: 2.6rem\" class=\"{isApplyDisabled(target) ? 'bg-silver' : 'bg-gold'}\")\n                    +if(\"item?.system?.baseEffectDamage\")\n                      .flex1.formula.flexrow.justify-vertical.active(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{displayDamageFormula(target)}\")\n                        .flex3.left.font-cinzel.smaller {localize(\"Damage\")}\n                        .flex1.right.no-wrap {displayDamage(target)}\n                    +if(\"item?.system?.hasDirectHit\")\n                      .flex1.formula.flexrow.justify-vertical.smaller(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{displayDirectHitDisplayFormula(target)}\")\n                        .flex3.left.font-cinzel.even-smaller {localize(\"Types.Item.Types.action.DirectHit\")}\n                        .flex1.right.no-wrap {isHit(target) ? displayDirectHitDamage(target) : 'N/A'}\n                  .flex0\n                    .flexcol\n                      .flex1\n                        button.stealth.apply-trait(on:click!=\"{applyResult(target)}\" disabled=\"{isApplyDisabled(target)}\")\n                          i.fa-solid.fa-check\n                      .flex1\n                        button.stealth.apply-trait(on:click!=\"{undoResult(target)}\" disabled=\"{!isApplyDisabled(target)}\")\n                          i.fa-solid.fa-refresh\n</template>\n\n<style lang=\"sass\">\n@use '../../../styles/_mixins' as mixins\n\n.description-wrapper\n  +mixins.description-wrapper\n\n.inset\n  +mixins.inset\n\n:global(.FFXIV #chat-description)\n  background: url('/systems/foundryvtt-final-fantasy/assets/parchment4.webp')\n  color: var(--color-text-dark)\n  padding: 0.2rem 0.5rem\n  margin-top: 0.2rem\n\n:global(.FFXIV #chat-description p)\n  font-size: 0.7rem\n  line-height: 1.2rem\n  font-family: \"Trirong\", serif\n\n.action-result\n  margin-top: 0.2em\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: 3px\n\n.target-list\n  display: flex\n  flex-direction: column\n  gap: 0.2em\n\n.target-row\n  display: flex\n  justify-content: space-between\n  align-items: center\n  padding: 0.1em 0.3em\n  background: rgba(0, 0, 0, 0.3)\n  border-radius: 3px\n  border: 3px outset rgba(0, 0, 0, 0.1)\n  &.unlinked\n    opacity: 0.7\n    background: rgba(0, 0, 0, 0.05)\n    .target-name\n      font-style: italic\n\n.target-info\n  display: flex\n  align-items: center\n  gap: 0.5em\n  position: relative\n  flex: 0 0 45px\n  img.target-img\n    object-fit: cover\n    border-radius: var(--border-radius)\n\nbutton:disabled\n  opacity: 0.3\n  cursor: not-allowed\n\n.leatherbook\n  +mixins.background(rgb(98 49 50), 0.05, none)\n\n.critical\n  position: relative\n  color: #ffd700\n  text-shadow: 0 0 3px rgba(255, 215, 0, 0.5)\n  animation: pulse 1s infinite\n  width: 25px\n  height: 25px\n  margin-top: -5px\n\n.overlay\n  position: absolute\n  top: 57%\n  left: 48%\n  transform: translate(-50%, -50%)\n  font-weight: bold\n  pointer-events: none\n  width: 0\n  height: 0\n  display: flex\n  align-items: center\n  justify-content: center\n\n.icon\n  font-size: 14px\n\n@keyframes pulse\n  0%\n    opacity: 1\n  50%\n    opacity: 0.7\n  100%\n    opacity: 1\n</style>\n","<script>\n  import { getContext, onMount } from \"svelte\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n\n  export let data;\n  export let overlayValue = '';\n  export let overlayColor = 'black';\n  export let overlaySize = '0.8em';\n  export let overlayMargin = '2px 0 0 0';\n  export let title = '';\n  const message = getContext(\"message\");\n\n  game.system.log.d(\"ChatTitle - message context:\", message);\n  game.system.log.d(\"ChatTitle - data prop:\", data);\n  \n  $: showProfileImage = game.settings.get(SYSTEM_ID,'showChatProfileImages');\n</script>\n\n<template lang=\"pug\">\n.chat-title.flexrow.justify-vertical.mx-sm\n  +if(\"showProfileImage\")\n    .portrait.left\n      img.actor-img(src=\"{data.actor.img}\" alt=\"{data.actor.name}\")\n  .flex4.title-block.font-cinzel\n    .flavor {title}\n  +if(\"showProfileImage\")\n    .portrait.right\n      slot(name=\"rightImage\")\n        img.actor-img(src=\"{data.item?.img || data.actor.img}\" alt=\"{data.item?.name || data.actor.name}\")\n      +if(\"overlayValue\")\n        .overlay(style=\"margin: {overlayMargin}; font-size: {overlaySize}; color: {overlayColor}\") {overlayValue}\n</template>\n\n<style lang=\"sass\">\n.chat-title\n  background-color: var(--message-color)\n  color: var(--message-contrast)\n  position: relative\n  min-height: 35px\n  margin: 1px 0 5px 0\n  display: flex\n  align-items: stretch\n  \n\n  .portrait\n    flex: 0 0 35px\n    width: 35px\n    height: 35px\n    display: flex\n    align-items: center\n    justify-content: center\n    overflow: hidden\n    background: rgba(0, 0, 0, 0.1)\n    position: relative\n\n    img\n      max-width: 100%\n      max-height: 100%\n      width: auto\n      height: auto\n      object-fit: contain\n      border-radius: 0\n\n    &.left\n      border-top-left-radius: var(--border-radius)\n      border-bottom-left-radius: var(--border-radius)\n\n    &.right\n      border-top-right-radius: var(--border-radius)\n      border-bottom-right-radius: var(--border-radius)\n\n  .title-block\n    display: flex\n    align-items: center\n    padding: 0 0.5rem\n    flex: 1\n    .flavor\n      font-size: 0.9rem\n      line-height: 1\n      text-align: left\n\n.overlay\n  position: absolute\n  top: 50%\n  left: 50%\n  transform: translate(-50%, -50%)\n  font-size: 1.2rem\n  font-weight: bold\n  pointer-events: none\n</style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import ChatTitle from \"~/src/components/molecules/chat/attributeRoll/ChatTitle.svelte\";\n  import Meteor from \"~/src/components/atoms/meteor.svelte\";\n\n  export let FFMessage;\n  export let content;\n  export let enableToggle = true;\n\n  let isContentVisible = false;\n\n  const message = getContext(\"message\");\n  \n  $: showProfileImage = game.settings.get(SYSTEM_ID,'showChatProfileImages');\n  $: title = FFMessage.flavor\n  $: height = isContentVisible ? '1000px' : '0';\n  $: style = `max-height: ${height}; overflow: hidden; transition: max-height 0.3s ease;`;\n\n  onMount(async () => {\n  });\n\n\n  function toggleContent() {\n    if (enableToggle) {\n      isContentVisible = !isContentVisible;\n    }\n  }\n</script>\n\n<template lang=\"pug\">\n.flexcol.pointer\n  .col(on:click=\"{toggleContent}\" role=\"button\")\n    +if(\"FFMessage?.isCritical\")\n      ChatTitle(title=\"{title}\" data=\"{FFMessage}\" overlayValue=\"{$message?.rolls[0]?.total}\" overlayColor=\"var(--off-white)\" overlaySize=\"0.8rem\")\n        svelte:fragment(slot=\"rightImage\")\n          Meteor(size=\"28\" fill=\"var(--ff-border-color)\" innerFill=\"var(--message-color)\" innerOpacity=\"1\" opacity=\"1\")\n\n      +else\n        ChatTitle(title=\"{title}\" data=\"{FFMessage}\" overlayValue=\"{$message?.rolls[0]?.total}\" overlayColor=\"var(--off-white)\" overlaySize=\"1rem\" overlayMargin=\"0 0 0 0\")\n          div(slot=\"rightImage\") {' '}\n  .col.content(style=\"{style}\") {@html content}\n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n</style> ","<script>\n  import { getContext, setContext, onDestroy, onMount } from \"svelte\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n  import { getActorOwner } from \"~/src/helpers/util\";\n  import * as ChatComponents from \"~/src/components/organisms/chat\";\n  import ColourContrast from \"~/src/helpers/ColourContrast\";\n\n  export let FFMessage;\n  export let messageId;\n  \n  let isReady = false;\n\n  let actor = new TJSDocument(void 0, { delete: () => {} });\n  let message = new TJSDocument(void 0);\n  const sourceActor = game.actors.get(FFMessage.actor._id);\n  const sourceMessage = game.messages.get(messageId);\n  actor.set(sourceActor);\n  message.set(sourceMessage);\n  \n  setContext(\"sourceActor\", actor);\n  setContext(\"message\", message);\n  \n  let messageColor;\n  let messageContrast;\n  let messageColorRGB;\n  \n  onMount(() => {\n    // game.system.log.i(\"race ---- START FFChat mount----\");\n    // game.system.log.b(\"race sourceActor\", sourceActor)\n    // game.system.log.b(\"race sourceMessage\", sourceMessage)\n    // game.system.log.b(\"race FFChat messageId\", messageId)\n    // game.system.log.b(\"race FFChat $message\", $message)\n    // game.system.log.b(\"race FFChat $actor\", $actor)\n    // game.system.log.b(\"race FFChat FFMessage\", FFMessage)\n    isReady = true;\n  });\n\n  $: if ($actor) {\n    const ownerColor = getActorOwner($actor).color;\n    const colorCalc = new ColourContrast(ownerColor);\n    const cssVars = colorCalc.getCSSVariables();\n    messageColor = cssVars.color;\n    messageContrast = cssVars.contrast;\n    messageColorRGB = cssVars.rgb;\n  }\n\n</script>\n\n{#if isReady}\n  <svelte:component\n    this={ChatComponents[FFMessage.chatTemplate]}\n    {...$$props}\n    --message-color={messageColor}\n    --message-contrast={messageContrast}\n    --message-color-rgb={messageColorRGB}\n  />\n{/if}\n","import ColourContrast from \"~/src/helpers/ColourContrast\";\nimport FFChat from \"~/src/components/organisms/chat/FFChat.svelte\";\n\nimport { getActorOwner } from \"~/src/helpers/util\";\nimport { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\";\n/**\n * Used by chat message demo to manually attach a Svelte component, SurgeRoll, to a chat message.\n *\n * Note: You must manually destroy this Svelte component in an associated `preDeleteChatMessage` like the one provided\n * below. The reason being is that you are manually / conditionally creating a Svelte component that is not monitored /\n * controlled by TRL itself, so you must also manually destroy this component when the chat message is deleted.\n * @return {void}\n */\nexport default function renderChatMessage() {\n\n  Hooks.on('renderChatMessage', (message, html) => {\n    console.log('renderChatMessage HOOK TRIGGERED');\n    const FFMessage = message.getFlag(SYSTEM_ID, 'data');\n    const FFMessageState = message.getFlag(SYSTEM_ID, 'state');\n\n    game.system.log.p(\">>>>>> race renderChatMessage HOOK TRIGGERED <<<<<<\", {\n      messageId: message.id,\n      hasFFMessage: !!FFMessage,\n      flags: message.flags[SYSTEM_ID]\n    });\n\n    // Add texture div to message header if it exists\n    const messageHeader = html.find('.message-header');\n    if (messageHeader.length) {\n      messageHeader.prepend('<div class=\"texture\"></div>');\n    }\n\n    if (message.flags[SYSTEM_ID]?.css) {\n      html.addClass(message.flags[SYSTEM_ID].css);\n    }\n\n    if (typeof FFMessage === 'object') {\n      const originalContent = html[0].innerHTML;\n\n      // Create tempDiv for all message types\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = originalContent;\n\n      // Apply color variables to header for all message types\n      const header = tempDiv.querySelector('.message-header');\n      if (header) {\n        // Get actor color variables\n        const sourceActor = game.actors.get(FFMessage.actor._id);\n        const actorOwner = getActorOwner(sourceActor);\n        \n        // Update the message sender in the header\n        const messageSender = header.querySelector('.message-sender');\n        if (messageSender) {\n          messageSender.textContent = actorOwner.name;\n        }\n        // Check if the messageSender exists and set its text content\n        if (messageSender.length) {\n          game.system.log.p('messageSender', messageSender);\n          messageSender[0].textContent = actorOwner.name; // Set the text content to actorOwner.name\n        }\n        const ownerColor = actorOwner.color;\n        const colorCalc = new ColourContrast(ownerColor);\n        const cssVars = colorCalc.getCSSVariables();\n\n        // Apply color variables to header\n        header.style.setProperty('--message-color', cssVars.color);\n        header.style.setProperty('--message-contrast', cssVars.contrast);\n        header.style.setProperty('--message-color-rgb', cssVars.rgb);\n      }\n\n      let content;\n\n      // For Attribute and Action rolls, extract just the message content\n      if (['AttributeRollChat', 'ActionRollChat'].includes(FFMessage.chatTemplate)) {\n        // Extract the message content and flavor text\n        const messageContent = tempDiv.querySelector('.message-content');\n        const flavorText = tempDiv.querySelector('.flavor-text');\n        const contentToPass = `\n        ${flavorText ? `<span class=\"flavor-text\">${flavorText.innerHTML}</span>` : ''}\n        ${messageContent ? messageContent.innerHTML : ''}\n      `;\n        // Remove flavor text from header and update HTML\n        if (header) {\n          const headerFlavorText = header.querySelector('.flavor-text');\n          if (headerFlavorText) {\n            headerFlavorText.remove();\n          }\n          html[0].innerHTML = header.outerHTML;\n        }\n        content = contentToPass;\n      } else {\n        // For other message types, update header colors but keep original content\n        if (header) {\n          const originalHeader = html[0].querySelector('.message-header');\n          if (originalHeader) {\n            originalHeader.outerHTML = header.outerHTML;\n          }\n        }\n        content = originalContent;\n      }\n      html.addClass(SYSTEM_CODE);\n      html.addClass('leather');\n\n      message._svelteComponent = new FFChat({\n        target: html[0],\n        props: {\n          classes: 'leather',\n          FFMessage,\n          FFMessageState,\n          messageId: message._id,\n          content\n        }\n      });\n    }\n  });\n} ","import { Timing } from \"@typhonjs-fvtt/runtime/util\";\n\n/**\n * Implements FF rules for turn order steps\n * @return {void}\n */\nexport default function renderCombatTracker() {\n  Hooks.on(\"renderCombatTracker\", (app, html, data) => {\n    const isCombatActive = !!game.combat?.started;\n\n    // Create a debounced update function\n    const updateDebounced = Timing.debounce(async (combatant, value) => {\n      const newInitiative = parseInt(value, 10);\n      if (!isNaN(newInitiative) && combatant) {\n        await combatant.update({ initiative: newInitiative });\n      }\n    }, 600);\n\n    // Iterate through combatants\n    html.find(\".combatant\").each((index, element) => {\n      const combatantId = $(element).data(\"combatant-id\");\n      const combatant = game.combat?.combatants.get(combatantId);\n\n      if (combatant && !isCombatActive) {\n        // Make initiative editable\n        const $initiative = $(element).find(\".initiative\");\n\n        $initiative.attr(\"contenteditable\", \"true\");\n\n        $initiative.on(\"input\", (event) => {\n          updateDebounced(combatant, $(event.currentTarget).text());\n        });\n\n        $initiative.on(\"dblclick contextmenu\", (event) => {\n          event.stopPropagation();\n          event.preventDefault();\n        });\n\n        $initiative.on(\"blur\", async (event) => {\n          const newInitiative = parseInt($(event.currentTarget).text(), 10);\n          if (!isNaN(newInitiative) && combatant) {\n            await combatant.update({ initiative: newInitiative });\n          }\n        });\n      }\n    });\n\n    // If we have combat and turns, trigger the updateCombatant hook\n    if (data.combat?.turns?.length) {\n      // Call the hook with the first combatant and empty update data\n      Hooks.call('updateCombatant', data.combat.turns[0], {});\n    }\n  });\n}\n","/**\n * Hook that runs when a combatant is updated\n * @return {void}\n */\nexport default function updateCombatant() {\n\n/**\n * Handle combat tracker sorting and visual grouping\n */\nHooks.on(\"updateCombatant\", async (combatant, updateData) => {\n\n\n  const combat = combatant.parent;\n  if (!combat) {\n    return;\n  }\n\n  // Get and sort all combatants\n  const turns = combat.turns;\n\n\n  // Sort the turns array\n  turns.sort((a, b) => {\n    const aIsNPC = a.actor?.type === \"NPC\";\n    const bIsNPC = b.actor?.type === \"NPC\";\n\n    // First sort by PC/NPC status\n    if (aIsNPC !== bIsNPC) return aIsNPC ? 1 : -1;\n\n    // Then sort by initiative within each group\n    const ia = Number.isNumeric(a.initiative) ? a.initiative : -9999;\n    const ib = Number.isNumeric(b.initiative) ? b.initiative : -9999;\n    return ib - ia;\n  });\n\n\n  // Find the first NPC index\n  const firstNPCIndex = turns.findIndex(t => t.actor?.type === \"NPC\");\n\n  // Update the turn order in the combat document\n  await combat.update({ turns: turns });\n\n  // Add visual grouping via CSS\n  if (firstNPCIndex > 0 && firstNPCIndex < turns.length) {\n    const tracker = ui.combat;\n    if (!tracker) {\n      return;\n    }\n\n    const combatants = tracker.element.find('.combatant');\n\n    combatants.each((index, element) => {\n      const $element = $(element);\n\n\n      // Remove existing border classes\n      $element.removeClass('npc-group-start pc-group-end');\n\n      // Add appropriate border class\n      if (index === firstNPCIndex) {\n        $element.addClass('npc-group-start');\n      } else if (index === firstNPCIndex - 1) {\n        $element.addClass('pc-group-end');\n      }\n    });\n  }\n\n});\n\n}","import { SYSTEM_ID, activeEffectModes } from \"./constants\";\nimport { localize } from \"~/src/helpers/util\";\n\n/**\n * Returns an array of default status effects for the system\n * @return {Array<object>} Array of status effect configurations\n */\nexport function getDefaultStatusEffects() {\n  return [\n    {\n      id: \"dead\",\n      name: localize(\"statusEffects.dead.name\"),\n      icon: \"icons/svg/skull.svg\",\n      img: \"icons/svg/skull.svg\",\n      description: localize(\"statusEffects.dead.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"comatose\",\n      name: localize(\"statusEffects.comatose.name\"),\n      icon: `systems/${SYSTEM_ID}/assets/icons/status/coma.svg`,\n      img: `systems/${SYSTEM_ID}/assets/icons/status/coma.svg`,\n      description: localize(\"statusEffects.comatose.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"ko\",\n      name: localize(\"statusEffects.ko.name\"),\n      icon: \"icons/svg/unconscious.svg\",\n      img: \"icons/svg/unconscious.svg\",\n      description: localize(\"statusEffects.ko.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"surprised\",\n      name: localize(\"statusEffects.surprised.name\"),\n      icon: \"icons/svg/stoned.svg\",\n      img: \"icons/svg/stoned.svg\",\n      description: localize(\"statusEffects.surprised.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"brink\",\n      name: localize(\"statusEffects.brink.name\"),\n      icon: `systems/${SYSTEM_ID}/assets/icons/status/supine.svg`,\n      img: `systems/${SYSTEM_ID}/assets/icons/status/supine.svg`,\n      description: localize(\"statusEffects.brink.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"bind\",\n      name: localize(\"statusEffects.bind.name\"),\n      icon: \"icons/svg/net.svg\",\n      img: \"icons/svg/net.svg\",\n      description: localize(\"statusEffects.bind.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"enmity\",\n      name: localize(\"statusEffects.enmity.name\"),\n      icon: `systems/${SYSTEM_ID}/assets/icons/status/enrage.svg`,\n      img: `systems/${SYSTEM_ID}/assets/icons/status/enrage.svg`,\n      description: localize(\"statusEffects.enmity.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"weakness\",\n      name: localize(\"statusEffects.weakness.name\"),\n      icon: `systems/${SYSTEM_ID}/assets/icons/status/crutch.svg`,\n      img: `systems/${SYSTEM_ID}/assets/icons/status/crutch.svg`,\n      description: localize(\"statusEffects.weakness.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"stun\",\n      name: localize(\"statusEffects.stun.name\"),\n      icon: \"icons/svg/daze.svg\",\n      img: \"icons/svg/daze.svg\",\n      description: localize(\"statusEffects.stun.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"prone\",\n      name: localize(\"statusEffects.prone.name\"),\n      icon: `systems/${SYSTEM_ID}/assets/icons/status/prone.svg`,\n      img: `systems/${SYSTEM_ID}/assets/icons/status/prone.svg`,\n      description: localize(\"statusEffects.prone.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"blind\",\n      name: localize(\"statusEffects.blind.name\"),\n      description: localize(\"statusEffects.blind.description\"),\n      icon: `systems/${SYSTEM_ID}/assets/icons/status/blindfold.svg`,\n      img: `systems/${SYSTEM_ID}/assets/icons/status/blindfold.svg`,\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: []\n    },\n    {\n      id: \"slow\",\n      name: localize(\"statusEffects.slow.name\"),\n      description: localize(\"statusEffects.slow.description\"),\n      icon: `systems/${SYSTEM_ID}/assets/icons/status/slowed.svg`,\n      img: `systems/${SYSTEM_ID}/assets/icons/status/slowed.svg`,\n      flags: { [SYSTEM_ID]: { periodic: false, special: false } },\n      changes: [\n        {\n          key: \"system.attributes.secondary.spd.val\",\n          value: 0.5,\n          mode: activeEffectModes.find((mode) => mode.label === \"multiply\").value,\n          priority: 1\n        },\n        {\n          key: \"system.globalCheckMod\",\n          value: -2,\n          mode: activeEffectModes.find((mode) => mode.label === \"add\").value,\n          priority: 1\n        }\n      ]\n    },\n    {\n      id: \"transcendent\",\n      name: localize(\"statusEffects.transcendent.name\"),\n      icon: \"icons/svg/ice-aura.svg\",\n      img: \"icons/svg/ice-aura.svg\",\n      description: localize(\"statusEffects.transcendent.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: true } },\n      changes: []\n    },\n    {\n      id: \"focus\",\n      name: localize(\"statusEffects.focus.name\"),\n      icon: \"icons/svg/eye.svg\",\n      img: \"icons/svg/eye.svg\",\n      description: localize(\"statusEffects.focus.description\"),\n      flags: { [SYSTEM_ID]: { periodic: false, special: true } },\n      changes: []\n    }\n  ];\n}\n\n","import { getDefaultStatusEffects } from \"~/src/helpers/Conditions\";\nimport { SYSTEM_ID } from \"~/src/helpers/constants\";\n\n/**\n * Extends the TokenHUD class to implement system-specific token HUD functionality\n * @extends {TokenHUD}\n */\nexport default class FFTokenHUD extends TokenHUD {\n  /** @type {Array} The default status effects for tokens */\n  defaultStatusEffects;\n\n  /**\n   * Initialize the token HUD\n   * @param {...any} args - Arguments passed to the constructor\n   */\n  constructor(...args) {\n    super(...args);\n\n    if(typeof this.defaultStatusEffects === 'undefined') {\n      console.log('defaultStatusEffects not found, getting default status effects');\n      this.defaultStatusEffects = getDefaultStatusEffects();\n    }\n\n    const that = this\n    // Register a Handlebars helper function for hyrdation in the template\n    Handlebars.registerHelper('showStatusEffectNames', function () {\n      return game.settings.get(`${SYSTEM_ID}`, 'show-status-effect-names');\n    });\n\n    Handlebars.registerHelper('checkStatusAndEffect', function (title) {\n      return title && game.settings.get(`${SYSTEM_ID}`, 'show-status-effect-names');\n    });\n\n    Handlebars.registerHelper('getDescription', function (status) {\n      return that.defaultStatusEffects.find(i => i.id == [status.id])?.description || status.title\n    });\n\n    Handlebars.registerHelper('titleCssClass', function (cond) {\n      return game.settings.get(`${SYSTEM_ID}`, 'show-status-effect-names') ? 'show-title' : 'hide-title';\n    });\n  }\n\n  /**\n   * Get the default options for the token HUD\n   * @return {object} The default options\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      template: `systems/${SYSTEM_ID}/src/extensions/templates/token-hud.html`\n    });\n  }\n}\n","import FFTokenHUD from '~/src/extensions/token-hud.js'\nimport { getDefaultStatusEffects } from \"~/src/helpers/Conditions\";\n\n/**\n * Hook that runs when the canvas is ready\n * @return {void}\n */\nexport default function canvasReady() {\n\n  Hooks.on('canvasReady', () => {\n    // render custom token hud\n    CONFIG.statusEffects = getDefaultStatusEffects();\n    canvas.hud.token = new FFTokenHUD({ defaultStatusEffects: CONFIG.statusEffects })\n  \n    //- status effects\n  \n    // measuredTemplates.set(canvas.templates?.placeables || false)\n  \n  })\n}\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides resources for parsing style strings.\n */\nclass StyleParse\n{\n   static #regexPixels = /(\\d+)\\s*px/;\n\n   /**\n    * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n    *\n    * @param {string}   value - Value to parse.\n    *\n    * @returns {number|undefined} The integer component of a pixel string.\n    */\n   static pixels(value)\n   {\n      if (typeof value !== 'string') { return void 0; }\n\n      const isPixels = this.#regexPixels.test(value);\n      const number = parseInt(value);\n\n      return isPixels && Number.isFinite(number) ? number : void 0;\n   }\n\n   /**\n    * Returns the pixel value for `1rem` based on the root document element. You may apply an optional multiplier.\n    *\n    * @param {number} [multiplier=1] - Optional multiplier to apply to `rem` pixel value; default: 1.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Document} [options.targetDocument=document] The target DOM {@link Document} if different from the main\n    *        browser global `document`.\n    *\n    * @returns {number} The pixel value for `1rem` with or without a multiplier based on the root document element.\n    */\n   static remPixels(multiplier = 1, { targetDocument = document } = {})\n   {\n      return targetDocument?.documentElement ?\n       multiplier * parseFloat(globalThis.getComputedStyle(targetDocument.documentElement).fontSize) : void 0;\n   }\n}\n\n/**\n * Provides a managed dynamic style sheet / element useful in configuring global CSS variables. When creating an\n * instance of TJSStyleManager you must provide a \"document key\" / string for the style element added. The style element\n * can be accessed via `document[docKey]`.\n *\n * Instances of TJSStyleManager can also be versioned by supplying a positive integer greater than or equal to `1` via\n * the 'version' option. This version number is assigned to the associated style element. When a TJSStyleManager\n * instance is created and there is an existing instance with a version that is lower than the current instance all CSS\n * rules are removed letting the higher version to take precedence. This isn't a perfect system and requires thoughtful\n * construction of CSS variables exposed, but allows multiple independently compiled TRL packages to load the latest\n * CSS variables. It is recommended to always set `overwrite` option of {@link TJSStyleManager.setProperty} and\n * {@link TJSStyleManager.setProperties} to `false` when loading initial values.\n */\nclass TJSStyleManager\n{\n   /** @type {CSSStyleRule} */\n   #cssRule;\n\n   /** @type {string} */\n   #docKey;\n\n   /** @type {string} */\n   #selector;\n\n   /** @type {HTMLStyleElement} */\n   #styleElement;\n\n   /** @type {number} */\n   #version;\n\n   /**\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.docKey - Required key providing a link to a specific style sheet element.\n    *\n    * @param {string}   [opts.selector=:root] - Selector element.\n    *\n    * @param {Document} [opts.document] - Target document to load styles into.\n    *\n    * @param {number}   [opts.version] - An integer representing the version / level of styles being managed.\n    */\n   constructor({ docKey, selector = ':root', document = globalThis.document, version } = {})\n   {\n      if (typeof docKey !== 'string') { throw new TypeError(`StyleManager error: 'docKey' is not a string.`); }\n\n      if (Object.prototype.toString.call(document) !== '[object HTMLDocument]')\n      {\n         throw new TypeError(`TJSStyleManager error: 'document' is not an instance of HTMLDocument.`);\n      }\n\n      if (typeof selector !== 'string') { throw new TypeError(`StyleManager error: 'selector' is not a string.`); }\n\n      if (version !== void 0 && !Number.isSafeInteger(version) && version < 1)\n      {\n         throw new TypeError(`StyleManager error: 'version' is defined and is not a positive integer >= 1.`);\n      }\n\n      this.#selector = selector;\n      this.#docKey = docKey;\n      this.#version = version;\n\n      if (document[this.#docKey] === void 0)\n      {\n         this.#styleElement = document.createElement('style');\n\n         document.head.append(this.#styleElement);\n\n         // Set initial style manager version if any supplied.\n         this.#styleElement._STYLE_MANAGER_VERSION = version;\n\n         this.#styleElement.sheet.insertRule(`${selector} {}`, 0);\n\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         document[docKey] = this.#styleElement;\n      }\n      else\n      {\n         this.#styleElement = document[docKey];\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         if (version)\n         {\n            const existingVersion = this.#styleElement._STYLE_MANAGER_VERSION ?? 0;\n\n            // Remove all existing CSS rules / text if version is greater than existing version.\n            if (version > existingVersion)\n            {\n               this.#cssRule.style.cssText = '';\n            }\n         }\n      }\n   }\n\n   /**\n    * @returns {string} Provides an accessor to get the `cssText` for the style sheet.\n    */\n   get cssText()\n   {\n      return this.#cssRule.style.cssText;\n   }\n\n   /**\n    * @returns {number} Returns the version of this instance.\n    */\n   get version()\n   {\n      return this.#version;\n   }\n\n   /**\n    * Provides a copy constructor to duplicate an existing TJSStyleManager instance into a new document.\n    *\n    * Note: This is used to support the `PopOut` module.\n    *\n    * @param {Document} [document] Target browser document to clone into.\n    *\n    * @returns {TJSStyleManager} New style manager instance.\n    */\n   clone(document = globalThis.document)\n   {\n      const newStyleManager = new TJSStyleManager({\n         selector: this.#selector,\n         docKey: this.#docKey,\n         document,\n         version: this.#version\n      });\n\n      newStyleManager.#cssRule.style.cssText = this.#cssRule.style.cssText;\n\n      return newStyleManager;\n   }\n\n   get()\n   {\n      const cssText = this.#cssRule.style.cssText;\n\n      const result = {};\n\n      if (cssText !== '')\n      {\n         for (const entry of cssText.split(';'))\n         {\n            if (entry !== '')\n            {\n               const values = entry.split(':');\n               result[values[0].trim()] = values[1];\n            }\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * Gets a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} Returns CSS variable value.\n    */\n   getProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.getPropertyValue(key);\n   }\n\n   /**\n    * Set rules by property / value; useful for CSS variables.\n    *\n    * @param {{ [key: string]: string }}  rules - An object with property / value string pairs to load.\n    *\n    * @param {boolean}                 [overwrite=true] - When true overwrites any existing values.\n    */\n   setProperties(rules, overwrite = true)\n   {\n      if (!isObject(rules)) { throw new TypeError(`StyleManager error: 'rules' is not an object.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         for (const [key, value] of Object.entries(rules))\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n      else\n      {\n         // Only set property keys for entries that don't have an existing rule set.\n         for (const [key, value] of Object.entries(rules))\n         {\n            if (this.#cssRule.style.getPropertyValue(key) === '')\n            {\n               this.#cssRule.style.setProperty(key, value);\n            }\n         }\n      }\n   }\n\n   /**\n    * Sets a particular property.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @param {string}   value - CSS variable value.\n    *\n    * @param {boolean}  [overwrite=true] - Overwrite any existing value.\n    */\n   setProperty(key, value, overwrite = true)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      if (typeof value !== 'string') { throw new TypeError(`StyleManager error: 'value' is not a string.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         this.#cssRule.style.setProperty(key, value);\n      }\n      else\n      {\n         if (this.#cssRule.style.getPropertyValue(key) === '')\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n   }\n\n   /**\n    * Removes the property keys specified. If `keys` is an iterable list then all property keys in the list are removed.\n    *\n    * @param {Iterable<string>} keys - The property keys to remove.\n    */\n   removeProperties(keys)\n   {\n      if (!isIterable(keys)) { throw new TypeError(`StyleManager error: 'keys' is not an iterable list.`); }\n\n      for (const key of keys)\n      {\n         if (typeof key === 'string') { this.#cssRule.style.removeProperty(key); }\n      }\n   }\n\n   /**\n    * Removes a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} CSS variable value when removed.\n    */\n   removeProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.removeProperty(key);\n   }\n}\n\nexport { StyleParse, TJSStyleManager };\n//# sourceMappingURL=index.js.map\n","import { TJSStyleManager } from '@typhonjs-fvtt/runtime/util/dom/style';\n\nexport const cssVariables = new TJSStyleManager({ docKey: '#__trl-root-styles', version: 1 });\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides utility methods for checking browser capabilities.\n *\n * @see https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\n * TODO: perhaps add support for various standard media query checks for level 4 & 5.\n */\nclass BrowserSupports\n{\n   /**\n    * Check for container query support.\n    *\n    * @returns {boolean} True if container queries supported.\n    */\n   static get containerQueries()\n   {\n      return 'container' in document.documentElement.style;\n   }\n}\n\n/**\n * Provides cross window checks for DOM nodes / elements, events, and essential duck typing for any class based object\n * with a constructor name. The impetus is that certain browsers such as Chrome and Firefox behave differently when\n * performing `instanceof` checks when elements are moved between browser windows. With Firefox in particular the\n * entire JS runtime can not use `instanceof` checks as the instances of fundamental DOM elements differ between\n * windows.\n *\n * TRL supports moving applications from a main central browser window and popping them out into separate standalone\n * app instances in a separate browser window. In this case for essential DOM element and event checks it is necessary\n * to employ the workarounds found in `CrossWindow`.\n */\nclass CrossWindow\n{\n   /**\n    * @private\n    */\n   constructor() {} // eslint-disable-line no-useless-constructor\n\n   /**\n    * Class names for all focusable element types.\n    *\n    * @type {string[]}\n    */\n   static #FocusableElementClassNames = ['HTMLAnchorElement', 'HTMLButtonElement', 'HTMLDetailsElement',\n    'HTMLEmbedElement', 'HTMLIFrameElement', 'HTMLInputElement', 'HTMLObjectElement', 'HTMLSelectElement',\n     'HTMLTextAreaElement'];\n\n   /**\n    * DOM nodes with defined `ownerDocument` property.\n    *\n    * @type {Set<number>}\n    */\n   static #NodesWithOwnerDocument = new Set([Node.ELEMENT_NODE, Node.TEXT_NODE, Node.COMMENT_NODE,\n    Node.DOCUMENT_FRAGMENT_NODE]);\n\n   // Various UI Event sets for duck typing by constructor name.\n   /**\n    * Duck typing class names for pointer events.\n    *\n    * @type {Set<string>}\n    */\n   static #PointerEventSet = new Set(['MouseEvent', 'PointerEvent']);\n\n   /**\n    * Duck typing class names for all UIEvents.\n    *\n    * @type {Set<string>}\n    */\n   static #UIEventSet = new Set(['UIEvent', 'FocusEvent', 'MouseEvent', 'WheelEvent', 'KeyboardEvent', 'PointerEvent',\n    'TouchEvent', 'InputEvent', 'CompositionEvent', 'DragEvent']);\n\n   /**\n    * Duck typing class names for events considered as user input.\n    *\n    * @type {Set<string>}\n    */\n   static #UserInputEventSet = new Set(['KeyboardEvent', 'MouseEvent', 'PointerEvent']);\n\n   /**\n    * Internal options used by `#checkDOMInstanceType` when retrieving the Window reference from a Node that doesn't\n    * define `ownerDocument`.\n    *\n    * @type {{throws: boolean}}\n    */\n   static #optionsInternalCheckDOM = { throws: false };\n\n   // DOM Querying ---------------------------------------------------------------------------------------------------\n\n   /**\n    * Convenience method to retrieve the `document.activeElement` value in the current Window context of a DOM Node /\n    * Element, EventTarget, Document, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Element | null} Active element or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getActiveElement(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType)) { return target?.ownerDocument?.activeElement ?? null; }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target?.view?.document?.activeElement ?? null; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target?.activeElement ?? null; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target?.document?.activeElement ?? null; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   /**\n    * Convenience method to retrieve the `Document` value in the current context of a DOM Node / Element, EventTarget,\n    * Document, UIEvent, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Document} Active document or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getDocument(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType)) { return target?.ownerDocument; }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target?.view?.document; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target?.document; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   /**\n    * Convenience method to retrieve the `Window` value in the current context of a DOM Node / Element, EventTarget,\n    * Document, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Window} Active window or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getWindow(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType))\n      {\n         return target.ownerDocument?.defaultView ?? globalThis;\n      }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target.view ?? globalThis; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target.defaultView ?? globalThis; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   // ES / Browser API basic prototype tests -------------------------------------------------------------------------\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Document.\n    *\n    * @param {unknown}  target - A potential Document to test.\n    *\n    * @returns {target is Document} Is `target` a Document.\n    */\n   static isDocument(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Document]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Map.\n    *\n    * @param {unknown}  target - A potential Map to test.\n    *\n    * @returns {target is Map} Is `target` a Map.\n    */\n   static isMap(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Map]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Promise.\n    *\n    * @param {unknown}  target - A potential Promise to test.\n    *\n    * @returns {target is Promise} Is `target` a Promise.\n    */\n   static isPromise(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Promise]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a RegExp.\n    *\n    * @param {unknown}  target - A potential RegExp to test.\n    *\n    * @returns {target is RegExp} Is `target` a RegExp.\n    */\n   static isRegExp(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object RegExp]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Set.\n    *\n    * @param {unknown}  target - A potential Set to test.\n    *\n    * @returns {target is Set} Is `target` a Set.\n    */\n   static isSet(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Set]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a URL.\n    *\n    * @param {unknown}  target - A potential URL to test.\n    *\n    * @returns {target is URL} Is `target` a URL.\n    */\n   static isURL(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object URL]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Window.\n    *\n    * @param {unknown}  target - A potential Window to test.\n    *\n    * @returns {target is Window} Is `target` a Window.\n    */\n   static isWindow(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Window]';\n   }\n\n   // DOM Element typing ---------------------------------------------------------------------------------------------\n\n   /**\n    * Ensures that the given target is an `instanceof` all known DOM elements that are focusable. Please note that\n    * additional checks are required regarding focusable state; use {@link A11yHelper.isFocusable} for a complete check.\n    *\n    * @param {unknown}  target - Target to test for `instanceof` focusable HTML element.\n    *\n    * @returns {boolean} Is target an `instanceof` a focusable DOM element.\n    */\n   static isFocusableHTMLElement(target)\n   {\n      for (let cntr = this.#FocusableElementClassNames.length; --cntr >= 0;)\n      {\n         if (this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, this.#FocusableElementClassNames[cntr]))\n         {\n            return true;\n         }\n      }\n\n      return false;\n   }\n\n   /**\n    * Provides precise type checking if `target` is a DocumentFragment.\n    *\n    * @param {unknown}  target - A potential DocumentFragment to test.\n    *\n    * @returns {target is DocumentFragment} Is `target` a DocumentFragment.\n    */\n   static isDocumentFragment(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.DOCUMENT_FRAGMENT_NODE, 'DocumentFragment');\n   }\n\n   /**\n    * Provides precise type checking if `target` is an Element.\n    *\n    * @param {unknown}  target - A potential Element to test.\n    *\n    * @returns {target is Element} Is `target` an Element.\n    */\n   static isElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'Element');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a HTMLAnchorElement.\n    *\n    * @param {unknown}  target - A potential HTMLAnchorElement to test.\n    *\n    * @returns {target is HTMLAnchorElement} Is `target` a HTMLAnchorElement.\n    */\n   static isHTMLAnchorElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'HTMLAnchorElement');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a HTMLElement.\n    *\n    * @param {unknown}  target - A potential HTMLElement to test.\n    *\n    * @returns {target is HTMLElement} Is `target` a HTMLElement.\n    */\n   static isHTMLElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'HTMLElement');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a Node.\n    *\n    * @param {unknown}  target - A potential Node to test.\n    *\n    * @returns {target is Node} Is `target` a DOM Node.\n    */\n   static isNode(target)\n   {\n      if (typeof target?.nodeType !== 'number') { return false; }\n\n      if (target instanceof globalThis.Node) { return true; }\n\n      // Must retrieve window by a more thorough duck type via `getWindow` as not all Nodes have `ownerDocument`\n      // defined.\n      const activeWindow = this.getWindow(target, this.#optionsInternalCheckDOM);\n\n      const TargetNode = activeWindow?.Node;\n      return TargetNode && target instanceof TargetNode;\n   }\n\n   /**\n    * Provides precise type checking if `target` is a ShadowRoot.\n    *\n    * @param {unknown}  target - A potential ShadowRoot to test.\n    *\n    * @returns {target is ShadowRoot} Is `target` a ShadowRoot.\n    */\n   static isShadowRoot(target)\n   {\n      // ShadowRoot is a specialized type of DocumentFragment.\n      return this.#checkDOMInstanceType(target, Node.DOCUMENT_FRAGMENT_NODE, 'ShadowRoot');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a SVGElement.\n    *\n    * @param {unknown}  target - A potential SVGElement to test.\n    *\n    * @returns {target is SVGElement} Is `target` a SVGElement.\n    */\n   static isSVGElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'SVGElement');\n   }\n\n   // Event typing ---------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides basic duck type checking for `Event` signature and optional constructor name(s).\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @param {string | Set<string>} [types] Specific constructor name or Set of constructor names to match.\n    *\n    * @returns {target is Event} Is `target` an Event with optional constructor name check.\n    */\n   static isEvent(target, types)\n   {\n      if (typeof target?.type !== 'string' || typeof target?.defaultPrevented !== 'boolean' ||\n         typeof target?.stopPropagation !== 'function')\n      {\n         return false;\n      }\n\n      return types !== void 0 ? this.isCtorName(target, types) : true;\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for standard mouse / pointer events including\n    * `MouseEvent` and `PointerEvent`.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is PointerEvent} Is `target` a MouseEvent or PointerEvent.\n    */\n   static isPointerEvent(target)\n   {\n      return this.isEvent(target, this.#PointerEventSet);\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for all UI events.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is UIEvent} Is `target` a UIEvent.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent\n    */\n   static isUIEvent(target)\n   {\n      return this.isEvent(target, this.#UIEventSet);\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for standard user input events including `KeyboardEvent`,\n    * `MouseEvent`, and `PointerEvent`.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is KeyboardEvent | MouseEvent | PointerEvent} Is `target` a Keyboard, MouseEvent, or\n    *          PointerEvent.\n    */\n   static isUserInputEvent(target)\n   {\n      return this.isEvent(target, this.#UserInputEventSet);\n   }\n\n   // Generic typing -------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides basic type checking by constructor name(s) for objects. This can be useful when checking multiple\n    * constructor names against a provided Set.\n    *\n    * @param {unknown}  target - Object to test for constructor name.\n    *\n    * @param {string | Set<string>} types Specific constructor name or Set of constructor names to match.\n    *\n    * @returns {boolean} Does the provided object constructor name match the types provided.\n    */\n   static isCtorName(target, types)\n   {\n      if (!isObject(target)) { return false; }\n\n      if (typeof types === 'string' && target?.constructor?.name === types) { return true; }\n\n      return !!types?.has(target?.constructor?.name);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Internal generic DOM `instanceof` check. First will attempt to find the class name by `globalThis` falling back\n    * to the {@link Window} associated with the DOM node.\n    *\n    * @param {unknown}  target - Target to test.\n    *\n    * @param {number}   nodeType - Node type constant.\n    *\n    * @param {string}   className - DOM class name for instanceof check.\n    *\n    * @returns {boolean} Is the target the given nodeType and instance of class name.\n    */\n   static #checkDOMInstanceType(target, nodeType, className)\n   {\n      if (!isObject(target)) { return false; }\n\n      if (target.nodeType !== nodeType) { return false; }\n\n      const GlobalClass = globalThis[className];\n\n      if (GlobalClass && target instanceof GlobalClass) { return true; }\n\n      const activeWindow = this.#NodesWithOwnerDocument.has(target.nodeType) ? target?.ownerDocument?.defaultView :\n       this.getWindow(target, this.#optionsInternalCheckDOM);\n\n      const TargetClass = activeWindow?.[className];\n\n      return TargetClass && target instanceof TargetClass;\n   }\n}\n\n/**\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\n *\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\n * available.\n */\nclass ClipboardAccess\n{\n   /**\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\n    *\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\n    * empty string.\n    *\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\n    *\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\n    */\n   static async readText(activeWindow = globalThis)\n   {\n      let result;\n\n      if (!CrossWindow.isWindow(activeWindow))\n      {\n         throw new TypeError(`ClipboardAccess.readText error: 'activeWindow' is not a Window.`);\n      }\n\n      if (activeWindow?.navigator?.clipboard)\n      {\n         try\n         {\n            result = await activeWindow.navigator.clipboard.readText();\n         }\n         catch (err) { /**/ }\n      }\n\n      return result === '' ? void 0 : result;\n   }\n\n   /**\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\n    * the given text to the clipboard.\n    *\n    * @param {string}   text - Text to copy to the browser clipboard.\n    *\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\n    *\n    * @returns {Promise<boolean>} Copy successful.\n    */\n   static async writeText(text, activeWindow = globalThis)\n   {\n      if (typeof text !== 'string')\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\n      }\n\n      if (!CrossWindow.isWindow(activeWindow))\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'activeWindow' is not a Window.`);\n      }\n\n      let success = false;\n\n      if (activeWindow?.navigator?.clipboard)\n      {\n         try\n         {\n            await activeWindow.navigator.clipboard.writeText(text);\n            success = true;\n         }\n         catch (err) { /**/ }\n      }\n      else if (typeof activeWindow?.document?.execCommand === 'function')\n      {\n         const textArea = activeWindow.document.createElement('textarea');\n\n         // Place in the top-left corner of screen regardless of scroll position.\n         textArea.style.position = 'fixed';\n         textArea.style.top = '0';\n         textArea.style.left = '0';\n\n         // Ensure it has a small width and height. Setting to 1px / 1em\n         // doesn't work as this gives a negative w/h on some browsers.\n         textArea.style.width = '2em';\n         textArea.style.height = '2em';\n\n         // We don't need padding, reducing the size if it does flash render.\n         textArea.style.padding = '0';\n\n         // Clean up any borders.\n         textArea.style.border = 'none';\n         textArea.style.outline = 'none';\n         textArea.style.boxShadow = 'none';\n\n         // Avoid flash of the white box if rendered for any reason.\n         textArea.style.background = 'transparent';\n\n         textArea.value = text;\n\n         activeWindow.document.body.appendChild(textArea);\n         textArea.focus();\n         textArea.select();\n\n         try\n         {\n            success = activeWindow.document.execCommand('copy');\n         }\n         catch (err) { /**/ }\n\n         activeWindow.document.body.removeChild(textArea);\n      }\n\n      return success;\n   }\n}\n\n/**\n * Provides a utility function to parse / construct fully qualified URL instances from a URL string.\n */\nclass URLParser\n{\n   /**\n    * Parses a URL string converting it to a fully qualified URL. If URL is an existing URL instance it is returned\n    * immediately. Optionally you may construct a fully qualified URL from a relative base origin / path or with a\n    * route prefix added to the current location origin.\n    *\n    * @param {object} options - Options.\n    *\n    * @param {string | URL}   options.url - URL string to convert to a URL.\n    *\n    * @param {string}   [options.base] - Optional fully qualified base path for relative URL construction.\n    *\n    * @param {string}   [options.routePrefix] - Optional route prefix to add to location origin for absolute URL strings\n    *        when `base` is not defined.\n    *\n    * @returns {URL | null} Parsed URL or null if `url` is not parsed.\n    */\n   static parse({ url, base, routePrefix })\n   {\n      if (CrossWindow.isURL(url)) { return url; }\n\n      if (typeof url !== 'string') { return null; }\n\n      if (base !== void 0 && typeof base !== 'string') { return null; }\n\n      if (routePrefix !== void 0 && typeof routePrefix !== 'string') { return null; }\n\n      const targetURL = this.#createURL(url);\n\n      // Parse and return already fully qualified `url` string.\n      if (targetURL) { return targetURL; }\n\n      let targetBase;\n\n      // Parse relative url string.\n      if (url.startsWith('./') || url.startsWith('../'))\n      {\n         // Relative from provided `base` or current path.\n         targetBase = base ? base : `${globalThis.location.origin}${globalThis.location.pathname}`;\n      }\n      else\n      {\n         let targetRoutePrefix = '';\n\n         // Relative to current origin, but include any defined route prefix.\n         if (routePrefix)\n         {\n            // Ensure route prefix starts and ends with `/` for proper URL parsing.\n            targetRoutePrefix = routePrefix.startsWith('/') ? routePrefix : `/${routePrefix}`;\n            targetRoutePrefix = targetRoutePrefix.endsWith('/') ? targetRoutePrefix : `${targetRoutePrefix}/`;\n         }\n\n         targetBase = `${globalThis.location.origin}${targetRoutePrefix}`;\n      }\n\n      return this.#createURL(url, targetBase);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Helper to create a URL and catch any exception. Useful until `URL.parse` and `URL.canParse` are more widespread.\n    *\n    * @param {string}   url - URL string.\n    *\n    * @param {string}   base - Base origin / path.\n    *\n    * @returns {URL | null} Valid URL or null.\n    */\n   static #createURL(url, base = '')\n   {\n      try { return new URL(url, base); }\n      catch(err) { return null; }\n   }\n}\n\nexport { BrowserSupports, ClipboardAccess, CrossWindow, URLParser };\n//# sourceMappingURL=index.js.map\n","import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/dom/style';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an instance of {@link ResizeObserver} that can manage multiple elements and notify a wide range of\n * {@link ResizeObserverData.ResizeTarget} listeners. Offset width and height is also provided through caching the\n * margin and padding styles of the target element.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /** @type {Map<HTMLElement, import('./types-local').ResizeObserverSubscriber[]>} */\n   #elMap = new Map();\n\n   /** @type {ResizeObserver} */\n   #resizeObserver;\n\n   /**\n    * Defines the various shape / update type of the given target.\n    *\n    * @type {{ [key: string]: number }}\n    */\n   static #updateTypes = Object.freeze({\n      none: 0,\n      attribute: 1,\n      function: 2,\n      resizeObserved: 3,\n      setContentBounds: 4,\n      setDimension: 5,\n      storeObject: 6,\n      storesObject: 7\n   });\n\n   constructor()\n   {\n      this.#resizeObserver = new ResizeObserver((entries) =>\n      {\n         for (const entry of entries)\n         {\n            const subscribers = this.#elMap.get(entry?.target);\n\n            if (Array.isArray(subscribers))\n            {\n               const contentWidth = entry.contentRect.width;\n               const contentHeight = entry.contentRect.height;\n\n               for (const subscriber of subscribers)\n               {\n                  ResizeObserverManager.#updateSubscriber(subscriber, contentWidth, contentHeight);\n               }\n            }\n         }\n      });\n   }\n\n   /**\n    * Add an {@link HTMLElement} and {@link ResizeObserverData.ResizeTarget} instance for monitoring. Create cached\n    * style attributes for the given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} target - A target that contains one of several\n    *        mechanisms for updating resize data.\n    */\n   add(el, target)\n   {\n      if (!CrossWindow.isHTMLElement(el))\n      {\n         throw new TypeError(`ResizeObserverManager.add error: 'el' is not a HTMLElement.`);\n      }\n\n      // Verify that this target is not already added for this element.\n      if (this.#hasTarget(el, target)) { return; }\n\n      const updateType = ResizeObserverManager.#getUpdateType(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`ResizeObserverManager.add error: 'target' is not a valid ResizeObserverManager target.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      /** @type {import('./types-local').ResizeObserverSubscriber} */\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (this.#elMap.has(el))\n      {\n         const subscribers = this.#elMap.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         this.#elMap.set(el, [data]);\n      }\n\n      this.#resizeObserver.observe(el);\n   }\n\n   /**\n    * Clears and unobserves all currently tracked elements and managed targets.\n    */\n   clear()\n   {\n      for (const el of this.#elMap.keys()) { this.#resizeObserver.unobserve(el); }\n\n      this.#elMap.clear();\n   }\n\n   /**\n    * Removes all {@link ResizeObserverData.ResizeTarget} instances for the given element from monitoring when just an\n    * element is provided otherwise removes a specific target from the monitoring map. If no more targets remain then\n    * the element is removed from monitoring.\n    *\n    * @param {HTMLElement} el - Element to remove from monitoring.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to remove from monitoring.\n    */\n   remove(el, target = void 0)\n   {\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         // Remove specific target from subscribers.\n         if (target !== void 0)\n         {\n            const index = subscribers.findIndex((entry) => entry.target === target);\n            if (index >= 0)\n            {\n               subscribers.splice(index, 1);\n            }\n         }\n         else\n         {\n            // Remove all subscribers.\n            subscribers.length = 0;\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            this.#elMap.delete(el);\n            this.#resizeObserver.unobserve(el);\n         }\n      }\n   }\n\n   /**\n    * Provides a function that when invoked with an element updates the cached styles for each subscriber of the\n    * element.\n    *\n    * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n    * to update the cache if you change border or padding attributes of the element.\n    *\n    * @param {HTMLElement} el - A HTML element.\n    */\n   updateCache(el)\n   {\n      const subscribers = this.#elMap.get(el);\n\n      if (Array.isArray(subscribers))\n      {\n         const computed = globalThis.getComputedStyle(el);\n\n         // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n         // Used to create the offset width & height values from the context box ResizeObserver provides.\n         const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n         const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n         const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n         const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n         const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ??\n          StyleParse.pixels(computed.paddingBottom) ?? 0;\n         const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n         const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n         const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n         const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n         const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n         for (const subscriber of subscribers)\n         {\n            subscriber.styles.additionalWidth = additionalWidth;\n            subscriber.styles.additionalHeight = additionalHeight;\n            ResizeObserverManager.#updateSubscriber(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n         }\n      }\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget}  target - The target instance.\n    *\n    * @returns {number} Update type value.\n    */\n   static #getUpdateType(target)\n   {\n      if (typeof target?.resizeObserved === 'function') { return this.#updateTypes.resizeObserved; }\n      if (typeof target?.setDimension === 'function') { return this.#updateTypes.setDimension; }\n      if (typeof target?.setContentBounds === 'function') { return this.#updateTypes.setContentBounds; }\n\n      const targetType = typeof target;\n\n      // Does the target have resizeObserved writable store?\n      if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n      {\n         if (isWritableStore(target.resizeObserved))\n         {\n            return this.#updateTypes.storeObject;\n         }\n\n         // Now check for a child stores object which is a common TRL pattern for exposing stores.\n         const stores = target?.stores;\n         if (isObject(stores) || typeof stores === 'function')\n         {\n            if (isWritableStore(stores.resizeObserved))\n            {\n               return this.#updateTypes.storesObject;\n            }\n         }\n      }\n\n      if (targetType !== null && targetType === 'object') { return this.#updateTypes.attribute; }\n\n      if (targetType === 'function') { return this.#updateTypes.function; }\n\n      return this.#updateTypes.none;\n   }\n\n   /**\n    * Determines if a given element and target is already being observed.\n    *\n    * @param {HTMLElement} el - A HTMLElement.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to find.\n    *\n    * @returns {boolean} Whether the target is already being tracked for the given element.\n    */\n   #hasTarget(el, target)\n   {\n      if (target === void 0 || target === null) { return false; }\n\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         return subscribers.findIndex((entry) => entry.target === target) >= 0;\n      }\n\n      return false;\n   }\n\n   /**\n    * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n    * the content values + cached styles.\n    *\n    * @param {import('./types-local').ResizeObserverSubscriber} subscriber - Internal data about subscriber.\n    *\n    * @param {number|undefined}  contentWidth - ResizeObserver `contentRect.width` value or undefined.\n    *\n    * @param {number|undefined}  contentHeight - ResizeObserver `contentRect.height` value or undefined.\n    */\n   static #updateSubscriber(subscriber, contentWidth, contentHeight)\n   {\n      const styles = subscriber.styles;\n\n      subscriber.contentWidth = contentWidth;\n      subscriber.contentHeight = contentHeight;\n\n      const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n      const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n      const target = subscriber.target;\n\n      switch (subscriber.updateType)\n      {\n         case this.#updateTypes.attribute:\n            target.contentWidth = contentWidth;\n            target.contentHeight = contentHeight;\n            target.offsetWidth = offsetWidth;\n            target.offsetHeight = offsetHeight;\n            break;\n\n         case this.#updateTypes.function:\n            target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.resizeObserved:\n            target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setContentBounds:\n            target.setContentBounds?.(contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setDimension:\n            target.setDimension?.(offsetWidth, offsetHeight);\n            break;\n\n         case this.#updateTypes.storeObject:\n            target.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n\n         case this.#updateTypes.storesObject:\n            target.stores.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n      }\n   }\n}\n\nexport { ResizeObserverManager };\n//# sourceMappingURL=index.js.map\n","import { ResizeObserverManager } from '@typhonjs-fvtt/runtime/util/dom/observer';\n\n/**\n * Provides a single global ResizeObserverManager instance for the resizeObserver action.\n *\n * @type {ResizeObserverManager}\n */\nconst resizeObserverActionManager = new ResizeObserverManager();\n\n/**\n * Provides an action to monitor the given {@link HTMLElement} node with {@link ResizeObserver} via\n * {@link ResizeObserverManager} posting width / height changes to the {@link ResizeObserverData.ResizeTarget} in\n * various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes directly set on target.\n * - target is a function; the function invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement} node - The node associated with the action.\n *\n * @param {import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget} target - A\n *        {@link ResizeObserverManager} target to update with observed width & height changes.\n *\n * @returns {(import('svelte/action').ActionReturn<\n *   import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget\n * >)} The action lifecycle methods.\n *\n * @see https://github.com/sveltejs/svelte/issues/4233\n */\nfunction resizeObserver(node, target)\n{\n   resizeObserverActionManager.add(node, target);\n\n   return {\n      /**\n       * @param {import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget} newTarget - A\n       *        {@link ResizeObserverManager} target to update with observed width & height changes.\n       */\n      update: (newTarget) =>\n      {\n         resizeObserverActionManager.remove(node, target);\n         target = newTarget;\n         resizeObserverActionManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         resizeObserverActionManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - A HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   resizeObserverActionManager.updateCache(el);\n};\n\nexport { resizeObserver };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an action to apply CSS style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {{ [key: string]: string | null }}  properties - Hyphen case CSS property key / value object of properties\n *        to set.\n *\n * @returns {import('svelte/action').ActionReturn<{ [key: string]: string | null }>} Lifecycle functions.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (!isObject(properties)) { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      /**\n       * @param {{ [key: string]: string | null }}  newProperties - Key / value object of properties to set.\n       */\n      update: (newProperties) =>\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\nexport { applyStyles };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Applies the given action dynamically allowing the hosted action to be updated reactively while still appropriately\n * handling the action lifecycle methods.\n *\n * @param {HTMLElement} node - The node associated with the action.\n *\n * @param {import('./types').DynamicActionOptions} options - Defines the action to dynamically mount.\n *\n * @returns {import('svelte/action').ActionReturn<import('./types').DynamicActionOptions>} The action lifecycle\n *          methods.\n */\nfunction dynamicAction(node, { action, data } = {})\n{\n   let actionResult;\n\n   if (typeof action === 'function') { actionResult = action(node, data); }\n\n   return {\n      /**\n       * @param {import('./types').DynamicActionOptions} newOptions - Defines the new action to dynamically mount.\n       */\n      update: (newOptions) =>\n      {\n         // If `newOptions` is not an object then destroy any old action.\n         if (!isObject(newOptions))\n         {\n            actionResult?.destroy?.();\n            action = void 0;\n            data = void 0;\n\n            return;\n         }\n\n         const { action: newAction, data: newData } = newOptions;\n\n         if (typeof newAction !== 'function')\n         {\n            console.warn(`dynamicAction.update warning: Aborting as 'action' is not a function.`);\n            return;\n         }\n\n         const hasNewData = newData !== data;\n\n         if (hasNewData) { data = newData; }\n\n         if (newAction !== action)\n         {\n            // If the action changes destroy the previous action and apply the new one.\n            actionResult?.destroy?.();\n\n            action = newAction;\n            actionResult = action(node, data);\n         }\n         else if (hasNewData)\n         {\n            actionResult?.update?.(data);\n         }\n      },\n\n      destroy: () =>\n      {\n         actionResult?.destroy?.();\n\n         action = void 0;\n         data = void 0;\n         actionResult = void 0;\n      }\n   };\n}\n\nexport { dynamicAction };\n//# sourceMappingURL=index.js.map\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\nexport { lerp };\n//# sourceMappingURL=index.js.map\n","import * as svelteEasingFunc from 'svelte/easing';\n\n/**\n * Defines a read-only list of Svelte easing function names.\n *\n * @type {Readonly<import('./types').EasingFunctionName[]>}\n */\nconst easingList = Object.freeze([\n   'backIn',\n   'backInOut',\n   'backOut',\n   'bounceIn',\n   'bounceInOut',\n   'bounceOut',\n   'circIn',\n   'circInOut',\n   'circOut',\n   'cubicIn',\n   'cubicInOut',\n   'cubicOut',\n   'elasticIn',\n   'elasticInOut',\n   'elasticOut',\n   'expoIn',\n   'expoInOut',\n   'expoOut',\n   'linear',\n   'quadIn',\n   'quadInOut',\n   'quadOut',\n   'quartIn',\n   'quartInOut',\n   'quartOut',\n   'quintIn',\n   'quintInOut',\n   'quintOut',\n   'sineIn',\n   'sineInOut',\n   'sineOut'\n]);\n\n/**\n * @type {Readonly<{ [key in import('./types').EasingFunctionName]: import('#runtime/svelte/easing').EasingFunction }>}\n */\nconst easingFunc = svelteEasingFunc;\n\n/**\n * Performs a lookup for standard Svelte easing functions by name. For convenience if passing in a function it is\n * returned verbatim.\n *\n * @param {import('./types').EasingReference} easingRef - The name of a standard Svelte easing function or a supplied\n *        easing function.\n *\n * @param {object}   [options] - Optional parameters.\n *\n * @param {import('./types').EasingFunctionName | false} [options.default='linear'] - A default easing function by\n *        name to return. When specified as `false` no default fallback easing function is selected. The default value\n *        is `linear`.\n *\n * @returns {import('#runtime/svelte/easing').EasingFunction} The requested easing function.\n */\nfunction getEasingFunc(easingRef, options)\n{\n   if (typeof easingRef === 'function') { return easingRef; }\n\n   const easingFn = easingFunc[easingRef];\n\n   return easingFn ? easingFn : easingFunc[options?.default ?? 'linear'];\n}\n\nexport { easingFunc, easingList, getEasingFunc };\n//# sourceMappingURL=index.js.map\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { getEasingFunc } from '@typhonjs-fvtt/runtime/svelte/easing';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing='linear'] - Easing function name or\n *        function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = getEasingFunc(options.easing);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both\n * transitions, however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing='linear'] - Easing function name or\n *        function to apply to both slide & fade transitions.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingFade='linear'] - Easing function name or\n *        function to apply to the fade transition.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingRotate='linear'] - Easing function name or\n *        function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = getEasingFunc(options.easingFade ?? options.easing);\n   const easingRotate = getEasingFunc(options.easingRotate ?? options.easing);\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {'x' | 'y'}   [options.axis] - The sliding axis.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing=linear] - Easing function name or\n *        function to apply to both slide & fade transitions.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingFade=linear] - Easing function name or\n *        function to apply to the fade transition.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingSlide=linear] - Easing function name or\n *        function to apply to the slide transition.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = getEasingFunc(options.easingFade ?? options.easing);\n   const slideEasing = getEasingFunc(options.easingSlide ?? options.easing);\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node, { axis: options.axis });\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, ...rest: any[]) => import('svelte/transition').TransitionConfig} fn -\n *        A Svelte transition function.\n *\n * @returns {(\n *    node: Element,\n *    data: { from: DOMRect, to: DOMRect },\n *    ...rest: any\n * ) => import('svelte/animation').AnimationConfig} - Transition function converted to an animation.\n */\nfunction toAnimation(fn)\n{\n   return (node, animations, ...rest) => fn(node, ...rest);\n}\n\n/**\n * Provides static data useful for handling custom props / options to components that allow dynamic configuration of\n * transitions. This is used in all application shells and components that have configurable transitions.\n *\n * @ignore\n */\nclass TJSDefaultTransition\n{\n   static #options = {};\n\n   static #default = () => void 0;\n\n   /**\n    * @returns {() => undefined} Default empty transition.\n    */\n   static get default() { return this.#default; }\n\n   /**\n    * @returns {{}} Default empty options.\n    */\n   static get options() { return this.#options; }\n}\n\nexport { TJSDefaultTransition, rotate, rotateFade, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","import { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n *\n * Note: Global debugging can be enabled by setting `A11yHelper.debug = true`.\n */\nclass A11yHelper\n{\n   /**\n    * You can set global focus debugging enabled by setting `A11yHelper.debug = true`.\n    *\n    * @type {boolean}\n    */\n   static #globalDebug = false;\n\n   /**\n    * @returns {boolean} Global debugging enabled.\n    */\n   static get debug() { return this.#globalDebug; }\n\n   /**\n    * @param {boolean}  debug - Global debug enabled\n    */\n   static set debug(debug)\n   {\n      if (typeof debug !== 'boolean') { throw new TypeError(`'debug' is not a boolean.`); }\n\n      this.#globalDebug = debug;\n   }\n\n   /**\n    * Runs a media query to determine if the user / OS configuration is set up for reduced motion / animation.\n    *\n    * @returns {boolean} User prefers reduced motion.\n    */\n   static get prefersReducedMotion()\n   {\n      return globalThis?.matchMedia('(prefers-reduced-motion: reduce)')?.matches ?? false;\n   }\n\n   /**\n    * Apply focus to the HTMLElement / SVGElement targets in a given A11yFocusSource data object. An iterable list\n    * `options.focusEl` can contain HTMLElement / SVGElements or selector strings. If multiple focus targets are\n    * provided in a list then the first valid target found will be focused. If focus target is a string then a lookup\n    * via `document.querySelector` is performed. In this case you should provide a unique selector for the desired\n    * focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource | { focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? this.debug || focusOpts.debug : this.debug;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `,\n                focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target?.nodeType === Node.ELEMENT_NODE && target?.isConnected)\n               {\n                  target?.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element?.nodeType === Node.ELEMENT_NODE && element?.isConnected)\n                  {\n                     element?.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} First focusable child element.\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {Element | Document} [element=document] Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {Array<FocusableElement>} Child keyboard focusable elements.\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements,\n    parentHidden = false, selectors } = {})\n   {\n      if (element?.nodeType !== Node.ELEMENT_NODE && element?.nodeType !== Node.DOCUMENT_NODE)\n      {\n         throw new TypeError(`'element' is not a HTMLElement, SVGElement, or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !CrossWindow.isSet(ignoreElements))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      let allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n\n      if (parentHidden)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !this.isParentHidden(el, element);\n         });\n      }\n\n      return allElements;\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent | MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {FocusableElement | string} [options.focusEl] - A specific HTMLElement / SVGElement or selector\n    *        string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !this.isFocusSource(focusEl))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement, SVGElement, or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      const debugEnabled = typeof debug === 'boolean' ? this.debug || debug : this.debug;\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         const result = {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n\n         if (debugEnabled)\n         {\n            console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' without event: `, result);\n         }\n\n         return result;\n      }\n\n      // Perform duck typing on event constructor name.\n      if (event !== void 0 && !CrossWindow.isUserInputEvent(event))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent, MouseEvent, or PointerEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {Element} */\n      let targetEl;\n\n      if (event)\n      {\n         if (A11yHelper.isFocusable(event.target))\n         {\n            targetEl = event.target;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.target: `, targetEl);\n            }\n         }\n         else if (A11yHelper.isFocusable(event.currentTarget))\n         {\n            targetEl = event.currentTarget;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.currentTarget: `, targetEl);\n            }\n         }\n         else\n         {\n            if (debugEnabled)\n            {\n               console.debug(\n                `A11yHelper.getFocusSource debug: 'event.target' / 'event.currentTarget' are not focusable.`);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.target': `, event.target);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.currentTarget': `, event.currentTarget);\n            }\n         }\n\n         if (targetEl)\n         {\n            if (targetEl?.nodeType !== Node.ELEMENT_NODE && typeof targetEl?.focus !== 'function')\n            {\n               throw new TypeError(`A11yHelper.getFocusSource error: 'targetEl' is not an HTMLElement or SVGElement.`);\n            }\n         }\n      }\n\n      const result = { debug };\n\n      // Perform duck typing on event constructor name.\n      if (CrossWindow.isPointerEvent(event))\n      {\n         // Firefox currently (11/24) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            // Always include x / y coordinates and targetEl may not be defined.\n            const rectTarget = targetEl ?? event.target;\n\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n         else\n         {\n            result.source = 'pointer';\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n      }\n      else\n      {\n         // Always include x / y coordinates and targetEl may not be defined.\n         const rectTarget = targetEl ?? event?.target;\n\n         if (rectTarget)\n         {\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n         }\n\n         if (focusEl) { result.focusEl.push(focusEl); }\n      }\n\n      if (debugEnabled)\n      {\n         console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' with event: `, result);\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} Last focusable child element.\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {unknown} el - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || el?.hidden || !el?.isConnected || el?.nodeType !== Node.ELEMENT_NODE ||\n       typeof el?.focus !== 'function')\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = globalThis.parseInt(el.getAttribute('tabindex'));\n      const tabindexFocusable = Number.isInteger(tabindexAttr) && tabindexAttr >= 0;\n\n      if (contenteditableFocusable || tabindexFocusable || CrossWindow.isFocusableHTMLElement(el))\n      {\n         // Ensure that an anchor element has an `href` attribute.\n         if (anchorHref && !tabindexFocusable && CrossWindow.isHTMLAnchorElement(el) &&\n          typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {Element | string}   data - Either an HTMLElement, SVGElement, or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return typeof data === 'string' || (data?.nodeType === Node.ELEMENT_NODE && typeof data?.focus === 'function');\n   }\n\n   /**\n    * Tests if the given `element` is a Element node and has a `focus` method.\n    *\n    * @param {Element}  element - Element to test for focus method.\n    *\n    * @returns {boolean} Whether the element has a focus method.\n    */\n   static isFocusTarget(element)\n   {\n      return element !== void 0 && element !== null && element?.nodeType === Node.ELEMENT_NODE &&\n       typeof element?.focus === 'function';\n   }\n\n   /**\n    * Perform a parent traversal from the current active element attempting to match the given element to test whether\n    * current active element is within that element.\n    *\n    * @param {Element}  element - An element to match in parent traversal from the active element.\n    *\n    * @returns {boolean} Whether there is focus within the given element.\n    */\n   static isFocusWithin(element)\n   {\n      if (!isObject(element) || element?.hidden || !element?.isConnected) { return false; }\n\n      let active = CrossWindow.getActiveElement(element);\n\n      if (!active) { return false; }\n\n      while (active)\n      {\n         if (active === element) { return true; }\n\n         active = active.parentElement;\n      }\n\n      return false;\n   }\n\n   /**\n    * Traverses the given element's parent elements to check if any parent has `offsetWidth` and `offsetHeight` of 0,\n    * indicating that a parent element is hidden. If a parent element is hidden, the given element is also considered\n    * hidden. This is a reasonably efficient check and can be enabled as a filter step in conjunction with focusable\n    * element detection methods like {@link A11yHelper.getFocusableElements}.\n    *\n    * @param {Element}  element - The starting element to check.\n    *\n    * @param {Element}  [stopElement] - The stopping parent element for traversal. If not defined, `document.body` is\n    *        used as the stopping element.\n    *\n    * @returns {boolean} `true` if a parent element of the given element is hidden; otherwise, `false`.\n    */\n   static isParentHidden(element, stopElement)\n   {\n      if (!CrossWindow.isElement(element)) { throw new TypeError(`'element' is not an Element.`); }\n\n      // Set `stopElement` to `document.body` if undefined.\n      stopElement = stopElement ?? CrossWindow.getDocument(element)?.body;\n\n      if (!CrossWindow.isElement(stopElement)) { throw new TypeError(`'stopElement' must be an Element.`); }\n\n      let current = element.parentElement;\n\n      while (current)\n      {\n         // Stop traversal if `stopElement` is reached.\n         if (current === stopElement) { break; }\n\n         // Check if the current parent is hidden by its size.\n         if (current.offsetWidth === 0 && current.offsetHeight === 0) { return true; }\n\n         current = current.parentElement;\n      }\n\n      // No parent is hidden.\n      return false;\n   }\n}\n\nexport { A11yHelper };\n//# sourceMappingURL=index.js.map\n","import { writable } from 'svelte/store';\n\n/**\n * Provides the internal context to all application shells.\n *\n * @internal\n */\nexport class AppShellContextInternal\n{\n   /** @type {InternalAppStores} */\n   #stores;\n\n   constructor()\n   {\n      this.#stores = {\n         elementContent: writable(void 0),\n         elementRoot: writable(void 0)\n      };\n\n      Object.freeze(this.#stores);\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {InternalAppStores} The internal context stores for elementContent / elementRoot\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n}\n\n/**\n * @typedef {object} InternalAppStores\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementContent The window content element.\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementRoot The window root element.\n */\n","import { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Various utilities to duck type / detect Svelte components and run outro transition while destroying a component\n * externally.\n */\nclass TJSSvelteUtil\n{\n   /**\n    * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n    *\n    * @param {unknown}  comp - Data to check as a Svelte component.\n    *\n    * @returns {boolean} Whether basic duck typing succeeds.\n    */\n   static isComponent(comp)\n   {\n      if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n      // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n      // This class doesn't define methods on the prototype, so we must check if the constructor name\n      // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n      const prototypeName = comp?.prototype?.constructor?.name;\n\n      if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n       prototypeName === 'ProxyComponent'))\n      {\n         return true;\n      }\n\n      return typeof window !== 'undefined' ?\n       typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n        typeof comp.render === 'function'; // server-side\n   }\n\n   /**\n    * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n    *\n    * @param {unknown}  comp - Data to check as a HMR proxy component.\n    *\n    * @returns {boolean} Whether basic duck typing succeeds.\n    */\n   static isHMRProxy(comp)\n   {\n      const instanceName = comp?.constructor?.name;\n      if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n      {\n         return true;\n      }\n\n      const prototypeName = comp?.prototype?.constructor?.name;\n      return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n       prototypeName === 'ProxyComponent');\n   }\n\n   /**\n    * Runs outro transition then destroys Svelte component.\n    *\n    * Workaround for https://github.com/sveltejs/svelte/issues/4056\n    *\n    * @param {*}  instance - A Svelte component.\n    *\n    * @returns {Promise} Promise returned after outro transition completed and component destroyed.\n    */\n   static async outroAndDestroy(instance)\n   {\n      if (instance === void 0 || instance === null) { return Promise.resolve(); }\n\n      return new Promise((resolve) =>\n      {\n         if (instance?.$$?.fragment && instance?.$$?.fragment?.o)\n         {\n            group_outros();\n            transition_out(instance.$$.fragment, 0, 0, () =>\n            {\n               instance?.$destroy?.();\n               resolve();\n            });\n            check_outros();\n         }\n         else\n         {\n            instance?.$destroy?.();\n            resolve();\n         }\n      });\n   }\n}\n\nObject.seal(TJSSvelteUtil);\n\n/**\n * Provides utilities to verify and parse {@link TJSSvelteConfig} configuration objects.\n */\nclass TJSSvelteConfigUtil\n{\n   /**\n    * Validates `config` argument whether it is a valid {@link TJSSvelteConfig}.\n    *\n    * @param {unknown}  config - The potential config object to validate.\n    *\n    * @param {object}   [options] - Options.\n    *\n    * @param {boolean}  [options.raiseException=false] - If validation fails raise an exception.\n    *\n    * @returns {config is import('./types').TJSSvelteConfig} Is the config a valid TJSSvelteConfig.\n    *\n    * @throws {TypeError}  Any validation error when `raiseException` is enabled.\n    */\n   static isConfig(config, { raiseException = false } = {})\n   {\n      if (!isObject(config))\n      {\n         if (raiseException) { throw new TypeError(`TJSSvelteConfigUtil.isConfig error: 'config' is not an object.`); }\n         return false;\n      }\n\n      if (!TJSSvelteUtil.isComponent(config.class))\n      {\n         if (raiseException)\n         {\n            throw new TypeError(\n             `TJSSvelteConfigUtil.isConfig error: 'config.class' is not a Svelte component constructor.`);\n         }\n         return false;\n      }\n\n      return true;\n   }\n\n   /**\n    * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n    * correctly.\n    *\n    * @param {import('./types').TJSSvelteConfig}   config - Svelte config object.\n    *\n    * @param {any}       [thisArg] - `This` reference to set for invoking any props function.\n    *\n    * @returns {import('./types').TJSSvelteConfig} The processed Svelte config object.\n    */\n   static parseConfig(config, thisArg = void 0)\n   {\n      if (!isObject(config))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (!TJSSvelteUtil.isComponent(config.class))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'class' is not a Svelte component constructor for config:\\n${\n            JSON.stringify(config)}.`);\n      }\n\n      if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.target !== void 0 && typeof config.target !== 'string' && !CrossWindow.isElement(config.target) &&\n       !CrossWindow.isShadowRoot(config.target) && !CrossWindow.isDocumentFragment(config.target))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'target' is not a Element, ShadowRoot, or DocumentFragment for config:\\n${\n           JSON.stringify(config)}.`);\n      }\n\n      if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !CrossWindow.isElement(config.anchor) &&\n       !CrossWindow.isShadowRoot(config.anchor) && !CrossWindow.isDocumentFragment(config.anchor))\n      {\n         throw new TypeError(`TJSSvelteConfigUtil.parseConfig - 'anchor' is not a string, Element for config:\\n${\n          JSON.stringify(config)}.`);\n      }\n\n      if (config.context !== void 0 && typeof config.context !== 'function' && !CrossWindow.isMap(config.context) &&\n       !isObject(config.context))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'context' is not a Map, function or object for config:\\n${\n            JSON.stringify(config)}.`);\n      }\n\n      // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n      // `selectorTarget` optionally stores a target element found in main element.\n      if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n      if (config.options !== void 0 && !isObject(config.options))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // Validate TyphonJS standard options. // TODO: This will change in `0.3.0`!\n      if (isObject(config.options))\n      {\n         if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n         {\n            throw new TypeError(`TJSSvelteConfigUtil.parseConfig - 'options.injectApp' is not a boolean for config:\\n${\n             JSON.stringify(config)}.`);\n         }\n\n         if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n         {\n            throw new TypeError(\n             `TJSSvelteConfigUtil.parseConfig - 'options.injectEventbus' is not a boolean for config:\\n${\n              JSON.stringify(config)}.`);\n         }\n\n         // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n         if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n         {\n            throw new TypeError(`TJSSvelteConfigUtil.parseConfig - 'selectorElement' is not a string for config:\\n${\n             JSON.stringify(config)}.`);\n         }\n      }\n\n      const svelteConfig = { ...config };\n\n      // Delete extra Svelte options.\n      delete svelteConfig.options;\n\n      let externalContext = {};\n\n      // If a context callback function is provided then invoke it with `this` being the Foundry app.\n      // If an object is returned it adds the entries to external context.\n      if (typeof svelteConfig.context === 'function')\n      {\n         const contextFunc = svelteConfig.context;\n         delete svelteConfig.context;\n\n         const result = contextFunc.call(thisArg);\n         if (isObject(result))\n         {\n            externalContext = { ...result };\n         }\n         else\n         {\n            throw new Error(\n             `TJSSvelteConfigUtil.parseConfig - 'context' is a function that did not return an object for config:\\n${\n              JSON.stringify(config)}`);\n         }\n      }\n      else if (CrossWindow.isMap(svelteConfig.context))\n      {\n         externalContext = Object.fromEntries(svelteConfig.context);\n         delete svelteConfig.context;\n      }\n      else if (isObject(svelteConfig.context))\n      {\n         externalContext = svelteConfig.context;\n         delete svelteConfig.context;\n      }\n\n      // If a props is a function then invoke it with `this` being the Foundry app.\n      // If an object is returned set it as the props.\n      svelteConfig.props = this.#processProps(svelteConfig.props, thisArg, config);\n\n      // Process children components attaching to external context.\n      if (Array.isArray(svelteConfig.children))\n      {\n         const children = [];\n\n         for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n         {\n            const child = svelteConfig.children[cntr];\n\n            if (!TJSSvelteUtil.isComponent(child.class))\n            {\n               throw new Error(`TJSSvelteConfigUtil.parseConfig - 'class' is not a Svelte component for child[${\n                cntr}] for config:\\n${JSON.stringify(config)}`);\n            }\n\n            child.props = this.#processProps(child.props, thisArg, config);\n\n            children.push(child);\n         }\n\n         if (children.length > 0)\n         {\n            externalContext.children = children;\n         }\n\n         delete svelteConfig.children;\n      }\n      else if (isObject(svelteConfig.children))\n      {\n         if (!TJSSvelteUtil.isComponent(svelteConfig.children.class))\n         {\n            throw new Error(\n             `TJSSvelteConfigUtil.parseConfig - 'class' is not a Svelte component for children object for config:\\n${\n              JSON.stringify(config)}`);\n         }\n\n         svelteConfig.children.props = this.#processProps(svelteConfig.children.props, thisArg, config);\n\n         externalContext.children = [svelteConfig.children];\n         delete svelteConfig.children;\n      }\n\n      if (!CrossWindow.isMap(svelteConfig.context))\n      {\n         svelteConfig.context = new Map();\n      }\n\n      svelteConfig.context.set('#external', externalContext);\n\n      return svelteConfig;\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n    *\n    * @param {{ [key: string]: any } | Function}   props - Svelte props.\n    *\n    * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n    *\n    * @param {object}            config - Svelte config\n    *\n    * @returns {{ [key: string]: any } | undefined}     Svelte props.\n    */\n   static #processProps(props, thisArg, config)\n   {\n      // If a props is a function then invoke it with `this` being the Foundry app.\n      // If an object is returned set it as the props.\n      if (typeof props === 'function')\n      {\n         const result = props.call(thisArg);\n         if (isObject(result))\n         {\n            return result;\n         }\n         else\n         {\n            throw new Error(\n             `TJSSvelteConfigUtil.parseConfig - 'props' is a function that did not return an object for config:\\n${\n              JSON.stringify(config)}`);\n         }\n      }\n      else if (isObject(props))\n      {\n         return props;\n      }\n      else if (props !== void 0)\n      {\n         throw new Error(`TJSSvelteConfigUtil.parseConfig - 'props' is not a function or an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      return {};\n   }\n}\n\nObject.seal(TJSSvelteConfigUtil);\n\nexport { TJSSvelteConfigUtil, TJSSvelteUtil };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\n * keys.\n *\n * @param {string}   stringId - The string ID to translate.\n *\n * @param {object}   [data] - Provided input data.\n *\n * @returns {string} The translated and formatted string\n */\nfunction localize(stringId, data)\n{\n   const result = !isObject(data) ? globalThis.game.i18n.localize(stringId) :\n    globalThis.game.i18n.format(stringId, data);\n\n   return result !== void 0 ? result : '';\n}\n\nexport { localize };\n//# sourceMappingURL=index.js.map\n","/**\n * Clamps a value between min / max values.\n *\n * @param {number}   value - Value to clamp.\n *\n * @param {number}   min - Minimum value.\n *\n * @param {number}   max - Maximum value.\n *\n * @returns {number} Clamped value.\n */\nfunction clamp(value = 0, min = 0, max = 0)\n{\n   return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Provides methods for retrieving pseudorandom values and other utilities using {@link Math.random}.\n */\nclass MathRandom\n{\n   /**\n    * Private constructor to prevent instantiation.\n    *\n    * @private\n    */\n   constructor()\n   {\n      throw new Error('This class should not be instantiated.');\n   }\n\n   /**\n    * Returns a random inclusive integer.\n    *\n    * @param {number}   min - Minimum value.\n    *\n    * @param {number}   max - Maximum value.\n    *\n    * @returns {number} Random inclusive integer.\n    */\n   static getInt(min, max)\n   {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n   }\n\n   /**\n    * Returns a random floating point number between min (inclusive) and max (exclusive).\n    *\n    * @param {number}   min - Minimum value\n    *\n    * @param {number}   max - Maximum value.\n    *\n    * @returns {number} Random float.\n    */\n   static getFloat(min, max)\n   {\n      return Math.random() * (max - min) + min;\n   }\n\n   /**\n    * Returns a random boolean.\n    *\n    * @returns {boolean} Random boolean.\n    */\n   static getBoolean()\n   {\n      return Math.random() > 0.5;\n   }\n\n   /**\n    * Shuffles an array using the Fisher-Yates shuffle algorithm. Modifies the input array in place and returns it.\n    *\n    * @template T\n    *\n    * @param {T[]} arr - The array to shuffle.\n    *\n    * @returns {T[]} The shuffled array.\n    */\n   static shuffleArray(arr)\n   {\n      for (let i = arr.length - 1; i > 0; i--)\n      {\n         const j = MathRandom.getInt(0, i);\n         [arr[i], arr[j]] = [arr[j], arr[i]];\n      }\n\n      return arr;\n   }\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\nexport { MathRandom, clamp, degToRad, radToDeg };\n//# sourceMappingURL=index.js.map\n","import { derived, get } from 'svelte/store';\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function} reflect Called when the derived store gets a new value via its `set` or\n * `update` methods, and determines new values for the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = reflect.length >= 2;\n\tvar wrappedDerive = (got, set, update) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set, update);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tfunction doReflect(reflecting) {\n\t\tvar setWith = reflect(reflecting, originValues);\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t(reflecting, object) => {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reflecting, object) => {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport { propertyStore, writableDerived };\n//# sourceMappingURL=index.js.map\n","// gl-matrix - v4.0.0-beta.3 - A high performance matrix and vector library.\n// @author Brandon Jones\n// @author Colin MacKenzie IV\n// @license MIT (https://github.com/toji/gl-matrix/blob/master/LICENSE.md)\n\n// src/common/index.ts\nvar GLM_EPSILON = 1e-6;\n\n// gl-matrix - v4.0.0-beta.3 - A high performance matrix and vector library.\n// @author Brandon Jones\n// @author Colin MacKenzie IV\n// @license MIT (https://github.com/toji/gl-matrix/blob/master/LICENSE.md)\n\nvar Mat2 = class _Mat2 extends Float32Array {\n  static #IDENTITY_2X2 = new Float32Array([\n    1,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Create a {@link Mat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      default:\n        super(_Mat2.#IDENTITY_2X2);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat2.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat2} into `this`.\n   *\n   * @param a the source vector\n   * @returns `this`\n   * @category Methods\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat2.identity(this)\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  identity() {\n    this.set(_Mat2.#IDENTITY_2X2);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat2} against another one\n   * Equivalent to `Mat2.multiply(this, this, b);`\n   *\n   * @param b - The second operand\n   * @returns `this`\n   * @category Methods\n   */\n  multiply(b) {\n    return _Mat2.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat2.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat2}\n   * Equivalent to `Mat2.transpose(this, this);`\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  transpose() {\n    return _Mat2.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat2}\n   * Equivalent to `Mat4.invert(this, this);`\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  invert() {\n    return _Mat2.invert(this, this);\n  }\n  /**\n   * Scales this {@link Mat2} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat2.scale(this, this, v);`\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   * @category Methods\n   */\n  scale(v) {\n    return _Mat2.scale(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat2} by the given angle around the given axis\n   * Equivalent to `Mat2.rotate(this, this, rad);`\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   * @category Methods\n   */\n  rotate(rad) {\n    return _Mat2.rotate(this, this, rad);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat2}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat2}\n   * @category Static\n   *\n   * @returns A new {@link Mat2}\n   */\n  static create() {\n    return new _Mat2();\n  }\n  /**\n   * Creates a new {@link Mat2} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat2}\n   */\n  static clone(a) {\n    return new _Mat2(a);\n  }\n  /**\n   * Copy the values from one {@link Mat2} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat2} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat2}\n   */\n  static fromValues(...values) {\n    return new _Mat2(...values);\n  }\n  /**\n   * Set the components of a {@link Mat2} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    return out;\n  }\n  /**\n   * Set a {@link Mat2} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a1 = a[1];\n      out[1] = a[2];\n      out[2] = a1;\n    } else {\n      out[0] = a[0];\n      out[1] = a[2];\n      out[2] = a[1];\n      out[3] = a[3];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    let det = a0 * a3 - a2 * a1;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] = a0 * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a0 = a[0];\n    out[0] = a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a0;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    return a[0] * a[3] - a[2] * a[1];\n  }\n  /**\n   * Adds two {@link Mat2}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat2}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat2} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat2} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat2.identity(dest);\n   *   mat2.rotate(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat2.identity(dest);\n   *   mat2.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);\n  }\n  /**\n   * Multiply each element of a {@link Mat2} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat2}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n   * @category Static\n   *\n   * @param L - the lower triangular matrix\n   * @param D - the diagonal matrix\n   * @param U - the upper triangular matrix\n   * @param a - the input matrix to factorize\n   */\n  static LDU(L, D, U, a) {\n    L[2] = a[2] / a[0];\n    U[0] = a[0];\n    U[1] = a[1];\n    U[3] = a[3] - L[2] * U[1];\n    return [L, D, U];\n  }\n  /**\n   * Returns whether two {@link Mat2}s have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether two {@link Mat2}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3));\n  }\n  /**\n   * Returns a string representation of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat2(${a.join(\", \")})`;\n  }\n};\nMat2.prototype.mul = Mat2.prototype.multiply;\nMat2.mul = Mat2.multiply;\nMat2.sub = Mat2.subtract;\nvar Mat2d = class _Mat2d extends Float32Array {\n  static #IDENTITY_2X3 = new Float32Array([\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n  ]);\n  /**\n   * Create a {@link Mat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 6:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 6);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 6);\n        }\n        break;\n      default:\n        super(_Mat2d.#IDENTITY_2X3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat2d.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat2d.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat2d} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat2d.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat2d.#IDENTITY_2X3);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat2d} against another one\n   * Equivalent to `Mat2d.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat2d.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat2d.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Translate this {@link Mat2d} by the given vector\n   * Equivalent to `Mat2d.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat2d.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat2d} by the given angle around the given axis\n   * Equivalent to `Mat2d.rotate(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotate(rad) {\n    return _Mat2d.rotate(this, this, rad);\n  }\n  /**\n   * Scales this {@link Mat2d} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat2d.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat2d.scale(this, this, v);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat2d}.\n   */\n  static get BYTE_LENGTH() {\n    return 6 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat2d}\n   * @category Static\n   *\n   * @returns A new {@link Mat2d}\n   */\n  static create() {\n    return new _Mat2d();\n  }\n  /**\n   * Creates a new {@link Mat2d} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat2d}\n   */\n  static clone(a) {\n    return new _Mat2d(a);\n  }\n  /**\n   * Copy the values from one {@link Mat2d} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat2d} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat2d}\n   */\n  static fromValues(...values) {\n    return new _Mat2d(...values);\n  }\n  /**\n   * Set the components of a {@link Mat2d} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    return out;\n  }\n  /**\n   * Set a {@link Mat2d} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat2d}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const aa = a[0];\n    const ab = a[1];\n    const ac = a[2];\n    const ad = a[3];\n    const atx = a[4];\n    const aty = a[5];\n    let det = aa * ad - ab * ac;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    return a[0] * a[3] - a[1] * a[2];\n  }\n  /**\n   * Adds two {@link Mat2d}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2d.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat2d}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2d.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat2d} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat2d} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat2d} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  // TODO: Got to fromRotation\n  /**\n   * Creates a {@link Mat2d} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2d} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.rotate(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2d} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + 1);\n  }\n  /**\n   * Multiply each element of a {@link Mat2d} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat2d}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat2d}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n  }\n  /**\n   * Returns whether two {@link Mat2d}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5));\n  }\n  /**\n   * Returns a string representation of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat2d(${a.join(\", \")})`;\n  }\n};\nMat2d.mul = Mat2d.multiply;\nMat2d.sub = Mat2d.subtract;\nvar Mat3 = class _Mat3 extends Float32Array {\n  static #IDENTITY_3X3 = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Create a {@link Mat3}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 9:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 9);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 9);\n        }\n        break;\n      default:\n        super(_Mat3.#IDENTITY_3X3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat3.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat3.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat3} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat3.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat3.#IDENTITY_3X3);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat3} against another one\n   * Equivalent to `Mat3.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat3.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat3.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat3}\n   * Equivalent to `Mat3.transpose(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  transpose() {\n    return _Mat3.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat3}\n   * Equivalent to `Mat4.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Mat3.invert(this, this);\n  }\n  /**\n   * Translate this {@link Mat3} by the given vector\n   * Equivalent to `Mat3.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat3.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat3} by the given angle around the given axis\n   * Equivalent to `Mat3.rotate(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotate(rad) {\n    return _Mat3.rotate(this, this, rad);\n  }\n  /**\n   * Scales this {@link Mat3} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat3.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat3.scale(this, this, v);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat3}.\n   */\n  static get BYTE_LENGTH() {\n    return 9 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat3}\n   * @category Static\n   *\n   * @returns A new {@link Mat3}\n   */\n  static create() {\n    return new _Mat3();\n  }\n  /**\n   * Creates a new {@link Mat3} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat3}\n   */\n  static clone(a) {\n    return new _Mat3(a);\n  }\n  /**\n   * Copy the values from one {@link Mat3} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat3} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat3}\n   */\n  static fromValues(...values) {\n    return new _Mat3(...values);\n  }\n  /**\n   * Set the components of a {@link Mat3} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    out[6] = values[6];\n    out[7] = values[7];\n    out[8] = values[8];\n    return out;\n  }\n  /**\n   * Set a {@link Mat3} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a01 = a[1], a02 = a[2], a12 = a[5];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a01;\n      out[5] = a[7];\n      out[6] = a02;\n      out[7] = a12;\n    } else {\n      out[0] = a[0];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a[1];\n      out[4] = a[4];\n      out[5] = a[7];\n      out[6] = a[2];\n      out[7] = a[5];\n      out[8] = a[8];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2];\n    const a10 = a[3], a11 = a[4], a12 = a[5];\n    const a20 = a[6], a21 = a[7], a22 = a[8];\n    const b01 = a22 * a11 - a12 * a21;\n    const b11 = -a22 * a10 + a12 * a20;\n    const b21 = a21 * a10 - a11 * a20;\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    out[0] = a11 * a22 - a12 * a21;\n    out[1] = a02 * a21 - a01 * a22;\n    out[2] = a01 * a12 - a02 * a11;\n    out[3] = a12 * a20 - a10 * a22;\n    out[4] = a00 * a22 - a02 * a20;\n    out[5] = a02 * a10 - a00 * a12;\n    out[6] = a10 * a21 - a11 * a20;\n    out[7] = a01 * a20 - a00 * a21;\n    out[8] = a00 * a11 - a01 * a10;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n  }\n  /**\n   * Adds two {@link Mat3}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat3.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat3}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    let b0 = b[0];\n    let b1 = b[1];\n    let b2 = b[2];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22;\n    b0 = b[3];\n    b1 = b[4];\n    b2 = b[5];\n    out[3] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[4] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[5] = b0 * a02 + b1 * a12 + b2 * a22;\n    b0 = b[6];\n    b1 = b[7];\n    b2 = b[8];\n    out[6] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[7] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[8] = b0 * a02 + b1 * a12 + b2 * a22;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat3.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat3} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    const x = v[0];\n    const y = v[1];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat3} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat3} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat3.identity(dest);\n   *   mat3.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   *\n   *     mat3.identity(dest);\n   *     mat3.rotate(dest, dest, rad);\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat3.identity(dest);\n   *   mat3.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Copies the upper-left 3x3 values of a {@link Mat2d} into the given\n   * {@link Mat3}.\n   * @category Static\n   *\n   * @param out - the receiving 3x3 matrix\n   * @param a - the source 2x3 matrix\n   * @returns `out`\n   */\n  static fromMat2d(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat3} from the given quaternion\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param q - {@link Quat} to create matrix from\n   * @returns `out`\n   */\n  static fromQuat(out, q) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n    return out;\n  }\n  /**\n   * Copies the upper-left 3x3 values of a {@link Mat4} into the given\n   * {@link Mat3}.\n   * @category Static\n   *\n   * @param out - the receiving 3x3 matrix\n   * @param a - the source 4x4 matrix\n   * @returns `out`\n   */\n  static fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n  }\n  /**\n   * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n   * @category Static\n   *\n   * @param {mat3} out mat3 receiving operation result\n   * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static normalFromMat4(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat3} normal matrix (transpose inverse) from a {@link Mat4}\n   * This version omits the calculation of the constant factor (1/determinant), so\n   * any normals transformed with it will need to be renormalized.\n   * From https://stackoverflow.com/a/27616419/25968\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out`\n   */\n  static normalFromMat4Fast(out, a) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[4];\n    const by = a[5];\n    const bz = a[6];\n    const cx = a[8];\n    const cy = a[9];\n    const cz = a[10];\n    out[0] = by * cz - cz * cy;\n    out[1] = bz * cx - cx * cz;\n    out[2] = bx * cy - cy * cx;\n    out[3] = cy * az - cz * ay;\n    out[4] = cz * ax - cx * az;\n    out[5] = cx * ay - cy * ax;\n    out[6] = ay * bz - az * by;\n    out[7] = az * bx - ax * bz;\n    out[8] = ax * by - ay * bx;\n    return out;\n  }\n  /**\n   * Generates a 2D projection matrix with the given bounds\n   * @category Static\n   *\n   * @param out mat3 frustum matrix will be written into\n   * @param width Width of your gl context\n   * @param height Height of gl context\n   * @returns `out`\n   */\n  static projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(\n      a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]\n    );\n  }\n  /**\n   * Multiply each element of a {@link Mat3} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat3}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat3}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n  }\n  /**\n   * Returns whether two {@link Mat3}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const a8 = a[8];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    const b8 = b[8];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= GLM_EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8));\n  }\n  /**\n   * Returns a string representation of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat3(${a.join(\", \")})`;\n  }\n};\nMat3.prototype.mul = Mat3.prototype.multiply;\nMat3.mul = Mat3.multiply;\nMat3.sub = Mat3.subtract;\nvar Mat4 = class _Mat4 extends Float32Array {\n  static #IDENTITY_4X4 = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Temporary variable to prevent repeated allocations in the algorithms within Mat4.\n   * These are declared as TypedArrays to aid in tree-shaking.\n   */\n  static #TMP_VEC3 = new Float32Array(3);\n  /**\n   * Create a {@link Mat4}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 16:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 16);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 16);\n        }\n        break;\n      default:\n        super(_Mat4.#IDENTITY_4X4);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat4.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat4.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat4} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat4.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat4.#IDENTITY_4X4);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat4} against another one\n   * Equivalent to `Mat4.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat4.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat4.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat4}\n   * Equivalent to `Mat4.transpose(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  transpose() {\n    return _Mat4.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat4}\n   * Equivalent to `Mat4.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Mat4.invert(this, this);\n  }\n  /**\n   * Translate this {@link Mat4} by the given vector\n   * Equivalent to `Mat4.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec3} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat4.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the given axis\n   * Equivalent to `Mat4.rotate(this, this, rad, axis);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `this`\n   */\n  rotate(rad, axis) {\n    return _Mat4.rotate(this, this, rad, axis);\n  }\n  /**\n   * Scales this {@link Mat4} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat4.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec3} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat4.scale(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the X axis\n   * Equivalent to `Mat4.rotateX(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateX(rad) {\n    return _Mat4.rotateX(this, this, rad);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the Y axis\n   * Equivalent to `Mat4.rotateY(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateY(rad) {\n    return _Mat4.rotateY(this, this, rad);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the Z axis\n   * Equivalent to `Mat4.rotateZ(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateZ(rad) {\n    return _Mat4.rotateZ(this, this, rad);\n  }\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * Equivalent to `Mat4.perspectiveNO(this, fovy, aspect, near, far);`\n   * @category Methods\n   *\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `this`\n   */\n  perspectiveNO(fovy, aspect, near, far) {\n    return _Mat4.perspectiveNO(this, fovy, aspect, near, far);\n  }\n  /**\n   * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * Equivalent to `Mat4.perspectiveZO(this, fovy, aspect, near, far);`\n   * @category Methods\n   *\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `this`\n   */\n  perspectiveZO(fovy, aspect, near, far) {\n    return _Mat4.perspectiveZO(this, fovy, aspect, near, far);\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Equivalent to `Mat4.orthoNO(this, left, right, bottom, top, near, far);`\n   * @category Methods\n   *\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `this`\n   */\n  orthoNO(left, right, bottom, top, near, far) {\n    return _Mat4.orthoNO(this, left, right, bottom, top, near, far);\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Equivalent to `Mat4.orthoZO(this, left, right, bottom, top, near, far);`\n   * @category Methods\n   *\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `this`\n   */\n  orthoZO(left, right, bottom, top, near, far) {\n    return _Mat4.orthoZO(this, left, right, bottom, top, near, far);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat4}.\n   */\n  static get BYTE_LENGTH() {\n    return 16 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat4}\n   * @category Static\n   *\n   * @returns A new {@link Mat4}\n   */\n  static create() {\n    return new _Mat4();\n  }\n  /**\n   * Creates a new {@link Mat4} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat4}\n   */\n  static clone(a) {\n    return new _Mat4(a);\n  }\n  /**\n   * Copy the values from one {@link Mat4} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Create a new mat4 with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat4}\n   */\n  static fromValues(...values) {\n    return new _Mat4(...values);\n  }\n  /**\n   * Set the components of a mat4 to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    out[6] = values[6];\n    out[7] = values[7];\n    out[8] = values[8];\n    out[9] = values[9];\n    out[10] = values[10];\n    out[11] = values[11];\n    out[12] = values[12];\n    out[13] = values[13];\n    out[14] = values[14];\n    out[15] = values[15];\n    return out;\n  }\n  /**\n   * Set a {@link Mat4} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a01 = a[1], a02 = a[2], a03 = a[3];\n      const a12 = a[6], a13 = a[7];\n      const a23 = a[11];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a01;\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a02;\n      out[9] = a12;\n      out[11] = a[14];\n      out[12] = a03;\n      out[13] = a13;\n      out[14] = a23;\n    } else {\n      out[0] = a[0];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a[1];\n      out[5] = a[5];\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a[2];\n      out[9] = a[6];\n      out[10] = a[10];\n      out[11] = a[14];\n      out[12] = a[3];\n      out[13] = a[7];\n      out[14] = a[11];\n      out[15] = a[15];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n    out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n    out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n    out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n    out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n    out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n    out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n    out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n    out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n    out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n    out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n    out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n    out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n    out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n    out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n    out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b0 = a00 * a11 - a01 * a10;\n    const b1 = a00 * a12 - a02 * a10;\n    const b2 = a01 * a12 - a02 * a11;\n    const b3 = a20 * a31 - a21 * a30;\n    const b4 = a20 * a32 - a22 * a30;\n    const b5 = a21 * a32 - a22 * a31;\n    const b6 = a00 * b5 - a01 * b4 + a02 * b3;\n    const b7 = a10 * b5 - a11 * b4 + a12 * b3;\n    const b8 = a20 * b2 - a21 * b1 + a22 * b0;\n    const b9 = a30 * b2 - a31 * b1 + a32 * b0;\n    return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n  }\n  /**\n   * Multiplies two {@link Mat4}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    let b0 = b[0];\n    let b1 = b[1];\n    let b2 = b[2];\n    let b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat4} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      const a00 = a[0];\n      const a01 = a[1];\n      const a02 = a[2];\n      const a03 = a[3];\n      const a10 = a[4];\n      const a11 = a[5];\n      const a12 = a[6];\n      const a13 = a[7];\n      const a20 = a[8];\n      const a21 = a[9];\n      const a22 = a[10];\n      const a23 = a[11];\n      out[0] = a00;\n      out[1] = a01;\n      out[2] = a02;\n      out[3] = a03;\n      out[4] = a10;\n      out[5] = a11;\n      out[6] = a12;\n      out[7] = a13;\n      out[8] = a20;\n      out[9] = a21;\n      out[10] = a22;\n      out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n    return out;\n  }\n  /**\n   * Scales the {@link Mat4} by the dimensions in the given {@link Vec3} not using vectorization\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec3} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat4} by the given angle around the given axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `out` or `null` if axis has a length of 0\n   */\n  static rotate(out, a, rad, axis) {\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    let len = Math.sqrt(x * x + y * y + z * z);\n    if (len < GLM_EPSILON) {\n      return null;\n    }\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const t = 1 - c;\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const b00 = x * x * t + c;\n    const b01 = y * x * t + z * s;\n    const b02 = z * x * t - y * s;\n    const b10 = x * y * t - z * s;\n    const b11 = y * y * t + c;\n    const b12 = z * y * t + x * s;\n    const b20 = x * z * t + y * s;\n    const b21 = y * z * t - x * s;\n    const b22 = z * z * t + c;\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n    if (a !== out) {\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the X axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    if (a !== out) {\n      out[0] = a[0];\n      out[1] = a[1];\n      out[2] = a[2];\n      out[3] = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Y axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    if (a !== out) {\n      out[4] = a[4];\n      out[5] = a[5];\n      out[6] = a[6];\n      out[7] = a[7];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Z axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    if (a !== out) {\n      out[8] = a[8];\n      out[9] = a[9];\n      out[10] = a[10];\n      out[11] = a[11];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotate(dest, dest, rad, axis);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `out` or `null` if `axis` has a length of 0\n   */\n  static fromRotation(out, rad, axis) {\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    let len = Math.sqrt(x * x + y * y + z * z);\n    if (len < GLM_EPSILON) {\n      return null;\n    }\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const t = 1 - c;\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the X axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateX(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromXRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Y axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateY(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromYRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = 0;\n    out[2] = -s;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Z axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateZ(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromZRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation and vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromRotationTranslation(out, q, v) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Sets a {@link Mat4} from a {@link Quat2}.\n   * @category Static\n   *\n   * @param out - Matrix\n   * @param a - Dual Quaternion\n   * @returns `out`\n   */\n  static fromQuat2(out, a) {\n    const bx = -a[0];\n    const by = -a[1];\n    const bz = -a[2];\n    const bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const magnitude = bx * bx + by * by + bz * bz + bw * bw;\n    if (magnitude > 0) {\n      _Mat4.#TMP_VEC3[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n      _Mat4.#TMP_VEC3[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n      _Mat4.#TMP_VEC3[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n    } else {\n      _Mat4.#TMP_VEC3[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n      _Mat4.#TMP_VEC3[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n      _Mat4.#TMP_VEC3[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    }\n    _Mat4.fromRotationTranslation(out, a, _Mat4.#TMP_VEC3);\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat4} normal matrix (transpose inverse) from a {@link Mat4}\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static normalFromMat4(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = 0;\n    out[4] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[7] = 0;\n    out[8] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[9] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat4} normal matrix (transpose inverse) from a {@link Mat4}\n   * This version omits the calculation of the constant factor (1/determinant), so\n   * any normals transformed with it will need to be renormalized.\n   * From https://stackoverflow.com/a/27616419/25968\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out`\n   */\n  static normalFromMat4Fast(out, a) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[4];\n    const by = a[5];\n    const bz = a[6];\n    const cx = a[8];\n    const cy = a[9];\n    const cz = a[10];\n    out[0] = by * cz - cz * cy;\n    out[1] = bz * cx - cx * cz;\n    out[2] = bx * cy - cy * cx;\n    out[3] = 0;\n    out[4] = cy * az - cz * ay;\n    out[5] = cz * ax - cx * az;\n    out[6] = cx * ay - cy * ax;\n    out[7] = 0;\n    out[8] = ay * bz - az * by;\n    out[9] = az * bx - ax * bz;\n    out[10] = ax * by - ay * bx;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Returns the translation vector component of a transformation\n   * matrix. If a matrix is built with fromRotationTranslation,\n   * the returned vector will be the same as the translation vector\n   * originally supplied.\n   * @category Static\n   *\n   * @param  {vec3} out Vector to receive translation component\n   * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n  static getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n    return out;\n  }\n  /**\n   * Returns the scaling factor component of a transformation\n   * matrix. If a matrix is built with fromRotationTranslationScale\n   * with a normalized Quaternion parameter, the returned vector will be\n   * the same as the scaling vector\n   * originally supplied.\n   * @category Static\n   *\n   * @param  {vec3} out Vector to receive scaling factor component\n   * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n  static getScaling(out, mat) {\n    const m11 = mat[0];\n    const m12 = mat[1];\n    const m13 = mat[2];\n    const m21 = mat[4];\n    const m22 = mat[5];\n    const m23 = mat[6];\n    const m31 = mat[8];\n    const m32 = mat[9];\n    const m33 = mat[10];\n    out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n    out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n    out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n    return out;\n  }\n  /**\n   * Returns a quaternion representing the rotational component\n   * of a transformation matrix. If a matrix is built with\n   * fromRotationTranslation, the returned quaternion will be the\n   * same as the quaternion originally supplied.\n   * @category Static\n   *\n   * @param out - Quaternion to receive the rotation component\n   * @param mat - Matrix to be decomposed (input)\n   * @return `out`\n   */\n  static getRotation(out, mat) {\n    _Mat4.getScaling(_Mat4.#TMP_VEC3, mat);\n    const is1 = 1 / _Mat4.#TMP_VEC3[0];\n    const is2 = 1 / _Mat4.#TMP_VEC3[1];\n    const is3 = 1 / _Mat4.#TMP_VEC3[2];\n    const sm11 = mat[0] * is1;\n    const sm12 = mat[1] * is2;\n    const sm13 = mat[2] * is3;\n    const sm21 = mat[4] * is1;\n    const sm22 = mat[5] * is2;\n    const sm23 = mat[6] * is3;\n    const sm31 = mat[8] * is1;\n    const sm32 = mat[9] * is2;\n    const sm33 = mat[10] * is3;\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1) * 2;\n      out[3] = 0.25 * S;\n      out[0] = (sm23 - sm32) / S;\n      out[1] = (sm31 - sm13) / S;\n      out[2] = (sm12 - sm21) / S;\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n      out[3] = (sm23 - sm32) / S;\n      out[0] = 0.25 * S;\n      out[1] = (sm12 + sm21) / S;\n      out[2] = (sm31 + sm13) / S;\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n      out[3] = (sm31 - sm13) / S;\n      out[0] = (sm12 + sm21) / S;\n      out[1] = 0.25 * S;\n      out[2] = (sm23 + sm32) / S;\n    } else {\n      S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n      out[3] = (sm12 - sm21) / S;\n      out[0] = (sm31 + sm13) / S;\n      out[1] = (sm23 + sm32) / S;\n      out[2] = 0.25 * S;\n    }\n    return out;\n  }\n  /**\n   * Decomposes a transformation matrix into its rotation, translation\n   * and scale components. Returns only the rotation component\n   * @category Static\n   *\n   * @param out_r - Quaternion to receive the rotation component\n   * @param out_t - Vector to receive the translation vector\n   * @param out_s - Vector to receive the scaling factor\n   * @param mat - Matrix to be decomposed (input)\n   * @returns `out_r`\n   */\n  static decompose(out_r, out_t, out_s, mat) {\n    out_t[0] = mat[12];\n    out_t[1] = mat[13];\n    out_t[2] = mat[14];\n    const m11 = mat[0];\n    const m12 = mat[1];\n    const m13 = mat[2];\n    const m21 = mat[4];\n    const m22 = mat[5];\n    const m23 = mat[6];\n    const m31 = mat[8];\n    const m32 = mat[9];\n    const m33 = mat[10];\n    out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n    out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n    out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n    const is1 = 1 / out_s[0];\n    const is2 = 1 / out_s[1];\n    const is3 = 1 / out_s[2];\n    const sm11 = m11 * is1;\n    const sm12 = m12 * is2;\n    const sm13 = m13 * is3;\n    const sm21 = m21 * is1;\n    const sm22 = m22 * is2;\n    const sm23 = m23 * is3;\n    const sm31 = m31 * is1;\n    const sm32 = m32 * is2;\n    const sm33 = m33 * is3;\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1) * 2;\n      out_r[3] = 0.25 * S;\n      out_r[0] = (sm23 - sm32) / S;\n      out_r[1] = (sm31 - sm13) / S;\n      out_r[2] = (sm12 - sm21) / S;\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n      out_r[3] = (sm23 - sm32) / S;\n      out_r[0] = 0.25 * S;\n      out_r[1] = (sm12 + sm21) / S;\n      out_r[2] = (sm31 + sm13) / S;\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n      out_r[3] = (sm31 - sm13) / S;\n      out_r[0] = (sm12 + sm21) / S;\n      out_r[1] = 0.25 * S;\n      out_r[2] = (sm23 + sm32) / S;\n    } else {\n      S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n      out_r[3] = (sm12 - sm21) / S;\n      out_r[0] = (sm31 + sm13) / S;\n      out_r[1] = (sm23 + sm32) / S;\n      out_r[2] = 0.25 * S;\n    }\n    return out_r;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   *   mat4.scale(dest, scale);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @param s - Scaling vector\n   * @returns `out`\n   */\n  static fromRotationTranslationScale(out, q, v, s) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const sx = s[0];\n    const sy = s[1];\n    const sz = s[2];\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the\n   * given origin. This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   mat4.translate(dest, origin);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   *   mat4.scale(dest, scale)\n   *   mat4.translate(dest, negativeOrigin);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @param s - Scaling vector\n   * @param o - The origin vector around which to scale and rotate\n   * @returns `out`\n   */\n  static fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const sx = s[0];\n    const sy = s[1];\n    const sz = s[2];\n    const ox = o[0];\n    const oy = o[1];\n    const oz = o[2];\n    const out0 = (1 - (yy + zz)) * sx;\n    const out1 = (xy + wz) * sx;\n    const out2 = (xz - wy) * sx;\n    const out4 = (xy - wz) * sy;\n    const out5 = (1 - (xx + zz)) * sy;\n    const out6 = (yz + wx) * sy;\n    const out8 = (xz + wy) * sz;\n    const out9 = (yz - wx) * sz;\n    const out10 = (1 - (xx + yy)) * sz;\n    out[0] = out0;\n    out[1] = out1;\n    out[2] = out2;\n    out[3] = 0;\n    out[4] = out4;\n    out[5] = out5;\n    out[6] = out6;\n    out[7] = 0;\n    out[8] = out8;\n    out[9] = out9;\n    out[10] = out10;\n    out[11] = 0;\n    out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n    out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n    out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Quaternion to create matrix from\n   * @returns `out`\n   */\n  static fromQuat(out, q) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a frustum matrix with the given bounds\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far -  Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static frustumNO(out, left, right, bottom, top, near, far = Infinity) {\n    const rl = 1 / (right - left);\n    const tb = 1 / (top - bottom);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = 2 * far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.frustumNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.frustumNO} or {@link Mat4.frustumZO} explicitly\n   */\n  static frustum(out, left, right, bottom, top, near, far = Infinity) {\n    return out;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Generates a frustum matrix with the given bounds\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static frustumZO(out, left, right, bottom, top, near, far = Infinity) {\n    const rl = 1 / (right - left);\n    const tb = 1 / (top - bottom);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = far * nf;\n      out[14] = far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -near;\n    }\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static perspectiveNO(out, fovy, aspect, near, far = Infinity) {\n    const f = 1 / Math.tan(fovy / 2);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = 2 * far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.perspectiveNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.perspectiveNO} or {@link Mat4.perspectiveZO} explicitly\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static perspective(out, fovy, aspect, near, far = Infinity) {\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static perspectiveZO(out, fovy, aspect, near, far = Infinity) {\n    const f = 1 / Math.tan(fovy / 2);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = far * nf;\n      out[14] = far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -near;\n    }\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given field of view. This is primarily useful for generating\n   * projection matrices to be used with the still experimental WebVR API.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fov - Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   * @deprecated\n   */\n  static perspectiveFromFieldOfView(out, fov, near, far) {\n    const upTan = Math.tan(fov.upDegrees * Math.PI / 180);\n    const downTan = Math.tan(fov.downDegrees * Math.PI / 180);\n    const leftTan = Math.tan(fov.leftDegrees * Math.PI / 180);\n    const rightTan = Math.tan(fov.rightDegrees * Math.PI / 180);\n    const xScale = 2 / (leftTan + rightTan);\n    const yScale = 2 / (upTan + downTan);\n    out[0] = xScale;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = yScale;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = (upTan - downTan) * yScale * 0.5;\n    out[10] = far / (near - far);\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = far * near / (near - far);\n    out[15] = 0;\n    return out;\n  }\n  /**\n   * Generates an orthogonal projection matrix with the given bounds. The near / far clip planes correspond to a\n   * normalized device coordinate Z range of [-1, 1], which matches WebGL / OpenGLs clip volume.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   */\n  static orthoNO(out, left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right);\n    const bt = 1 / (bottom - top);\n    const nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.orthoNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.orthoNO} or {@link Mat4.orthoZO} explicitly\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static ortho(out, left, right, bottom, top, near, far) {\n    return out;\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds. The near / far clip planes correspond to a\n   * normalized device coordinate Z range of [0, 1], which matches WebGPU / Vulkan / DirectX / Metal's clip volume.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   */\n  static orthoZO(out, left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right);\n    const bt = 1 / (bottom - top);\n    const nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = near * nf;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a look-at matrix with the given eye position, focal point, and up axis. If you want a matrix that\n   * actually makes an object look at another object, you should use targetTo instead.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param eye - Position of the viewer\n   * @param center - Point the viewer is looking at\n   * @param up - vec3 pointing up\n   * @returns `out`\n   */\n  static lookAt(out, eye, center, up) {\n    const eyex = eye[0];\n    const eyey = eye[1];\n    const eyez = eye[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    const centerx = center[0];\n    const centery = center[1];\n    const centerz = center[2];\n    if (Math.abs(eyex - centerx) < GLM_EPSILON && Math.abs(eyey - centery) < GLM_EPSILON && Math.abs(eyez - centerz) < GLM_EPSILON) {\n      return _Mat4.identity(out);\n    }\n    let z0 = eyex - centerx;\n    let z1 = eyey - centery;\n    let z2 = eyez - centerz;\n    let len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    let x0 = upy * z2 - upz * z1;\n    let x1 = upz * z0 - upx * z2;\n    let x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n      x0 = 0;\n      x1 = 0;\n      x2 = 0;\n    } else {\n      len = 1 / len;\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n    let y0 = z1 * x2 - z2 * x1;\n    let y1 = z2 * x0 - z0 * x2;\n    let y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n      y0 = 0;\n      y1 = 0;\n      y2 = 0;\n    } else {\n      len = 1 / len;\n      y0 *= len;\n      y1 *= len;\n      y2 *= len;\n    }\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a matrix that makes something look at something else.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param eye - Position of the viewer\n   * @param target - Point the viewer is looking at\n   * @param up - vec3 pointing up\n   * @returns `out`\n   */\n  static targetTo(out, eye, target, up) {\n    const eyex = eye[0];\n    const eyey = eye[1];\n    const eyez = eye[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    let z0 = eyex - target[0];\n    let z1 = eyey - target[1];\n    let z2 = eyez - target[2];\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      z0 *= len;\n      z1 *= len;\n      z2 *= len;\n    }\n    let x0 = upy * z2 - upz * z1;\n    let x1 = upz * z0 - upx * z2;\n    let x2 = upx * z1 - upy * z0;\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(\n      a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8] + a[9] * a[9] + a[10] * a[10] + a[11] * a[11] + a[12] * a[12] + a[13] * a[13] + a[14] * a[14] + a[15] * a[15]\n    );\n  }\n  /**\n   * Adds two {@link Mat4}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiply each element of the matrix by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n  }\n  /**\n   * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    out[9] = a[9] + b[9] * scale;\n    out[10] = a[10] + b[10] * scale;\n    out[11] = a[11] + b[11] * scale;\n    out[12] = a[12] + b[12] * scale;\n    out[13] = a[13] + b[13] * scale;\n    out[14] = a[14] + b[14] * scale;\n    out[15] = a[15] + b[15] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat4}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n  }\n  /**\n   * Returns whether two {@link Mat4}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const a8 = a[8];\n    const a9 = a[9];\n    const a10 = a[10];\n    const a11 = a[11];\n    const a12 = a[12];\n    const a13 = a[13];\n    const a14 = a[14];\n    const a15 = a[15];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    const b8 = b[8];\n    const b9 = b[9];\n    const b10 = b[10];\n    const b11 = b[11];\n    const b12 = b[12];\n    const b13 = b[13];\n    const b14 = b[14];\n    const b15 = b[15];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= GLM_EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= GLM_EPSILON * Math.max(1, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= GLM_EPSILON * Math.max(1, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= GLM_EPSILON * Math.max(1, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= GLM_EPSILON * Math.max(1, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= GLM_EPSILON * Math.max(1, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= GLM_EPSILON * Math.max(1, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= GLM_EPSILON * Math.max(1, Math.abs(a15), Math.abs(b15));\n  }\n  /**\n   * Returns a string representation of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat4(${a.join(\", \")})`;\n  }\n};\nMat4.prototype.mul = Mat4.prototype.multiply;\nMat4.sub = Mat4.subtract;\nMat4.mul = Mat4.multiply;\nMat4.frustum = Mat4.frustumNO;\nMat4.perspective = Mat4.perspectiveNO;\nMat4.ortho = Mat4.orthoNO;\nvar Vec3 = class _Vec3 extends Float32Array {\n  /**\n   * Create a {@link Vec3}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 3:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 3);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v]);\n        } else {\n          super(v, 0, 3);\n        }\n        break;\n      }\n      default:\n        super(3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the vector. Equivalent to `this[2];`\n   * @category Vector Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The b component of the vector. Equivalent to `this[2];`\n   * @category Color Components\n   */\n  get b() {\n    return this[2];\n  }\n  set b(value) {\n    this[2] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec3.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * The squared magnitude (length) of `this`.\n   * Equivalent to `Vec3.squaredMagnitude(this);`\n   *\n   * @category Accessors\n   */\n  get squaredMagnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredMagnitude}\n   *\n   * @category Accessors\n   */\n  get sqrMag() {\n    return this.squaredMagnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec3.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec3.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec3} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Adds a {@link Vec3} to `this`.\n   * Equivalent to `Vec3.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    this[2] += b[2];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec3} from `this`.\n   * Equivalent to `Vec3.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    this[2] -= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec3}.\n   * Equivalent to `Vec3.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    this[2] *= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec3}.\n   * Equivalent to `Vec3.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    this[2] /= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec3.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    this[2] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec3.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    this[2] += b[2] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec3} and `this`.\n   * Equivalent to `Vec3.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec3.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec3.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec3} and `this`.\n   * Equivalent to `Vec3.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec3.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec3.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec3.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    this[2] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec3.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    this[2] = 1 / this[2];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to its absolute value.\n   * Equivalent to `Vec3.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    this[2] = Math.abs(this[2]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec3}.\n   * Equivalent to `Vec3.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1] + this[2] * b[2];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec3.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec3.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec3}.\n   */\n  static get BYTE_LENGTH() {\n    return 3 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty vec3\n   * @category Static\n   *\n   * @returns a new 3D vector\n   */\n  static create() {\n    return new _Vec3();\n  }\n  /**\n   * Creates a new vec3 initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - vector to clone\n   * @returns a new 3D vector\n   */\n  static clone(a) {\n    return new _Vec3(a);\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec3}\n   * @category Static\n   *\n   * @param a - Vector to calculate magnitude of\n   * @returns Magnitude of a\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec3.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   *\n   * @param a - vector to calculate length of\n   * @returns length of a\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec3.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Creates a new vec3 initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @returns a new 3D vector\n   */\n  static fromValues(x, y, z) {\n    return new _Vec3(x, y, z);\n  }\n  /**\n   * Copy the values from one vec3 to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n  }\n  /**\n   * Set the components of a vec3 to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @returns `out`\n   */\n  static set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec3}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Multiplies two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Divides two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Math.ceil the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n  }\n  /**\n   * symmetric round the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to round\n   * @returns `out`\n   */\n  /*\n    static round(out: Vec3Like, a: Readonly<Vec3Like>): Vec3Like {\n    out[0] = glMatrix.round(a[0]);\n    out[1] = glMatrix.round(a[1]);\n    out[2] = glMatrix.round(a[2]);\n    return out;\n  }*/\n  /**\n   * Scales a vec3 by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param scale - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    return out;\n  }\n  /**\n   * Adds two vec3's after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns distance between a and b\n   */\n  static distance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns squared distance between a and b\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredDistance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared length of a vec3\n   * @category Static\n   *\n   * @param a - vector to calculate squared length of\n   * @returns squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredLength}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrLen(a, b) {\n    return 0;\n  }\n  /**\n   * Negates the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    out[2] = 1 / a[2];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec3}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    out[2] = Math.abs(a[2]);\n    return out;\n  }\n  /**\n   * Normalize a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  /**\n   * Computes the cross product of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static cross(out, a, b) {\n    const ax = a[0], ay = a[1], az = a[2];\n    const bx = b[0], by = b[1], bz = b[2];\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n  }\n  /**\n   * Performs a spherical linear interpolation between two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static slerp(out, a, b, t) {\n    const angle = Math.acos(Math.min(Math.max(_Vec3.dot(a, b), -1), 1));\n    const sinTotal = Math.sin(angle);\n    const ratioA = Math.sin((1 - t) * angle) / sinTotal;\n    const ratioB = Math.sin(t * angle) / sinTotal;\n    out[0] = ratioA * a[0] + ratioB * b[0];\n    out[1] = ratioA * a[1] + ratioB * b[1];\n    out[2] = ratioA * a[2] + ratioB * b[2];\n    return out;\n  }\n  /**\n   * Performs a hermite interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static hermite(out, a, b, c, d, t) {\n    const factorTimes2 = t * t;\n    const factor1 = factorTimes2 * (2 * t - 3) + 1;\n    const factor2 = factorTimes2 * (t - 2) + t;\n    const factor3 = factorTimes2 * (t - 1);\n    const factor4 = factorTimes2 * (3 - 2 * t);\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Performs a bezier interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static bezier(out, a, b, c, d, t) {\n    const inverseFactor = 1 - t;\n    const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n    const factorTimes2 = t * t;\n    const factor1 = inverseFactorTimesTwo * inverseFactor;\n    const factor2 = 3 * t * inverseFactorTimesTwo;\n    const factor3 = 3 * factorTimes2 * inverseFactor;\n    const factor4 = factorTimes2 * t;\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n   * @returns `out`\n   */\n  /*\n      static random(out: Vec3Like, scale) {\n      scale = scale === undefined ? 1.0 : scale;\n  \n      let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n      let z = glMatrix.RANDOM() * 2.0 - 1.0;\n      let zScale = Math.sqrt(1.0 - z * z) * scale;\n  \n      out[0] = Math.cos(r) * zScale;\n      out[1] = Math.sin(r) * zScale;\n      out[2] = z * scale;\n      return out;\n    }*/\n  /**\n   * Transforms the vec3 with a mat4.\n   * 4th vector component is implicitly '1'\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - matrix to transform with\n   * @returns `out`\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0], y = a[1], z = a[2];\n    const w = m[3] * x + m[7] * y + m[11] * z + m[15] || 1;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a mat3.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - the 3x3 matrix to transform with\n   * @returns `out`\n   */\n  static transformMat3(out, a, m) {\n    const x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a quat\n   * Can also be used for dual quaternions. (Multiply it with the real part)\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param q - quaternion to transform with\n   * @returns `out`\n   */\n  static transformQuat(out, a, q) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const w2 = q[3] * 2;\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const uvx = qy * z - qz * y;\n    const uvy = qz * x - qx * z;\n    const uvz = qx * y - qy * x;\n    const uuvx = (qy * uvz - qz * uvy) * 2;\n    const uuvy = (qz * uvx - qx * uvz) * 2;\n    const uuvz = (qx * uvy - qy * uvx) * 2;\n    out[0] = x + uvx * w2 + uuvx;\n    out[1] = y + uvy * w2 + uuvy;\n    out[2] = z + uvz * w2 + uuvz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the x-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateX(out, a, b, rad) {\n    const by = b[1];\n    const bz = b[2];\n    const py = a[1] - by;\n    const pz = a[2] - bz;\n    out[0] = a[0];\n    out[1] = py * Math.cos(rad) - pz * Math.sin(rad) + by;\n    out[2] = py * Math.sin(rad) + pz * Math.cos(rad) + bz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the y-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateY(out, a, b, rad) {\n    const bx = b[0];\n    const bz = b[2];\n    const px = a[0] - bx;\n    const pz = a[2] - bz;\n    out[0] = pz * Math.sin(rad) + px * Math.cos(rad) + bx;\n    out[1] = a[1];\n    out[2] = pz * Math.cos(rad) - px * Math.sin(rad) + bz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the z-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateZ(out, a, b, rad) {\n    const bx = b[0];\n    const by = b[1];\n    const px = a[0] - bx;\n    const py = a[1] - by;\n    out[0] = px * Math.cos(rad) - py * Math.sin(rad) + bx;\n    out[1] = px * Math.sin(rad) + py * Math.cos(rad) + by;\n    out[2] = b[2];\n    return out;\n  }\n  /**\n   * Get the angle between two 3D vectors\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns The angle in radians\n   */\n  static angle(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz));\n    const cosine = mag && _Vec3.dot(a, b) / mag;\n    return Math.acos(Math.min(Math.max(cosine, -1), 1));\n  }\n  /**\n   * Set the components of a vec3 to zero\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a vector\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Vec3(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2));\n  }\n};\nVec3.prototype.sub = Vec3.prototype.subtract;\nVec3.prototype.mul = Vec3.prototype.multiply;\nVec3.prototype.div = Vec3.prototype.divide;\nVec3.prototype.dist = Vec3.prototype.distance;\nVec3.prototype.sqrDist = Vec3.prototype.squaredDistance;\nVec3.sub = Vec3.subtract;\nVec3.mul = Vec3.multiply;\nVec3.div = Vec3.divide;\nVec3.dist = Vec3.distance;\nVec3.sqrDist = Vec3.squaredDistance;\nVec3.sqrLen = Vec3.squaredLength;\nVec3.mag = Vec3.magnitude;\nVec3.length = Vec3.magnitude;\nVec3.len = Vec3.magnitude;\nvar Vec4 = class _Vec4 extends Float32Array {\n  /**\n   * Create a {@link Vec4}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      }\n      default:\n        super(4);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the vector. Equivalent to `this[2];`\n   * @category Vector Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  /**\n   * The w component of the vector. Equivalent to `this[3];`\n   * @category Vector Components\n   */\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The b component of the vector. Equivalent to `this[2];`\n   * @category Color Components\n   */\n  get b() {\n    return this[2];\n  }\n  set b(value) {\n    this[2] = value;\n  }\n  /**\n   * The a component of the vector. Equivalent to `this[3];`\n   * @category Color Components\n   */\n  get a() {\n    return this[3];\n  }\n  set a(value) {\n    this[3] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec4.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    const w = this[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Vec4.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec4.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec4.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec4} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  /**\n   * Adds a {@link Vec4} to `this`.\n   * Equivalent to `Vec4.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    this[2] += b[2];\n    this[3] += b[3];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec4} from `this`.\n   * Equivalent to `Vec4.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    this[2] -= b[2];\n    this[3] -= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec4}.\n   * Equivalent to `Vec4.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    this[2] *= b[2];\n    this[3] *= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec4}.\n   * Equivalent to `Vec4.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    this[2] /= b[2];\n    this[3] /= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec4.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    this[2] *= b;\n    this[3] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec4.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    this[2] += b[2] * scale;\n    this[3] += b[3] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec4} and `this`.\n   * Equivalent to `Vec4.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec4.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec4.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec4} and `this`.\n   * Equivalent to `Vec4.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec4.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec4.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec4.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    this[2] *= -1;\n    this[3] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec4.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    this[2] = 1 / this[2];\n    this[3] = 1 / this[3];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to it's absolute value.\n   * Equivalent to `Vec4.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    this[2] = Math.abs(this[2]);\n    this[3] = Math.abs(this[3]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec4}.\n   * Equivalent to `Vec4.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1] + this[2] * b[2] + this[3] * b[3];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec4.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec4.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec4}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty {@link Vec4}\n   * @category Static\n   *\n   * @returns a new 4D vector\n   */\n  static create() {\n    return new _Vec4();\n  }\n  /**\n   * Creates a new {@link Vec4} initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - vector to clone\n   * @returns a new 4D vector\n   */\n  static clone(a) {\n    return new _Vec4(a);\n  }\n  /**\n   * Creates a new {@link Vec4} initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns a new 4D vector\n   */\n  static fromValues(x, y, z, w) {\n    return new _Vec4(x, y, z, w);\n  }\n  /**\n   * Copy the values from one {@link Vec4} to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec4} to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns `out`\n   */\n  static set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec4}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Divides two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return out;\n  }\n  /**\n   * Math.ceil the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Math.round the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to round\n   * @returns `out`\n   */\n  static round(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n  }\n  /**\n   * Scales a {@link Vec4} by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param scale - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    out[3] = a[3] * scale;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec4}'s after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns distance between a and b\n   */\n  static distance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    const w = b[3] - a[3];\n    return Math.hypot(x, y, z, w);\n  }\n  /**\n   * Alias for {@link Vec4.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns squared distance between a and b\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    const w = b[3] - a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Alias for {@link Vec4.squaredDistance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to calculate length of\n   * @returns length of `a`\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec4.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec4.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to calculate squared length of\n   * @returns squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Alias for {@link Vec4.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    out[2] = 1 / a[2];\n    out[3] = 1 / a[3];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    out[2] = Math.abs(a[2]);\n    out[3] = Math.abs(a[3]);\n    return out;\n  }\n  /**\n   * Normalize a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  /**\n   * Returns the cross-product of three vectors in a 4-dimensional space\n   * @category Static\n   *\n   * @param out the receiving vector\n   * @param u - the first vector\n   * @param v - the second vector\n   * @param w - the third vector\n   * @returns result\n   */\n  static cross(out, u, v, w) {\n    const a = v[0] * w[1] - v[1] * w[0];\n    const b = v[0] * w[2] - v[2] * w[0];\n    const c = v[0] * w[3] - v[3] * w[0];\n    const d = v[1] * w[2] - v[2] * w[1];\n    const e = v[1] * w[3] - v[3] * w[1];\n    const f = v[2] * w[3] - v[3] * w[2];\n    const g = u[0];\n    const h = u[1];\n    const i = u[2];\n    const j = u[3];\n    out[0] = h * f - i * e + j * d;\n    out[1] = -(g * f) + i * c - j * b;\n    out[2] = g * e - h * c + j * a;\n    out[3] = -(g * d) + h * b - i * a;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param [scale] - Length of the resulting vector. If ommitted, a unit vector will be returned\n   * @returns `out`\n   */\n  /*\n      static random(out: Vec4Like, scale): Vec4Like {\n      scale = scale || 1.0;\n  \n      // Marsaglia, George. Choosing a Point from the Surface of a\n      // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n      // http://projecteuclid.org/euclid.aoms/1177692644;\n      var v1, v2, v3, v4;\n      var s1, s2;\n      do {\n        v1 = glMatrix.RANDOM() * 2 - 1;\n        v2 = glMatrix.RANDOM() * 2 - 1;\n        s1 = v1 * v1 + v2 * v2;\n      } while (s1 >= 1);\n      do {\n        v3 = glMatrix.RANDOM() * 2 - 1;\n        v4 = glMatrix.RANDOM() * 2 - 1;\n        s2 = v3 * v3 + v4 * v4;\n      } while (s2 >= 1);\n  \n      var d = Math.sqrt((1 - s1) / s2);\n      out[0] = scale * v1;\n      out[1] = scale * v2;\n      out[2] = scale * v3 * d;\n      out[3] = scale * v4 * d;\n      return out;\n    }*/\n  /**\n   * Transforms the {@link Vec4} with a {@link Mat4}.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - matrix to transform with\n   * @returns `out`\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec4} with a {@link Quat}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param q - quaternion to transform with\n   * @returns `out`\n   */\n  static transformQuat(out, a, q) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec4} to zero\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Vec4(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3));\n  }\n};\nVec4.prototype.sub = Vec4.prototype.subtract;\nVec4.prototype.mul = Vec4.prototype.multiply;\nVec4.prototype.div = Vec4.prototype.divide;\nVec4.prototype.dist = Vec4.prototype.distance;\nVec4.prototype.sqrDist = Vec4.prototype.squaredDistance;\nVec4.sub = Vec4.subtract;\nVec4.mul = Vec4.multiply;\nVec4.div = Vec4.divide;\nVec4.dist = Vec4.distance;\nVec4.sqrDist = Vec4.squaredDistance;\nVec4.sqrLen = Vec4.squaredLength;\nVec4.mag = Vec4.magnitude;\nVec4.length = Vec4.magnitude;\nVec4.len = Vec4.magnitude;\nvar Quat = class _Quat extends Float32Array {\n  static #DEFAULT_ANGLE_ORDER = \"zyx\";\n  // Temporary variables to prevent repeated allocations in the algorithms within Quat.\n  // These are declared as TypedArrays to aid in tree-shaking.\n  static #TMP_QUAT1 = new Float32Array(4);\n  static #TMP_QUAT2 = new Float32Array(4);\n  static #TMP_MAT3 = new Float32Array(9);\n  static #TMP_VEC3 = new Float32Array(3);\n  static #X_UNIT_VEC3 = new Float32Array([1, 0, 0]);\n  static #Y_UNIT_VEC3 = new Float32Array([0, 1, 0]);\n  /**\n   * Create a {@link Quat}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      }\n      default:\n        super(4);\n        this[3] = 1;\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the quaternion. Equivalent to `this[0];`\n   * @category Quaternion Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the quaternion. Equivalent to `this[1];`\n   * @category Quaternion Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the quaternion. Equivalent to `this[2];`\n   * @category Quaternion Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  /**\n   * The w component of the quaternion. Equivalent to `this[3];`\n   * @category Quaternion Components\n   */\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Quat.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    const w = this[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Quat.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Quat.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Quat} into `this`.\n   * @category Methods\n   *\n   * @param a the source quaternion\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity quaternion\n   * Equivalent to Quat.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this[0] = 0;\n    this[1] = 0;\n    this[2] = 0;\n    this[3] = 1;\n    return this;\n  }\n  /**\n   * Multiplies `this` by a {@link Quat}.\n   * Equivalent to `Quat.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Quat.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Quat.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Rotates `this` by the given angle about the X axis\n   * Equivalent to `Quat.rotateX(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateX(rad) {\n    return _Quat.rotateX(this, this, rad);\n  }\n  /**\n   * Rotates `this` by the given angle about the Y axis\n   * Equivalent to `Quat.rotateY(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateY(rad) {\n    return _Quat.rotateY(this, this, rad);\n  }\n  /**\n   * Rotates `this` by the given angle about the Z axis\n   * Equivalent to `Quat.rotateZ(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateZ(rad) {\n    return _Quat.rotateZ(this, this, rad);\n  }\n  /**\n   * Inverts `this`\n   * Equivalent to `Quat.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Quat.invert(this, this);\n  }\n  /**\n   * Scales `this` by a scalar number\n   * Equivalent to `Quat.scale(this, this, scale);`\n   * @category Methods\n   *\n   * @param scale - amount to scale the vector by\n   * @returns `this`\n   */\n  scale(scale) {\n    this[0] *= scale;\n    this[1] *= scale;\n    this[2] *= scale;\n    this[3] *= scale;\n    return this;\n  }\n  /**\n   * Calculates the dot product of `this` and another {@link Quat}\n   * Equivalent to `Quat.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - the second operand\n   * @returns dot product of `this` and b\n   */\n  dot(b) {\n    return _Quat.dot(this, b);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Quat}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new identity quat\n   * @category Static\n   *\n   * @returns a new quaternion\n   */\n  static create() {\n    return new _Quat();\n  }\n  /**\n   * Set a quat to the identity quaternion\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Sets a quat from the given angle and rotation axis,\n   * then returns it.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param axis - the axis around which to rotate\n   * @param rad - the angle in radians\n   * @returns `out`\n   **/\n  static setAxisAngle(out, axis, rad) {\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n  }\n  /**\n   * Gets the rotation axis and angle for a given\n   *  quaternion. If a quaternion is created with\n   *  setAxisAngle, this method will return the same\n   *  values as provided in the original parameter list\n   *  OR functionally equivalent values.\n   * Example: The quaternion formed by axis [0, 0, 1] and\n   *  angle -90 is the same as the quaternion formed by\n   *  [0, 0, 1] and 270. This method favors the latter.\n   * @category Static\n   *\n   * @param out_axis - Vector receiving the axis of rotation\n   * @param q - Quaternion to be decomposed\n   * @return Angle, in radians, of the rotation\n   */\n  static getAxisAngle(out_axis, q) {\n    const rad = Math.acos(q[3]) * 2;\n    const s = Math.sin(rad / 2);\n    if (s > GLM_EPSILON) {\n      out_axis[0] = q[0] / s;\n      out_axis[1] = q[1] / s;\n      out_axis[2] = q[2] / s;\n    } else {\n      out_axis[0] = 1;\n      out_axis[1] = 0;\n      out_axis[2] = 0;\n    }\n    return rad;\n  }\n  /**\n   * Gets the angular distance between two unit quaternions\n   * @category Static\n   *\n   * @param  {ReadonlyQuat} a     Origin unit quaternion\n   * @param  {ReadonlyQuat} b     Destination unit quaternion\n   * @return {Number}     Angle, in radians, between the two quaternions\n   */\n  static getAngle(a, b) {\n    const dotproduct = _Quat.dot(a, b);\n    return Math.acos(2 * dotproduct * dotproduct - 1);\n  }\n  /**\n   * Multiplies two quaternions.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const bw = b[3];\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the X axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Y axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const by = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Z axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bz = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n  }\n  /**\n   * Calculates the W component of a quat from the X, Y, and Z components.\n   * Assumes that quaternion is 1 unit in length.\n   * Any existing W component will be ignored.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate W component of\n   * @returns `out`\n   */\n  static calculateW(out, a) {\n    const x = a[0], y = a[1], z = a[2];\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1 - x * x - y * y - z * z));\n    return out;\n  }\n  /**\n   * Calculate the exponential of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @returns `out`\n   */\n  static exp(out, a) {\n    const x = a[0], y = a[1], z = a[2], w = a[3];\n    const r = Math.sqrt(x * x + y * y + z * z);\n    const et = Math.exp(w);\n    const s = r > 0 ? et * Math.sin(r) / r : 0;\n    out[0] = x * s;\n    out[1] = y * s;\n    out[2] = z * s;\n    out[3] = et * Math.cos(r);\n    return out;\n  }\n  /**\n   * Calculate the natural logarithm of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @returns `out`\n   */\n  static ln(out, a) {\n    const x = a[0], y = a[1], z = a[2], w = a[3];\n    const r = Math.sqrt(x * x + y * y + z * z);\n    const t = r > 0 ? Math.atan2(r, w) / r : 0;\n    out[0] = x * t;\n    out[1] = y * t;\n    out[2] = z * t;\n    out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n    return out;\n  }\n  /**\n   * Calculate the scalar power of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @param b - amount to scale the quaternion by\n   * @returns `out`\n   */\n  static pow(out, a, b) {\n    _Quat.ln(out, a);\n    _Quat.scale(out, out, b);\n    _Quat.exp(out, out);\n    return out;\n  }\n  /**\n   * Performs a spherical linear interpolation between two quat\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static slerp(out, a, b, t) {\n    const ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n    let scale0;\n    let scale1;\n    let cosom = ax * bx + ay * by + az * bz + aw * bw;\n    if (cosom < 0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    }\n    if (1 - cosom > GLM_EPSILON) {\n      const omega = Math.acos(cosom);\n      const sinom = Math.sin(omega);\n      scale0 = Math.sin((1 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      scale0 = 1 - t;\n      scale1 = t;\n    }\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    return out;\n  }\n  /**\n   * Generates a random unit quaternion\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @returns `out`\n   */\n  /* static random(out: QuatLike): QuatLike {\n      // Implementation of http://planning.cs.uiuc.edu/node198.html\n      // TODO: Calling random 3 times is probably not the fastest solution\n      let u1 = glMatrix.RANDOM();\n      let u2 = glMatrix.RANDOM();\n      let u3 = glMatrix.RANDOM();\n  \n      let sqrt1MinusU1 = Math.sqrt(1 - u1);\n      let sqrtU1 = Math.sqrt(u1);\n  \n      out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n      out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n      out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n      out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n      return out;\n    }*/\n  /**\n   * Calculates the inverse of a quat\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate inverse of\n   * @returns `out`\n   */\n  static invert(out, a) {\n    const a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    const invDot = dot ? 1 / dot : 0;\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a quat\n   * If the quaternion is normalized, this function is faster than `quat.inverse` and produces the same result.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate conjugate of\n   * @returns `out`\n   */\n  static conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given 3x3 rotation matrix.\n   *\n   * NOTE: The resultant quaternion is not normalized, so you should be sure\n   * to re-normalize the quaternion yourself where necessary.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param m - rotation matrix\n   * @returns `out`\n   */\n  static fromMat3(out, m) {\n    const fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n    if (fTrace > 0) {\n      fRoot = Math.sqrt(fTrace + 1);\n      out[3] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot;\n      out[0] = (m[5] - m[7]) * fRoot;\n      out[1] = (m[6] - m[2]) * fRoot;\n      out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n      let i = 0;\n      if (m[4] > m[0]) {\n        i = 1;\n      }\n      if (m[8] > m[i * 3 + i]) {\n        i = 2;\n      }\n      const j = (i + 1) % 3;\n      const k = (i + 2) % 3;\n      fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1);\n      out[i] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot;\n      out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n      out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n      out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given euler angle x, y, z.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param x - Angle to rotate around X axis in degrees.\n   * @param y - Angle to rotate around Y axis in degrees.\n   * @param z - Angle to rotate around Z axis in degrees.\n   * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order - Intrinsic order for conversion, default is zyx.\n   * @returns `out`\n   */\n  static fromEuler(out, x, y, z, order = _Quat.#DEFAULT_ANGLE_ORDER) {\n    const halfToRad = 0.5 * Math.PI / 180;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n    const sx = Math.sin(x);\n    const cx = Math.cos(x);\n    const sy = Math.sin(y);\n    const cy = Math.cos(y);\n    const sz = Math.sin(z);\n    const cz = Math.cos(z);\n    switch (order) {\n      case \"xyz\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"xzy\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      case \"yxz\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      case \"yzx\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"zxy\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"zyx\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      default:\n        throw new Error(`Unknown angle order ${order}`);\n    }\n    return out;\n  }\n  /**\n   * Returns a string representation of a quatenion\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Quat(${a.join(\", \")})`;\n  }\n  /**\n   * Creates a new quat initialized with values from an existing quaternion\n   * @category Static\n   *\n   * @param a - quaternion to clone\n   * @returns a new quaternion\n   */\n  static clone(a) {\n    return new _Quat(a);\n  }\n  /**\n   * Creates a new quat initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns a new quaternion\n   */\n  static fromValues(x, y, z, w) {\n    return new _Quat(x, y, z, w);\n  }\n  /**\n   * Copy the values from one quat to another\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the source quaternion\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Quat} to the given values\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static set(out, x, y, z, w) {\n    return out;\n  }\n  /**\n   * Adds two {@link Quat}'s\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static add(out, a, b) {\n    return out;\n  }\n  /**\n   * Alias for {@link Quat.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Scales a quat by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param b - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    out[3] = a[3] * scale;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two quat's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  /**\n   * Performs a linear interpolation between two quat's\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static lerp(out, a, b, t) {\n    return out;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Quat}\n   * @category Static\n   *\n   * @param a - quaternion to calculate length of\n   * @returns length of `a`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static magnitude(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mag(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Quat}\n   * @category Static\n   *\n   * @param a - quaternion to calculate squared length of\n   * @returns squared length of a\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static squaredLength(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Normalize a {@link Quat}\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quaternion to normalize\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static normalize(out, a) {\n    return out;\n  }\n  /**\n   * Returns whether the quaternions have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first quaternion.\n   * @param b - The second quaternion.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static exactEquals(a, b) {\n    return false;\n  }\n  /**\n   * Returns whether the quaternions have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static equals(a, b) {\n    return false;\n  }\n  /**\n   * Sets a quaternion to represent the shortest rotation from one\n   * vector to another.\n   *\n   * Both vectors are assumed to be unit length.\n   * @category Static\n   *\n   * @param out - the receiving quaternion.\n   * @param a - the initial vector\n   * @param b - the destination vector\n   * @returns `out`\n   */\n  static rotationTo(out, a, b) {\n    const dot = Vec3.dot(a, b);\n    if (dot < -0.999999) {\n      Vec3.cross(_Quat.#TMP_VEC3, _Quat.#X_UNIT_VEC3, a);\n      if (Vec3.mag(_Quat.#TMP_VEC3) < 1e-6) {\n        Vec3.cross(_Quat.#TMP_VEC3, _Quat.#Y_UNIT_VEC3, a);\n      }\n      Vec3.normalize(_Quat.#TMP_VEC3, _Quat.#TMP_VEC3);\n      _Quat.setAxisAngle(out, _Quat.#TMP_VEC3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      Vec3.cross(_Quat.#TMP_VEC3, a, b);\n      out[0] = _Quat.#TMP_VEC3[0];\n      out[1] = _Quat.#TMP_VEC3[1];\n      out[2] = _Quat.#TMP_VEC3[2];\n      out[3] = 1 + dot;\n      return _Quat.normalize(out, out);\n    }\n  }\n  /**\n   * Performs a spherical linear interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static sqlerp(out, a, b, c, d, t) {\n    _Quat.slerp(_Quat.#TMP_QUAT1, a, d, t);\n    _Quat.slerp(_Quat.#TMP_QUAT2, b, c, t);\n    _Quat.slerp(out, _Quat.#TMP_QUAT1, _Quat.#TMP_QUAT2, 2 * t * (1 - t));\n    return out;\n  }\n  /**\n   * Sets the specified quaternion with values corresponding to the given\n   * axes. Each axis is a vec3 and is expected to be unit length and\n   * perpendicular to all other specified axes.\n   * @category Static\n   *\n   * @param out - The receiving quaternion\n   * @param view - the vector representing the viewing direction\n   * @param right - the vector representing the local `right` direction\n   * @param up - the vector representing the local `up` direction\n   * @returns `out`\n   */\n  static setAxes(out, view, right, up) {\n    _Quat.#TMP_MAT3[0] = right[0];\n    _Quat.#TMP_MAT3[3] = right[1];\n    _Quat.#TMP_MAT3[6] = right[2];\n    _Quat.#TMP_MAT3[1] = up[0];\n    _Quat.#TMP_MAT3[4] = up[1];\n    _Quat.#TMP_MAT3[7] = up[2];\n    _Quat.#TMP_MAT3[2] = -view[0];\n    _Quat.#TMP_MAT3[5] = -view[1];\n    _Quat.#TMP_MAT3[8] = -view[2];\n    return _Quat.normalize(out, _Quat.fromMat3(out, _Quat.#TMP_MAT3));\n  }\n};\nQuat.set = Vec4.set;\nQuat.add = Vec4.add;\nQuat.lerp = Vec4.lerp;\nQuat.normalize = Vec4.normalize;\nQuat.squaredLength = Vec4.squaredLength;\nQuat.sqrLen = Vec4.squaredLength;\nQuat.exactEquals = Vec4.exactEquals;\nQuat.equals = Vec4.equals;\nQuat.magnitude = Vec4.magnitude;\nQuat.prototype.mul = Quat.prototype.multiply;\nQuat.mul = Quat.multiply;\nQuat.mag = Quat.magnitude;\nQuat.length = Quat.magnitude;\nQuat.len = Quat.magnitude;\nvar Quat2 = class _Quat2 extends Float32Array {\n  // Temporary variables to prevent repeated allocations in the algorithms within Quat2.\n  // These are declared as TypedArrays to aid in tree-shaking.\n  static #TMP_QUAT = new Float32Array(4);\n  static #TMP_VEC3 = new Float32Array(3);\n  /**\n   * Create a {@link Quat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 8:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 8);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v, v, v, v, v]);\n        } else {\n          super(v, 0, 8);\n        }\n        break;\n      }\n      default:\n        super(8);\n        this[3] = 1;\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Quat2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Quat2.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Quat2} into `this`.\n   * @category Methods\n   *\n   * @param a the source dual quaternion\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Quat2}.\n   */\n  static get BYTE_LENGTH() {\n    return 8 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new identity {@link Quat2}\n   * @category Static\n   *\n   * @returns a new dual quaternion [real -> rotation, dual -> translation]\n   */\n  static create() {\n    return new _Quat2();\n  }\n  /**\n   * Creates a {@link Quat2} quat initialized with values from an existing quaternion\n   * @category Static\n   *\n   * @param a - dual quaternion to clone\n   * @returns a new dual quaternion\n   */\n  static clone(a) {\n    return new _Quat2(a);\n  }\n  /**\n   * Creates a new {@link Quat2}  initialized with the given values\n   * @category Static\n   *\n   * @param x1 - 1st X component\n   * @param y1 - 1st Y component\n   * @param z1 - 1st Z component\n   * @param w1 - 1st W component\n   * @param x2 - 2nd X component\n   * @param y2 - 2nd Y component\n   * @param z2 - 2nd Z component\n   * @param w2 - 2nd W component\n   * @returns a new dual quaternion\n   */\n  static fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n    return new _Quat2(x1, y1, z1, w1, x2, y2, z2, w2);\n  }\n  /**\n   * Creates a new {@link Quat2} from the given values (quat and translation)\n   * @category Static\n   *\n   * @param x1 - X component (rotation)\n   * @param y1 - Y component (rotation)\n   * @param z1 - Z component (rotation)\n   * @param w1 - W component (rotation)\n   * @param x2 - X component (translation)\n   * @param y2 - Y component (translation)\n   * @param z2 - Z component (translation)\n   * @returns a new dual quaternion\n   */\n  static fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n    const ax = x2 * 0.5;\n    const ay = y2 * 0.5;\n    const az = z2 * 0.5;\n    return new _Quat2(\n      x1,\n      y1,\n      z1,\n      w1,\n      ax * w1 + ay * z1 - az * y1,\n      ay * w1 + az * x1 - ax * z1,\n      az * w1 + ax * y1 - ay * x1,\n      -ax * x1 - ay * y1 - az * z1\n    );\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion and a translation\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param q - a normalized quaternion\n   * @param t - translation vector\n   * @returns `out`\n   */\n  static fromRotationTranslation(out, q, t) {\n    const ax = t[0] * 0.5;\n    const ay = t[1] * 0.5;\n    const az = t[2] * 0.5;\n    const bx = q[0];\n    const by = q[1];\n    const bz = q[2];\n    const bw = q[3];\n    out[0] = bx;\n    out[1] = by;\n    out[2] = bz;\n    out[3] = bw;\n    out[4] = ax * bw + ay * bz - az * by;\n    out[5] = ay * bw + az * bx - ax * bz;\n    out[6] = az * bw + ax * by - ay * bx;\n    out[7] = -ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a translation\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param t - translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, t) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = t[0] * 0.5;\n    out[5] = t[1] * 0.5;\n    out[6] = t[2] * 0.5;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param q - a normalized quaternion\n   * @returns `out`\n   */\n  static fromRotation(out, q) {\n    out[0] = q[0];\n    out[1] = q[1];\n    out[2] = q[2];\n    out[3] = q[3];\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param a - the matrix\n   * @returns `out`\n   */\n  static fromMat4(out, a) {\n    Mat4.getRotation(_Quat2.#TMP_QUAT, a);\n    Mat4.getTranslation(_Quat2.#TMP_VEC3, a);\n    return _Quat2.fromRotationTranslation(out, _Quat2.#TMP_QUAT, _Quat2.#TMP_VEC3);\n  }\n  /**\n   * Copy the values from one {@link Quat2} to another\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the source dual quaternion\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Set a {@link Quat2} to the identity dual quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Set the components of a {@link Quat2} to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x1 - 1st X component\n   * @param y1 - 1st Y component\n   * @param z1 - 1st Z component\n   * @param w1 - 1st W component\n   * @param x2 - 2nd X component\n   * @param y2 - 2nd Y component\n   * @param z2 - 2nd Z component\n   * @param w2 - 2nd W component\n   * @returns `out`\n   */\n  static set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n    out[0] = x1;\n    out[1] = y1;\n    out[2] = z1;\n    out[3] = w1;\n    out[4] = x2;\n    out[5] = y2;\n    out[6] = z2;\n    out[7] = w2;\n    return out;\n  }\n  /**\n   * Gets the real part of a dual quat\n   * @category Static\n   *\n   * @param out - real part\n   * @param a - Dual Quaternion\n   * @return `out`\n   */\n  static getReal(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Gets the dual part of a dual quat\n   * @category Static\n   *\n   * @param out - dual part\n   * @param a - Dual Quaternion\n   * @return `out`\n   */\n  static getDual(out, a) {\n    out[0] = a[4];\n    out[1] = a[5];\n    out[2] = a[6];\n    out[3] = a[7];\n    return out;\n  }\n  /**\n   * Set the real component of a {@link Quat2} to the given quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - a quaternion representing the real part\n   * @return `out`\n   */\n  static setReal(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the dual component of a {@link Quat2} to the given quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - a quaternion representing the dual part\n   * @return `out`\n   */\n  static setDual(out, a) {\n    out[4] = a[0];\n    out[5] = a[1];\n    out[6] = a[2];\n    out[7] = a[3];\n    return out;\n  }\n  /**\n   * Gets the translation of a normalized {@link Quat2}\n   * @category Static\n   *\n   * @param out - the receiving translation vector\n   * @param a - Dual Quaternion to be decomposed\n   * @return `out`\n   */\n  static getTranslation(out, a) {\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const bx = -a[0];\n    const by = -a[1];\n    const bz = -a[2];\n    const bw = a[3];\n    out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    return out;\n  }\n  /**\n   * Translates a {@link Quat2} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const ax1 = a[0];\n    const ay1 = a[1];\n    const az1 = a[2];\n    const aw1 = a[3];\n    const bx1 = v[0] * 0.5;\n    const by1 = v[1] * 0.5;\n    const bz1 = v[2] * 0.5;\n    const ax2 = a[4];\n    const ay2 = a[5];\n    const az2 = a[6];\n    const aw2 = a[7];\n    out[0] = ax1;\n    out[1] = ay1;\n    out[2] = az1;\n    out[3] = aw1;\n    out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n    out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n    out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n    out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the X axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateX(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the Y axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateY(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the Z axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateZ(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} by a given quaternion (a * q)\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param q - quaternion to rotate by\n   * @returns `out`\n   */\n  static rotateByQuatAppend(out, a, q) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n    ax = a[4];\n    ay = a[5];\n    az = a[6];\n    aw = a[7];\n    out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} by a given quaternion (q * a)\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param q - quaternion to rotate by\n   * @param a - the dual quaternion to rotate\n   * @returns `out`\n   */\n  static rotateByQuatPrepend(out, q, a) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    let bx = a[0];\n    let by = a[1];\n    let bz = a[2];\n    let bw = a[3];\n    out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n    bx = a[4];\n    by = a[5];\n    bz = a[6];\n    bw = a[7];\n    out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around a given axis. Does the normalization automatically\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param axis - the axis to rotate around\n   * @param rad - how far the rotation should be\n   * @returns `out`\n   */\n  static rotateAroundAxis(out, a, axis, rad) {\n    if (Math.abs(rad) < GLM_EPSILON) {\n      return _Quat2.copy(out, a);\n    }\n    const axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    const bx = s * axis[0] / axisLength;\n    const by = s * axis[1] / axisLength;\n    const bz = s * axis[2] / axisLength;\n    const bw = Math.cos(rad);\n    const ax1 = a[0];\n    const ay1 = a[1];\n    const az1 = a[2];\n    const aw1 = a[3];\n    out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    out[4] = ax * bw + aw * bx + ay * bz - az * by;\n    out[5] = ay * bw + aw * by + az * bx - ax * bz;\n    out[6] = az * bw + aw * bz + ax * by - ay * bx;\n    out[7] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Adds two {@link Quat2}s\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    return out;\n  }\n  /**\n   * Multiplies two {@link Quat2}s\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns {quat2} out\n   */\n  static multiply(out, a, b) {\n    const ax0 = a[0];\n    const ay0 = a[1];\n    const az0 = a[2];\n    const aw0 = a[3];\n    const bx1 = b[4];\n    const by1 = b[5];\n    const bz1 = b[6];\n    const bw1 = b[7];\n    const ax1 = a[4];\n    const ay1 = a[5];\n    const az1 = a[6];\n    const aw1 = a[7];\n    const bx0 = b[0];\n    const by0 = b[1];\n    const bz0 = b[2];\n    const bw0 = b[3];\n    out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n    out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n    out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n    out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n    out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n    out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n    out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n    out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n    return out;\n  }\n  /**\n   * Alias for {@link Quat2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Scales a {@link Quat2} by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving dual quaterion\n   * @param a - the dual quaternion to scale\n   * @param b - scalar value to scale the dual quaterion by\n   * @returns `out`\n   */\n  static scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Quat2}s (The dot product of the real parts)\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dot(a, b) {\n    return 0;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Quat2}s\n   * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when `t = 0.5`)\n   * @category Static\n   *\n   * @param out - the receiving dual quat\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const mt = 1 - t;\n    if (_Quat2.dot(a, b) < 0) {\n      t = -t;\n    }\n    out[0] = a[0] * mt + b[0] * t;\n    out[1] = a[1] * mt + b[1] * t;\n    out[2] = a[2] * mt + b[2] * t;\n    out[3] = a[3] * mt + b[3] * t;\n    out[4] = a[4] * mt + b[4] * t;\n    out[5] = a[5] * mt + b[5] * t;\n    out[6] = a[6] * mt + b[6] * t;\n    out[7] = a[7] * mt + b[7] * t;\n    return out;\n  }\n  /**\n   * Calculates the inverse of a {@link Quat2}. If they are normalized, conjugate is cheaper\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quat to calculate inverse of\n   * @returns `out`\n   */\n  static invert(out, a) {\n    const sqlen = _Quat2.squaredLength(a);\n    out[0] = -a[0] / sqlen;\n    out[1] = -a[1] / sqlen;\n    out[2] = -a[2] / sqlen;\n    out[3] = a[3] / sqlen;\n    out[4] = -a[4] / sqlen;\n    out[5] = -a[5] / sqlen;\n    out[6] = -a[6] / sqlen;\n    out[7] = a[7] / sqlen;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a {@link Quat2}. If the dual quaternion is normalized, this function is faster than\n   * {@link Quat2.invert} and produces the same result.\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quaternion to calculate conjugate of\n   * @returns `out`\n   */\n  static conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    out[4] = -a[4];\n    out[5] = -a[5];\n    out[6] = -a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to calculate length of\n   * @returns length of `a`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static magnitude(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat2.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to calculate squared length of\n   * @returns squared length of a\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static squaredLength(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat2.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Normalize a {@link Quat2}\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quaternion to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    let magnitude = _Quat2.squaredLength(a);\n    if (magnitude > 0) {\n      magnitude = Math.sqrt(magnitude);\n      const a0 = a[0] / magnitude;\n      const a1 = a[1] / magnitude;\n      const a2 = a[2] / magnitude;\n      const a3 = a[3] / magnitude;\n      const b0 = a[4];\n      const b1 = a[5];\n      const b2 = a[6];\n      const b3 = a[7];\n      const a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n      out[0] = a0;\n      out[1] = a1;\n      out[2] = a2;\n      out[3] = a3;\n      out[4] = (b0 - a0 * a_dot_b) / magnitude;\n      out[5] = (b1 - a1 * a_dot_b) / magnitude;\n      out[6] = (b2 - a2 * a_dot_b) / magnitude;\n      out[7] = (b3 - a3 * a_dot_b) / magnitude;\n    }\n    return out;\n  }\n  /**\n   * Returns a string representation of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Quat2(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the {@link Quat2}s have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first dual quaternion.\n   * @param b - The second dual quaternion.\n   * @returns True if the dual quaternions are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n  }\n  /**\n   * Returns whether the {@link Quat2}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first dual quaternion.\n   * @param b - The second dual quaternion.\n   * @returns True if the dual quaternions are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7));\n  }\n};\nQuat2.dot = Quat.dot;\nQuat2.squaredLength = Quat.squaredLength;\nQuat2.sqrLen = Quat.squaredLength;\nQuat2.mag = Quat.magnitude;\nQuat2.length = Quat.magnitude;\nQuat2.len = Quat.magnitude;\nQuat2.mul = Quat2.multiply;\nvar Vec2 = class _Vec2 extends Float32Array {\n  /**\n   * Create a {@link Vec2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 2: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, values[1]]);\n        } else {\n          super(v, values[1], 2);\n        }\n        break;\n      }\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v]);\n        } else {\n          super(v, 0, 2);\n        }\n        break;\n      }\n      default:\n        super(2);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec2.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    return Math.hypot(this[0], this[1]);\n  }\n  /**\n   * Alias for {@link Vec2.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * The squared magnitude (length) of `this`.\n   * Equivalent to `Vec2.squaredMagnitude(this);`\n   *\n   * @category Accessors\n   */\n  get squaredMagnitude() {\n    const x = this[0];\n    const y = this[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.squaredMagnitude}\n   *\n   * @category Accessors\n   */\n  get sqrMag() {\n    return this.squaredMagnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec2.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec2} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  // Instead of zero(), use a.fill(0) for instances;\n  /**\n   * Adds a {@link Vec2} to `this`.\n   * Equivalent to `Vec2.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec2} from `this`.\n   * Equivalent to `Vec2.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec2}.\n   * Equivalent to `Vec2.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec2}.\n   * Equivalent to `Vec2.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec2.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec2.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec2} and `this`.\n   * Equivalent to `Vec2.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec2.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec2} and `this`.\n   * Equivalent to `Vec2.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec2.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec2.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec2.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec2.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to it's absolute value.\n   * Equivalent to `Vec2.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec2}.\n   * Equivalent to `Vec2.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec2.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec2.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec2}.\n   */\n  static get BYTE_LENGTH() {\n    return 2 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty {@link Vec2}\n   * @category Static\n   *\n   * @returns A new 2D vector\n   */\n  static create() {\n    return new _Vec2();\n  }\n  /**\n   * Creates a new {@link Vec2} initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - Vector to clone\n   * @returns A new 2D vector\n   */\n  static clone(a) {\n    return new _Vec2(a);\n  }\n  /**\n   * Creates a new {@link Vec2} initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @returns A new 2D vector\n   */\n  static fromValues(x, y) {\n    return new _Vec2(x, y);\n  }\n  /**\n   * Copy the values from one {@link Vec2} to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - The source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec2} to the given values\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @returns `out`\n   */\n  static set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Multiplies two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Divides two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Math.ceil the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Math.round the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to round\n   * @returns `out`\n   */\n  static round(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n  }\n  /**\n   * Scales a {@link Vec2} by a scalar number\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to scale\n   * @param b - Amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n  }\n  /**\n   * Adds two Vec2's after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @param scale - The amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns distance between `a` and `b`\n   */\n  static distance(a, b) {\n    return Math.hypot(b[0] - a[0], b[1] - a[1]);\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns Squared distance between `a` and `b`\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec2}\n   * @category Static\n   *\n   * @param a - Vector to calculate magnitude of\n   * @returns Magnitude of a\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   *\n   * @param a - vector to calculate length of\n   * @returns length of a\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec2.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Vec2}\n   * @category Static\n   *\n   * @param a - Vector to calculate squared length of\n   * @returns Squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.squaredLength}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrLen(a, b) {\n    return 0;\n  }\n  /**\n   * Negates the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    return out;\n  }\n  /**\n   * Normalize a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    let len = x * x + y * y;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns Dot product of `a` and `b`\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  /**\n   * Computes the cross product of two {@link Vec2}s\n   * Note that the cross product must by definition produce a 3D vector.\n   * For this reason there is also not instance equivalent for this function.\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static cross(out, a, b) {\n    const z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @param t - Interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat2}\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat2(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat2d}\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat2d(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat3}\n   * 3rd vector component is implicitly '1'\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat3(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat4}\n   * 3rd vector component is implicitly '0'\n   * 4th vector component is implicitly '1'\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n  }\n  /**\n   * Rotate a 2D vector\n   * @category Static\n   *\n   * @param out - The receiving {@link Vec2}\n   * @param a - The {@link Vec2} point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotate(out, a, b, rad) {\n    const p0 = a[0] - b[0];\n    const p1 = a[1] - b[1];\n    const sinC = Math.sin(rad);\n    const cosC = Math.cos(rad);\n    out[0] = p0 * cosC - p1 * sinC + b[0];\n    out[1] = p0 * sinC + p1 * cosC + b[1];\n    return out;\n  }\n  /**\n   * Get the angle between two 2D vectors\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns The angle in radians\n   */\n  static angle(a, b) {\n    const x1 = a[0];\n    const y1 = a[1];\n    const x2 = b[0];\n    const y2 = b[1];\n    const mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2);\n    const cosine = mag && (x1 * x2 + y1 * y2) / mag;\n    return Math.acos(Math.min(Math.max(cosine, -1), 1));\n  }\n  /**\n   * Set the components of a {@link Vec2} to zero\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns `true` if the vectors components are ===, `false` otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns `true` if the vectors are approximately equal, `false` otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const b0 = b[0];\n    const b1 = b[1];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1));\n  }\n  /**\n   * Returns a string representation of a vector\n   * @category Static\n   *\n   * @param a - Vector to represent as a string\n   * @returns String representation of the vector\n   */\n  static str(a) {\n    return `Vec2(${a.join(\", \")})`;\n  }\n};\nVec2.prototype.sub = Vec2.prototype.subtract;\nVec2.prototype.mul = Vec2.prototype.multiply;\nVec2.prototype.div = Vec2.prototype.divide;\nVec2.prototype.dist = Vec2.prototype.distance;\nVec2.prototype.sqrDist = Vec2.prototype.squaredDistance;\nVec2.sub = Vec2.subtract;\nVec2.mul = Vec2.multiply;\nVec2.div = Vec2.divide;\nVec2.dist = Vec2.distance;\nVec2.sqrDist = Vec2.squaredDistance;\nVec2.sqrLen = Vec2.squaredLength;\nVec2.mag = Vec2.magnitude;\nVec2.length = Vec2.magnitude;\nVec2.len = Vec2.magnitude;\n\nexport { Mat2, Mat2d, Mat3, Mat4, Quat, Quat2, Vec2, Vec3, Vec4 };\n//# sourceMappingURL=index.js.map\n","/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns time of last `requestAnimationFrame` callback.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime;\n\n   // Await count of `rAF` callbacks.\n   for (;--cntr >= 0;) { currentTime = await new Promise((resolve) => requestAnimationFrame(resolve)); }\n\n   return currentTime;\n}\n\nexport { nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","import { radToDeg, degToRad, clamp } from '@typhonjs-fvtt/runtime/math/util';\nimport { subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { propertyStore } from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\nimport { A11yHelper } from '@typhonjs-fvtt/runtime/util/a11y';\nimport { hasSetter, isIterable, isObject, isPlainObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { Mat4, Vec3 } from '@typhonjs-fvtt/runtime/math/gl-matrix';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { getEasingFunc } from '@typhonjs-fvtt/runtime/svelte/easing';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { writable } from 'svelte/store';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/dom/style';\nimport { nextAnimationFrame } from '@typhonjs-fvtt/runtime/util/animate';\n\n/**\n * Provides an action to apply a TJSPosition instance to a HTMLElement and invoke `position.parent`\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {import('..').TJSPosition | import('../types').TJSPositionTypes.Positionable}   position - A position or\n *        positionable instance.\n *\n * @returns {(import('svelte/action').ActionReturn<\n *    import('..').TJSPosition |\n *    import('../types').TJSPositionTypes.Positionable\n * >)} The action lifecycle methods.\n */\nfunction applyPosition(node, position)\n{\n   /**\n    * Find actual position instance checking for a Positionable instance.\n    *\n    * @type {import('..').TJSPosition}\n    */\n   let actualPosition = position?.position ?? position;\n\n   if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = node; }\n\n   return {\n      update: (newPosition) =>\n      {\n         const newActualPosition = newPosition?.position ?? newPosition;\n\n         // Sanity case to short circuit update if positions are the same instance.\n         if (newActualPosition === actualPosition && newActualPosition.parent === actualPosition.parent) { return; }\n\n         if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = void 0; }\n\n         actualPosition = newActualPosition;\n\n         if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = node; }\n      },\n\n      destroy: () => { if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = void 0; } }\n   };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given\n * {@link TJSPosition} instance provided. When the attached boolean store state changes the draggable\n * action is enabled or disabled.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {import('./types').Action.DraggableOptions} options - Draggable action options.\n *\n * @returns {import('svelte/action').ActionReturn<Partial<import('./types').Action.DraggableOptions>>} Action lifecycle\n *          functions.\n */\nfunction draggable(node, { position, enabled = true, button = 0, storeDragging = void 0, tween = false,\n tweenOptions = { duration: 1, ease: 'cubicOut' }, hasTargetClassList, ignoreTargetClassList })\n{\n   if (hasTargetClassList !== void 0 && !isIterable(hasTargetClassList))\n   {\n      throw new TypeError(`'hasTargetClassList' is not iterable.`);\n   }\n\n   if (ignoreTargetClassList !== void 0 && !isIterable(ignoreTargetClassList))\n   {\n      throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n   }\n\n   /**\n    * Used for direct call to `position.set`.\n    *\n    * @type {{top: number, left: number}}\n    */\n   const positionData = { left: 0, top: 0 };\n\n   /**\n    * Find actual position instance checking for a Positionable instance.\n    *\n    * @type {import('..').TJSPosition}\n    */\n   let actualPosition = position?.position ?? position;\n\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   let initialDragPoint = {};\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n    *\n    * @type {import('../animation/types').AnimationAPI.QuickToCallback}\n    */\n   let quickTo = actualPosition.animate.quickTo(['top', 'left'], tweenOptions);\n\n   /**\n    * Event handlers associated with this action, so they may be later unregistered.\n    *\n    *  @type {{ [p: string]: [string, EventListener, boolean] }}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', /** @type {EventListener} */ onDragPointerDown, false],\n      dragMove: ['pointermove', /** @type {EventListener} */ onDragPointerChange, false],\n      dragUp: ['pointerup', /** @type {EventListener} */ onDragPointerUp, false]\n   };\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (enabled)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      // Do not process if the position system is not enabled.\n      if (!actualPosition.enabled) { return; }\n\n      // Potentially ignore this event if `ignoreTargetClassList` is defined and the `event.target` has a matching\n      // class.\n      if (ignoreTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target))\n      {\n         for (const targetClass of ignoreTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass)) { return; }\n         }\n      }\n\n      // Potentially ignore this event if `hasTargetClassList` is defined and the `event.target` does not have any\n      // matching class from the list.\n      if (hasTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target))\n      {\n         let foundTarget = false;\n\n         for (const targetClass of hasTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass))\n            {\n               foundTarget = true;\n               break;\n            }\n         }\n\n         if (!foundTarget) { return; }\n      }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = actualPosition.get();\n      initialDragPoint = { x: event.clientX, y: event.clientY };\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (tween)\n      {\n         quickTo(newTop, newLeft);\n      }\n      else\n      {\n         positionData.left = newLeft;\n         positionData.top = newTop;\n\n         actualPosition.set(positionData);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n   }\n\n   return {\n      // The default of enabled being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (options.position !== void 0)\n         {\n            // Find actual position instance checking for a Positionable instance.\n            const newPosition = options.position?.position ?? options.position;\n            if (newPosition !== actualPosition)\n            {\n               actualPosition = newPosition;\n               quickTo = actualPosition.animate.quickTo(['top', 'left'], tweenOptions);\n            }\n         }\n\n         if (typeof options.enabled === 'boolean')\n         {\n            enabled = options.enabled;\n            if (enabled) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (typeof options.tween === 'boolean') { tween = options.tween; }\n\n         if (isObject(options.tweenOptions))\n         {\n            tweenOptions = options.tweenOptions;\n            quickTo.options(tweenOptions);\n         }\n\n         if (options.hasTargetClassList !== void 0)\n         {\n            if (!isIterable(options.hasTargetClassList))\n            {\n               throw new TypeError(`'hasTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               hasTargetClassList = options.hasTargetClassList;\n            }\n         }\n\n         if (options.ignoreTargetClassList !== void 0)\n         {\n            if (!isIterable(options.ignoreTargetClassList))\n            {\n               throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               ignoreTargetClassList = options.ignoreTargetClassList;\n            }\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\n/**\n * Provides an instance of the {@link draggable} action options support / Readable store to make updating / setting\n * draggable options much easier. When subscribing to the options instance returned by {@link draggable.options} the\n * Subscriber handler receives the entire instance.\n *\n * @implements {import('./types').Action.DraggableOptionsStore}\n */\nclass DraggableOptionsStore\n{\n   /** @type {boolean} */\n   #initialTween;\n\n   /**\n    * @type {import('../animation/types').AnimationAPI.QuickTweenOptions}\n    */\n   #initialTweenOptions;\n\n   /** @type {boolean} */\n   #tween;\n\n   /**\n    * @type {import('../animation/types').AnimationAPI.QuickTweenOptions}\n    */\n   #tweenOptions = { duration: 1, ease: 'cubicOut' };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<import('./types').Action.DraggableOptionsStore>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.tween = false] - Tween enabled.\n    *\n    * @param {import('../animation/types').AnimationAPI.QuickTweenOptions}   [opts.tweenOptions] - Quick tween options.\n    */\n   constructor({ tween = false, tweenOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n      Object.defineProperty(this, 'tween', {\n         get: () => { return this.#tween; },\n         set: (newTween) =>\n         {\n            if (typeof newTween !== 'boolean') { throw new TypeError(`'tween' is not a boolean.`); }\n\n            this.#tween = newTween;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'tweenOptions', {\n         get: () => { return this.#tweenOptions; },\n         set: (newTweenOptions) =>\n         {\n            if (!isObject(newTweenOptions))\n            {\n               throw new TypeError(`'tweenOptions' is not an object.`);\n            }\n\n            if (newTweenOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newTweenOptions.duration))\n               {\n                  throw new TypeError(`'tweenOptions.duration' is not a finite number.`);\n               }\n\n               if (newTweenOptions.duration < 0)\n               {\n                  this.#tweenOptions.duration = 0;\n               }\n               else\n               {\n                  this.#tweenOptions.duration = newTweenOptions.duration;\n               }\n            }\n\n            if (newTweenOptions.ease !== void 0)\n            {\n               const easeFn = getEasingFunc(newTweenOptions.ease);\n\n               if (typeof easeFn !== 'function')\n               {\n                  throw new TypeError(`'tweenOptions.ease' is not a function or Svelte easing function name.`);\n               }\n\n               this.#tweenOptions.ease = newTweenOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (tween !== void 0) { this.tween = tween; }\n      if (tweenOptions !== void 0) { this.tweenOptions = tweenOptions; }\n\n      this.#initialTween = this.#tween;\n      this.#initialTweenOptions = Object.assign({}, this.#tweenOptions);\n   }\n\n   /**\n    * @returns {number} Get tween duration.\n    */\n   get tweenDuration() { return this.#tweenOptions.duration; }\n\n   /**\n    * @returns {import('#runtime/svelte/easing').EasingReference} Get easing function or easing function name.\n    */\n   get tweenEase() { return this.#tweenOptions.ease; }\n\n   /**\n    * @param {number}   duration - Set tween duration.\n    */\n   set tweenDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { duration = 0; }\n\n      this.#tweenOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {import('#runtime/svelte/easing').EasingReference} ease - Set easing function by name or direct function.\n    */\n   set tweenEase(ease)\n   {\n      const easeFn = getEasingFunc(ease);\n\n      if (typeof easeFn !== 'function')\n      {\n         throw new TypeError(`'ease' is not a function or Svelte easing function name.`);\n      }\n\n      this.#tweenOptions.ease = ease;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to initial values.\n    */\n   reset()\n   {\n      this.#tween = this.#initialTween;\n      this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets tween enabled state to initial value.\n    */\n   resetTween()\n   {\n      this.#tween = this.#initialTween;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets tween options to initial values.\n    */\n   resetTweenOptions()\n   {\n      this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Store subscribe method.\n    *\n    * @param {import('svelte/store').Subscriber<import('./types').Action.DraggableOptionsStore>} handler - Callback\n    *        function that is invoked on update / changes. Receives the DraggableOptionsStore instance.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableOptionsStore instance.\n *\n * @param {({\n *    tween?: boolean,\n *    tweenOptions?: import('../animation/types').AnimationAPI.QuickTweenOptions\n * })} options - Initial options for DraggableOptionsStore.\n *\n * @returns {import('./types').Action.DraggableOptionsStore} A new options instance.\n */\ndraggable.options = (options) => new DraggableOptionsStore(options);\n\n/**\n * Provides a basic animation implementation for TJSPosition animation.\n *\n * @implements {import('#runtime/util/animate').BasicAnimation}\n */\nclass AnimationControl\n{\n   /** @type {import('./types-local').AnimationData} */\n   #animationData;\n\n   /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>} */\n   #finishedPromise;\n\n   /** @type {boolean} */\n   #willFinish;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationControl}\n    */\n   static #voidControl = new AnimationControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\n    *\n    * @returns {AnimationControl} Void AnimationControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {import('./types-local').AnimationData | null}  [animationData] - Animation data from {@link AnimationAPI}.\n    *\n    * @param {boolean}        [willFinish] - Promise that tracks animation finished state.\n    */\n   constructor(animationData, willFinish = false)\n   {\n      this.#animationData = animationData;\n      this.#willFinish = willFinish;\n\n      // Set this control to animation data.\n      if (isObject(animationData)) { animationData.control = this; }\n   }\n\n   /**\n    * Get a promise that resolves when animation is finished.\n    *\n    * @returns {Promise<import('#runtime/util/animate').BasicAnimationState>} Animation finished Promise.\n    */\n   get finished()\n   {\n      if (!CrossWindow.isPromise(this.#finishedPromise))\n      {\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n          Promise.resolve({ cancelled: false });\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether this animation is currently active / animating.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n    * if an animation is actually finished.\n    *\n    * @returns {boolean} Animation active state.\n    */\n   get isActive() { return this.#animationData.active; }\n\n   /**\n    * Returns whether this animation is completely finished.\n    *\n    * @returns {boolean} Animation finished state.\n    */\n   get isFinished() { return this.#animationData.finished; }\n\n   /**\n    * Cancels the animation.\n    */\n   cancel()\n   {\n      const animationData = this.#animationData;\n\n      if (animationData === null || animationData === void 0) { return; }\n\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n      // update.\n      animationData.cancelled = true;\n   }\n}\n\n/**\n * Provides animation management and scheduling allowing all TJSPosition instances to utilize one micro-task.\n */\nclass AnimationManager\n{\n   /**\n    * Cancels all animations except `quickTo` animations.\n    *\n    * @type {import('./types-local').AnimationCancelFunction}\n    */\n   static cancelFn = (data) => data.quickTo !== true;\n\n   /**\n    * Cancels all animations.\n    *\n    * @type {import('./types-local').AnimationCancelFunction}\n    */\n   static cancelAllFn = () => true;\n\n   /**\n    * Defines the options used for {@link TJSPosition.set}.\n    *\n    * @type {Readonly<{immediateElementUpdate: boolean}>}\n    */\n   static #tjsPositionSetOptions = Object.freeze({ immediateElementUpdate: true });\n\n   /**\n    * @type {import('./types-local').AnimationData[]}\n    */\n   static #activeList = [];\n\n   /**\n    * Provides the `this` context for {@link AnimationManager.animate} to be scheduled on rAF.\n    *\n    * @type {Function}\n    */\n   static #animateBound = (timeFrame) => this.animate(timeFrame);\n\n   /**\n    * @type {import('./types-local').AnimationData[]}\n    */\n   static #pendingList = [];\n\n   /**\n    * Tracks whether a requestAnimationFrame callback is pending via {@link AnimationManager.add};\n    *\n    * @type {boolean}\n    */\n   static #rafPending = false;\n\n   /**\n    * Time of last `rAF` callback.\n    *\n    * @type {number}\n    */\n   static #timeFrame;\n\n   /**\n    * Time of `performance.now()` at last `rAF` callback.\n    *\n    * @type {number}\n    */\n   static #timeNow;\n\n   /**\n    * @returns {number} Time of last `rAF` callback.\n    */\n   static get timeFrame()\n   {\n      return this.#timeFrame;\n   }\n\n   /**\n    * @returns {number} Time of `performance.now()` at last `rAF` callback.\n    */\n   static get timeNow()\n   {\n      return this.#timeNow;\n   }\n\n   /**\n    * Add animation data.\n    *\n    * @param {import('./types-local').AnimationData}   data -\n    */\n   static add(data)\n   {\n      if (data.cancelled)\n      {\n         this.#cleanupData(data);\n         return;\n      }\n\n      AnimationManager.#pendingList.push(data);\n\n      // If there is no rAF pending schedule one now.\n      if (!AnimationManager.#rafPending)\n      {\n         AnimationManager.#rafPending = true;\n         globalThis.requestAnimationFrame(this.#animateBound);\n      }\n   }\n\n   /**\n    * Manage all animation.\n    *\n    * @param {DOMHighResTimeStamp} timeFrame - rAF callback time.\n    */\n   static animate(timeFrame)\n   {\n      AnimationManager.#rafPending = false;\n\n      AnimationManager.#timeNow = globalThis.performance.now();\n      AnimationManager.#timeFrame = timeFrame;\n\n      // Early out of the continual rAF callback when there are no current animations scheduled.\n      if (AnimationManager.#activeList.length === 0 && AnimationManager.#pendingList.length === 0) { return; }\n\n      if (AnimationManager.#pendingList.length)\n      {\n         // Process new data\n         for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n         {\n            const data = AnimationManager.#pendingList[cntr];\n\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\n            if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n            {\n               AnimationManager.#pendingList.splice(cntr, 1);\n               this.#cleanupData(data);\n            }\n\n            // If data is active then process it now. Delayed animations start with `active` false.\n            if (data.active)\n            {\n               // Set any transform origin for the animation.\n               if (data.transformOrigin) { data.position.set({ transformOrigin: data.transformOrigin }); }\n\n               data.start = AnimationManager.#timeFrame;\n\n               // Remove from new list and add to active list.\n               AnimationManager.#pendingList.splice(cntr, 1);\n               AnimationManager.#activeList.push(data);\n            }\n         }\n      }\n\n      // Process active animations.\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n\n         // Remove any animations that have been canceled.\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n         {\n            AnimationManager.#activeList.splice(cntr, 1);\n            this.#cleanupData(data);\n            continue;\n         }\n\n         data.current = timeFrame - data.start;\n\n         // Remove this animation instance if current animating time exceeds duration.\n         if (data.current >= data.duration)\n         {\n            // Prepare final update with end position data.\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n            {\n               const key = data.keys[dataCntr];\n               data.newData[key] = data.destination[key];\n            }\n\n            data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\n\n            AnimationManager.#activeList.splice(cntr, 1);\n            this.#cleanupData(data);\n\n            continue;\n         }\n\n         // Apply easing to create an eased time.\n         const easedTime = data.ease(data.current / data.duration);\n\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n         {\n            const key = data.keys[dataCntr];\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n         }\n\n         data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\n      }\n\n      globalThis.requestAnimationFrame(this.#animateBound);\n   }\n\n   /**\n    * Cancels all animations for given TJSPosition instance.\n    *\n    * @param {import('../').TJSPosition} position - TJSPosition instance.\n    *\n    * @param {import('./types-local').AnimationCancelFunction} [cancelFn] - An optional function to control cancelling\n    *        animations.\n    */\n   static cancel(position, cancelFn = AnimationManager.cancelFn)\n   {\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n         if (data.position === position && cancelFn(data))\n         {\n            AnimationManager.#activeList.splice(cntr, 1);\n            data.cancelled = true;\n            this.#cleanupData(data);\n         }\n      }\n\n      for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#pendingList[cntr];\n         if (data.position === position && cancelFn(data))\n         {\n            AnimationManager.#pendingList.splice(cntr, 1);\n            data.cancelled = true;\n            this.#cleanupData(data);\n         }\n      }\n   }\n\n   /**\n    * Cancels all active and delayed animations.\n    */\n   static cancelAll()\n   {\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n         data.cancelled = true;\n         this.#cleanupData(data);\n      }\n\n      for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#pendingList[cntr];\n         data.cancelled = true;\n         this.#cleanupData(data);\n      }\n\n      AnimationManager.#activeList.length = 0;\n      AnimationManager.#pendingList.length = 0;\n   }\n\n   /**\n    * @param {import('./types-local').AnimationData}  data - Animation data to cleanup.\n    */\n   static #cleanupData(data)\n   {\n      // Update state.\n      data.active = false;\n      data.finished = true;\n\n      // Reset any transform origin for the animation to initial value.\n      if (data.transformOriginInitial) { data.position.set({ transformOrigin: data.transformOriginInitial }); }\n\n      if (typeof data.cleanup === 'function') { data.cleanup(data); }\n\n      if (typeof data.resolve === 'function') { data.resolve({ cancelled: data.cancelled }); }\n\n      // Remove retained data if not a `quickTo` animation.\n      if (!data.quickTo)\n      {\n         data.cleanup = void 0;\n         data.control = void 0;\n         data.destination = void 0;\n         data.el = void 0;\n         data.ease = void 0;\n         data.initial = void 0;\n         data.interpolate = void 0;\n         data.keys = void 0;\n         data.newData = void 0;\n         data.position = void 0;\n         data.resolve = void 0;\n      }\n   }\n\n   /**\n    * Gets all {@link AnimationControl} instances for a given TJSPosition instance.\n    *\n    * @param {import('../index.js').TJSPosition} position - TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation[]} All scheduled AnimationControl instances for the\n    *          given TJSPosition instance.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n         if (data.position === position) { results.push(data.control); }\n      }\n\n      for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#pendingList[cntr];\n         if (data.position === position) { results.push(data.control); }\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns the status of any scheduled or pending animations for the given {@link TJSPosition} instance.\n    *\n    * @param {import('../index.js').TJSPosition} position - TJSPosition instance.\n    *\n    * @param {import('./types').AnimationAPI.ScheduleOptions} [options] - Scheduling options.\n    *\n    * @returns {boolean} True if scheduled / false if not.\n    */\n   static isScheduled(position, { active = true, pending = true } = {})\n   {\n      if (active)\n      {\n         for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n         {\n            if (AnimationManager.#activeList[cntr].position === position) { return true; }\n         }\n      }\n\n      if (pending)\n      {\n         for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n         {\n            if (AnimationManager.#pendingList[cntr].position === position) { return true; }\n         }\n      }\n\n      return false;\n   }\n}\n\n/**\n * Defines stored positional data.\n *\n * @implements {import('./types').Data.TJSPositionData}\n */\nclass TJSPositionData\n{\n   /**\n    * @param {object} [opts] - Options.\n    *\n    * @param {number | 'auto' | 'inherit' | null} [opts.height] -\n    *\n    * @param {number | null} [opts.left] -\n    *\n    * @param {number | null} [opts.maxHeight] -\n    *\n    * @param {number | null} [opts.maxWidth] -\n    *\n    * @param {number | null} [opts.minHeight] -\n    *\n    * @param {number | null} [opts.minWidth] -\n    *\n    * @param {number | null} [opts.rotateX] -\n    *\n    * @param {number | null} [opts.rotateY] -\n    *\n    * @param {number | null} [opts.rotateZ] -\n    *\n    * @param {number | null} [opts.scale] -\n    *\n    * @param {number | null} [opts.translateX] -\n    *\n    * @param {number | null} [opts.translateY] -\n    *\n    * @param {number | null} [opts.translateZ] -\n    *\n    * @param {number | null} [opts.top] -\n    *\n    * @param {import('../transform/types').TransformAPI.TransformOrigin | null} [opts.transformOrigin] -\n    *\n    * @param {number | 'auto' | 'inherit' | null} [opts.width] -\n    *\n    * @param {number | null} [opts.zIndex] -\n    *\n    * @param {number | null} [opts.rotation] - Alias for `rotateZ`.\n    */\n   constructor({ height = void 0, left = void 0, maxHeight = void 0, maxWidth = void 0, minHeight = void 0,\n    minWidth = void 0, rotateX = void 0, rotateY = void 0, rotateZ = void 0, scale = void 0, translateX = void 0,\n     translateY = void 0, translateZ = void 0, top = void 0, transformOrigin = void 0, width = void 0, zIndex = void 0,\n      rotation = void 0 } = {})\n   {\n      /** @type {number | 'auto' | 'inherit' | null} */\n      this.height = height;\n\n      /** @type {number | null} */\n      this.left = left;\n\n      /** @type {number | null} */\n      this.maxHeight = maxHeight;\n\n      /** @type {number | null} */\n      this.maxWidth = maxWidth;\n\n      /** @type {number | null} */\n      this.minHeight = minHeight;\n\n      /** @type {number | null} */\n      this.minWidth = minWidth;\n\n      /** @type {number | null} */\n      this.rotateX = rotateX;\n\n      /** @type {number | null} */\n      this.rotateY = rotateY;\n\n      /** @type {number | null} */\n      this.rotateZ = rotateZ;\n\n      /** @type {number | null} */\n      this.scale = scale;\n\n      /** @type {number | null} */\n      this.top = top;\n\n      /** @type {import('../transform/types').TransformAPI.TransformOrigin | null} */\n      this.transformOrigin = transformOrigin;\n\n      /** @type {number | null} */\n      this.translateX = translateX;\n\n      /** @type {number | null} */\n      this.translateY = translateY;\n\n      /** @type {number | null} */\n      this.translateZ = translateZ;\n\n      /** @type {number | 'auto' | 'inherit' | null} */\n      this.width = width;\n\n      /** @type {number | null} */\n      this.zIndex = zIndex;\n\n      // Aliases -----------------------------------------------------------------------------------------------------\n\n      /** @type {number | null} */\n      this.rotation = rotation; // Alias for `rotateZ`.\n   }\n}\n\n/**\n * Various internal utilities to work with {@link TJSPositionData}.\n */\nclass TJSPositionDataUtil\n{\n   /**\n    * Stores the TJSPositionData properties that can be animated.\n    *\n    * @type {ReadonlySet<string>}\n    */\n   static #animateKeys = Object.freeze(new Set([\n      // Main keys\n      'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n      'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n      // Aliases\n      'rotation'\n   ]));\n\n   /**\n    * Stores the TJSPositionData property aliases that can be animated.\n    *\n    * @type {Readonly<Map<string, string>>}\n    */\n   static #animateKeyAliases = Object.freeze(new Map([['rotation', 'rotateZ']]));\n\n   /**\n    * Provides numeric defaults for all parameters. This is used by {@link TJSPosition.get} to optionally\n    * provide numeric defaults.\n    *\n    * @type {{ [key: string]: number | null }}\n    */\n   static #numericDefaults = Object.freeze({\n      // Other keys\n      height: 0,\n      left: 0,\n      maxHeight: null,\n      maxWidth: null,\n      minHeight: null,\n      minWidth: null,\n      top: 0,\n      transformOrigin: null,\n      width: 0,\n      zIndex: null,\n\n      rotateX: 0,\n      rotateY: 0,\n      rotateZ: 0,\n      scale: 1,\n      translateX: 0,\n      translateY: 0,\n      translateZ: 0,\n\n      rotation: 0\n   });\n\n   /**\n    * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\n    * {@link TJSPositionData} instance is created.\n    *\n    * @param {Partial<import('./types').Data.TJSPositionData>}  source - The source instance to copy from.\n    *\n    * @param {import('./types').Data.TJSPositionData}  [target] - Target TJSPositionData like object; if one\n    *        is not provided a new instance is created.\n    *\n    * @returns {import('./types').Data.TJSPositionData} The target instance with all TJSPositionData fields.\n    */\n   static copyData(source, target = new TJSPositionData())\n   {\n      target.height = source.height ?? null;\n      target.left = source.left ?? null;\n      target.maxHeight = source.maxHeight ?? null;\n      target.maxWidth = source.maxWidth ?? null;\n      target.minHeight = source.minHeight ?? null;\n      target.minWidth = source.minWidth ?? null;\n      target.rotateX = source.rotateX ?? null;\n      target.rotateY = source.rotateY ?? null;\n      target.rotateZ = source.rotateZ ?? null;\n      target.scale = source.scale ?? null;\n      target.top = source.top ?? null;\n      target.transformOrigin = source.transformOrigin ?? null;\n      target.translateX = source.translateX ?? null;\n      target.translateY = source.translateY ?? null;\n      target.translateZ = source.translateZ ?? null;\n      target.width = source.width ?? null;\n      target.zIndex = source.zIndex ?? null;\n\n      return target;\n   }\n\n   /**\n    * Returns the non-aliased animation key.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key / possibly aliased key.\n    *\n    * @returns {import('../animation/types').AnimationAPI.AnimationKey} Actual non-aliased animation key.\n    */\n   static getAnimationKey(key)\n   {\n      return this.#animateKeyAliases.get(key) ?? key;\n   }\n\n   /**\n    * Queries an object by the given key or otherwise returns any numeric default.\n    *\n    * @param {object}   data - An object to query for the given animation key.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey}   key - Animation key.\n    *\n    * @param {boolean}  [aliased=false] - When use non-aliased key.\n    *\n    * @returns {*|number|null} Data at key or numeric default.\n    */\n   static getDataOrDefault(data, key, aliased = false)\n   {\n      if (aliased) { key = this.#animateKeyAliases.get(key) ?? key; }\n\n      return data[key] ?? this.#numericDefaults[key];\n   }\n\n   /**\n    * Tests if the given key is an animation key.\n    *\n    * @param {unknown}   key - A potential animation key.\n    *\n    * @returns {key is import('../animation/types').AnimationAPI.AnimationKey} Is animation key.\n    */\n   static isAnimationKey(key)\n   {\n      return this.#animateKeys.has(key);\n   }\n\n   /**\n    * Sets numeric defaults for a {@link TJSPositionData} like object.\n    *\n    * @param {object}   data - A TJSPositionData like object.\n    */\n   static setNumericDefaults(data)\n   {\n      // Transform keys\n      if (data.rotateX === null) { data.rotateX = 0; }\n      if (data.rotateY === null) { data.rotateY = 0; }\n      if (data.rotateZ === null) { data.rotateZ = 0; }\n      if (data.translateX === null) { data.translateX = 0; }\n      if (data.translateY === null) { data.translateY = 0; }\n      if (data.translateZ === null) { data.translateZ = 0; }\n      if (data.scale === null) { data.scale = 1; }\n\n      // Aliases\n      if (data.rotation === null) { data.rotation = 0; }\n   }\n}\n\n/**\n * Converts {@link TJSPositionData} properties defined as strings to number values. The string values can be defined\n * as relative adjustments with a leading operator. Various unit formats are supported as well.\n */\nclass ConvertStringData\n{\n   /**\n    * Animation keys for different processing categories.\n    *\n    * @type {{numPx: Readonly<Set<string>>, percentParent: Readonly<Set<string>>}}\n    */\n   static #animKeyTypes = {\n      // Animation keys that can be specified in `px` converted to a number.\n      numPx: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n       'translateX', 'translateY', 'translateZ'])),\n\n      // Animation keys that can be specified in percentage of parent element constraint.\n      percentParent: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width',\n       'height'])),\n\n      // Only rotation animation keys can be specified in `rad` / `turn` converted to a number.\n      rotationRadTurn: Object.freeze(new Set(['rotateX', 'rotateY', 'rotateZ', 'rotation']))\n   };\n\n   /**\n    * Parses string data values. Relative values must start with leading values '+=', '-=', or '*=' followed by a\n    * float / numeric value. IE `+=45` or for percentage '+=10%'. Also handles exact percent value such as `10` or\n    * `10%`. Percentage values are based on the current value, parent element constraints, or constraints of the type\n    * of value like rotation being bound by 360 degrees.\n    *\n    * TODO: In the future support more specific CSS unit types.\n    *\n    * @type {RegExp}\n    */\n   static #regexStringData = /^(?<operation>[-+*]=)?(?<value>-?\\d*\\.?\\d+)(?<unit>%|%~|px|rad|turn)?$/;\n\n   /**\n    * Stores the results for match groups from `regexStringData`;\n    *\n    * @type {import('./types-local').StringMatch}\n    */\n   static #matchResults = Object.seal({\n      operation: void 0,\n      value: void 0,\n      unit: void 0\n   });\n\n   /**\n    * Converts any relative string values for animatable keys to actual updates performed against current data.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - position data.\n    *\n    * @param {import('../data/types').Data.TJSPositionData}   position - The source position data.\n    *\n    * @param {HTMLElement} el - Target positioned element.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataRelative} Converted data.\n    */\n   static process(data, position, el)\n   {\n      /** @type {number} */\n      let parentClientHeight = void 0, parentClientWidth = void 0;\n\n      for (const key in data)\n      {\n         // Key is animatable / numeric.\n         if (TJSPositionDataUtil.isAnimationKey(key))\n         {\n            const value = data[key];\n\n            if (typeof value !== 'string') { continue; }\n\n            // Ignore 'auto' and 'inherit' string values.\n            if (value === 'auto' || value === 'inherit') { continue; }\n\n            /** @type {import('../animation/types').AnimationAPI.AnimationKey} */\n            const animKey = key;\n\n            const regexResults = this.#regexStringData.exec(value);\n\n            // Additional state indicating a particular key is handled.\n            let handled = false;\n\n            if (regexResults)\n            {\n               const results = this.#matchResults;\n\n               results.operation = regexResults.groups.operation;\n               results.value = parseFloat(regexResults.groups.value);\n               results.unit = regexResults.groups.unit;\n\n               // Retrieve current value, but if null use the numeric default.\n               const current = TJSPositionDataUtil.getDataOrDefault(position, key, true);\n\n               switch (results.unit)\n               {\n                  // Animation keys that support percentage changes including constraints against the parent element.\n                  case '%':\n                  {\n                     // Cache parent client width / height on first parent percent based key.\n                     if (this.#animKeyTypes.percentParent.has(key))\n                     {\n                        if (!Number.isFinite(parentClientHeight) && el?.parentElement?.isConnected)\n                        {\n                           parentClientHeight = el.parentElement.clientHeight;\n                           parentClientWidth = el.parentElement.clientWidth;\n                        }\n\n                        if (parentClientHeight === void 0 || parentClientWidth === void 0)\n                        {\n                           console.warn(\n                            `TJSPosition - ConvertStringData warning: could not determine parent constraints for key '${\n                             key}' with value '${value}'.`);\n                           data[key] = void 0;\n                           continue;\n                        }\n                     }\n\n                     handled = this.#handlePercent(animKey, current, data, position, el, results,\n                      parentClientHeight, parentClientWidth);\n\n                     break;\n                  }\n\n                  // Animation keys that support percentage changes from current values.\n                  case '%~':\n                     handled = this.#handleRelativePercent(animKey, current, data, position, el, results);\n                     break;\n\n                  // Animation keys that support `px` / treat as raw number.\n                  case 'px':\n                     handled = this.#animKeyTypes.numPx.has(key) ?\n                      this.#applyResultsValue(animKey, current, data, results) : false;\n                     break;\n\n                  // Only rotation animation keys support `rad` / `turn`.\n                  case 'rad':\n                  case 'turn':\n                     handled = this.#animKeyTypes.rotationRadTurn.has(key) ?\n                      this.#handleRotationRadTurn(animKey, current, data, position, el, results) : false;\n                     break;\n\n                  // No units / treat as raw number.\n                  default:\n                     handled = this.#applyResultsValue(animKey, current, data, results);\n                     break;\n               }\n            }\n\n            if (!regexResults || !handled)\n            {\n               console.warn(\n                `TJSPosition - ConvertStringData warning: malformed key '${key}' with value '${value}'.`);\n               data[key] = void 0;\n            }\n         }\n      }\n\n      return data;\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Provides the common update to source data after `results.value` has been converted to the proper value\n    * respectively.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #applyResultsValue(key, current, data, results)\n   {\n      if (!results.operation)\n      {\n         data[key] = results.value;\n         return true;\n      }\n\n      switch (results.operation)\n      {\n         case '-=':\n            data[key] = current - results.value;\n            break;\n\n         case '+=':\n            data[key] = current + results.value;\n            break;\n\n         case '*=':\n            data[key] = current * results.value;\n            break;\n\n         default:\n            return false;\n      }\n\n      return true;\n   }\n\n   /**\n    * Handles the `%` unit type where values are adjusted against the parent element client width / height or in the\n    * case of rotation the percentage of 360 degrees.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - Current position data.\n    *\n    * @param {HTMLElement} el - Positioned element.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @param {number}  parentClientHeight - Parent element client height.\n    *\n    * @param {number}  parentClientWidth - Parent element client width.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #handlePercent(key, current, data, position, el, results, parentClientHeight, parentClientWidth)\n   {\n      switch (key)\n      {\n         // Calculate value; take into account keys that calculate parent client width.\n         case 'left':\n         case 'maxWidth':\n         case 'minWidth':\n         case 'width':\n         case 'translateX':\n            results.value = parentClientWidth * (results.value / 100);\n            break;\n\n         // Calculate value; take into account keys that calculate parent client height.\n         case 'top':\n         case 'maxHeight':\n         case 'minHeight':\n         case 'height':\n         case 'translateY':\n            results.value = parentClientHeight * (results.value / 100);\n            break;\n\n         // Calculate value; convert percentage into degrees\n         case 'rotateX':\n         case 'rotateY':\n         case 'rotateZ':\n         case 'rotation':\n            results.value = 360 * (results.value / 100);\n            break;\n\n         default:\n            return false;\n      }\n\n      return this.#applyResultsValue(key, current, data, results);\n   }\n\n   /**\n    * Handles the `%~` unit type where values are adjusted against the current value for the given key.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - Current position data.\n    *\n    * @param {HTMLElement} el - Positioned element.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #handleRelativePercent(key, current, data, position, el, results)\n   {\n      // Normalize percentage.\n      results.value = results.value / 100;\n\n      if (!results.operation)\n      {\n         data[key] = current * results.value;\n         return true;\n      }\n\n      switch (results.operation)\n      {\n         case '-=':\n            data[key] = current - (current * results.value);\n            break;\n\n         case '+=':\n            data[key] = current + (current * results.value);\n            break;\n\n         case '*=':\n            data[key] = current * (current * results.value);\n            break;\n\n         default:\n            return false;\n      }\n\n      return true;\n   }\n\n   /**\n    * Handles the `rad` / `turn` unit types for rotation animation keys.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - Current position data.\n    *\n    * @param {HTMLElement} el - Positioned element.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #handleRotationRadTurn(key, current, data, position, el, results)\n   {\n      // Convert radians / turn into degrees.\n      switch (results.unit)\n      {\n         case 'rad':\n            results.value = radToDeg(results.value);\n            break;\n\n         case 'turn':\n            results.value = 360 * results.value;\n            break;\n      }\n\n      return this.#applyResultsValue(key, current, data, results);\n   }\n}\n\n/**\n * Provides the output data for {@link TransformAPI.getData}.\n *\n * @implements {import('./types').TransformAPI.TransformData}\n */\nclass TJSTransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    *\n    * @type {DOMRect}\n    */\n   #boundingRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screen space clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    *\n    * @type {import('#runtime/math/gl-matrix').Vec3[]}\n    */\n   #corners = [Vec3.create(), Vec3.create(), Vec3.create(), Vec3.create()];\n\n   /**\n    * Stores the current gl-matrix Mat4 data.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4}\n    */\n   #mat4 = Mat4.create();\n\n   /**\n    * Stores the pre & post origin translations to apply to matrix transforms.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4[]}\n    */\n   #originTranslations = [Mat4.create(), Mat4.create()];\n\n   /**\n    * @returns {DOMRect} The bounding rectangle.\n    */\n   get boundingRect() { return this.#boundingRect; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Vec3[]} The transformed corner points as Vec3 in screen space.\n    */\n   get corners() { return this.#corners; }\n\n   /**\n    * @returns {string} Returns the CSS style string for the transform matrix.\n    */\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4} The transform matrix.\n    */\n   get mat4() { return this.#mat4; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4[]} The pre / post translation matrices for origin translation.\n    */\n   get originTranslations() { return this.#originTranslations; }\n}\n\n/**\n * @implements {import('./types').TransformAPI}\n */\nclass TJSTransforms\n{\n   /**\n    * Stores transform data.\n    *\n    * @type {Partial<import('../data/types').Data.TJSPositionData>}\n    */\n   #data = {};\n\n   /**\n    * Stores the transform keys in the order added.\n    *\n    * @type {string[]}\n    */\n   #orderList = [];\n\n   /**\n    * Defines the keys of TJSPositionData that are transform keys.\n    *\n    * @type {string[]}\n    */\n   static #transformKeys = Object.freeze([\n    'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'\n   ]);\n\n   /**\n    * Defines bitwise keys for transforms used in {@link TJSTransforms.getMat4}.\n    *\n    * @type {object}\n    */\n   static #transformKeysBitwise = Object.freeze({\n      rotateX: 1,\n      rotateY: 2,\n      rotateZ: 4,\n      scale: 8,\n      translateX: 16,\n      translateY: 32,\n      translateZ: 64\n   });\n\n   /**\n    * Defines the default transform origin.\n    *\n    * @type {Readonly<import('./types').TransformAPI.TransformOrigin>}\n    */\n   static #transformOriginDefault = 'top left';\n\n   /**\n    * Defines the valid transform origins.\n    *\n    * @type {Readonly<import('./types').TransformAPI.TransformOrigin[]>}\n    */\n   static #transformOrigins = Object.freeze(['top left', 'top center', 'top right', 'center left', 'center',\n    'center right', 'bottom left', 'bottom center', 'bottom right']);\n\n   /**\n    * Defines a valid Set of transform origins.\n    *\n    * @type {ReadonlySet<import('./types').TransformAPI.TransformOrigin>}\n    */\n   static #transformOriginsSet = Object.freeze(new Set(this.#transformOrigins));\n\n   // Temporary variables --------------------------------------------------------------------------------------------\n\n   /** @type {import('#runtime/math/gl-matrix').Mat4} */\n   static #mat4Result = Mat4.create();\n\n   /** @type {import('#runtime/math/gl-matrix').Mat4} */\n   static #mat4Temp = Mat4.create();\n\n   /** @type {import('#runtime/math/gl-matrix').Vec3} */\n   static #vec3Temp = Vec3.create();\n\n   /** @type {number[]} */\n   static #vectorScale = [1, 1, 1];\n\n   /** @type {number[]} */\n   static #vectorTranslate = [0, 0, 0];\n\n   /**\n    * Returns a list of supported transform origins.\n    *\n    * @returns {Readonly<import('./types').TransformAPI.TransformOrigin[]>} The supported transform origin strings.\n    */\n   static get transformOrigins()\n   {\n      return this.#transformOrigins;\n   }\n\n   /**\n    * Returns whether the given string is a {@link TransformAPI.TransformOrigin}.\n    *\n    * @param {unknown}  origin - A potential transform origin string.\n    *\n    * @returns {origin is import('./types').TransformAPI.TransformOrigin}\n    */\n   static isTransformOrigin(origin)\n   {\n      return this.#transformOriginsSet.has(origin);\n   }\n\n   /**\n    * @returns {boolean} Whether there are active transforms in local data.\n    */\n   get isActive() { return this.#orderList.length > 0; }\n\n   /**\n    * @returns {number|undefined} Any local rotateX data.\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|undefined} Any local rotateY data.\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ data.\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ scale.\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.rotateX === void 0) { this.#orderList.push('rotateX'); }\n\n         this.#data.rotateX = value;\n      }\n      else\n      {\n         if (this.#data.rotateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.rotateX;\n      }\n   }\n\n   /**\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.rotateY === void 0) { this.#orderList.push('rotateY'); }\n\n         this.#data.rotateY = value;\n      }\n      else\n      {\n         if (this.#data.rotateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.rotateY;\n      }\n   }\n\n   /**\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\n\n         this.#data.rotateZ = value;\n      }\n\n      else\n      {\n         if (this.#data.rotateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.rotateZ;\n      }\n   }\n\n   /**\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set scale(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.scale === void 0) { this.#orderList.push('scale'); }\n\n         this.#data.scale = value;\n      }\n      else\n      {\n         if (this.#data.scale !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.scale;\n      }\n   }\n\n   /**\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.translateX === void 0) { this.#orderList.push('translateX'); }\n\n         this.#data.translateX = value;\n      }\n\n      else\n      {\n         if (this.#data.translateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.translateX;\n      }\n   }\n\n   /**\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.translateY === void 0) { this.#orderList.push('translateY'); }\n\n         this.#data.translateY = value;\n      }\n\n      else\n      {\n         if (this.#data.translateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.translateY;\n      }\n   }\n\n   /**\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.translateZ === void 0) { this.#orderList.push('translateZ'); }\n\n         this.#data.translateZ = value;\n      }\n\n      else\n      {\n         if (this.#data.translateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.translateZ;\n      }\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSS(data = this.#data)\n   {\n      return `matrix3d(${this.getMat4(data, TJSTransforms.#mat4Result).join(',')})`;\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSSOrtho(data = this.#data)\n   {\n      return `matrix3d(${this.getMat4Ortho(data, TJSTransforms.#mat4Result).join(',')})`;\n   }\n\n   /**\n    * Collects all data including a bounding rect, transform matrix, and points array of the given\n    * {@link TJSPositionData} instance with the applied local transform data.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - The position data to process.\n    *\n    * @param {import('./types').TransformAPI.TransformData} [output] - Optional TJSTransformData output instance.\n    *\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\n    *\n    * @returns {import('./types').TransformAPI.TransformData} The output TJSTransformData instance.\n    */\n   getData(position, output = new TJSTransformData(), validationData = {})\n   {\n      const valWidth = validationData.width ?? 0;\n      const valHeight = validationData.height ?? 0;\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.marginLeft ?? 0;\n\n      position.top += valOffsetTop;\n      position.left += valOffsetLeft;\n\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\n\n      const rect = output.corners;\n\n      if (this.hasTransform(position))\n      {\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\n         rect[1][0] = width;\n         rect[1][1] = rect[1][2] = 0;\n         rect[2][0] = width;\n         rect[2][1] = height;\n         rect[2][2] = 0;\n         rect[3][0] = 0;\n         rect[3][1] = height;\n         rect[3][2] = 0;\n\n         const matrix = this.getMat4(position, output.mat4);\n\n         const translate = TJSTransforms.#getOriginTranslation(position.transformOrigin, width, height, output.originTranslations);\n\n         if (TJSTransforms.#transformOriginDefault === position.transformOrigin)\n         {\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n         }\n         else\n         {\n            Vec3.transformMat4(rect[0], rect[0], translate[0]);\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[0], rect[0], translate[1]);\n\n            Vec3.transformMat4(rect[1], rect[1], translate[0]);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[1], rect[1], translate[1]);\n\n            Vec3.transformMat4(rect[2], rect[2], translate[0]);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[2], rect[2], translate[1]);\n\n            Vec3.transformMat4(rect[3], rect[3], translate[0]);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n            Vec3.transformMat4(rect[3], rect[3], translate[1]);\n         }\n\n         rect[0][0] = position.left + rect[0][0];\n         rect[0][1] = position.top + rect[0][1];\n         rect[1][0] = position.left + rect[1][0];\n         rect[1][1] = position.top + rect[1][1];\n         rect[2][0] = position.left + rect[2][0];\n         rect[2][1] = position.top + rect[2][1];\n         rect[3][0] = position.left + rect[3][0];\n         rect[3][1] = position.top + rect[3][1];\n      }\n      else\n      {\n         rect[0][0] = position.left;\n         rect[0][1] = position.top;\n         rect[1][0] = position.left + width;\n         rect[1][1] = position.top;\n         rect[2][0] = position.left + width;\n         rect[2][1] = position.top + height;\n         rect[3][0] = position.left;\n         rect[3][1] = position.top + height;\n\n         Mat4.identity(output.mat4);\n      }\n\n      let maxX = Number.MIN_SAFE_INTEGER;\n      let maxY = Number.MIN_SAFE_INTEGER;\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (let cntr = 4; --cntr >= 0;)\n      {\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\n      }\n\n      const boundingRect = output.boundingRect;\n      boundingRect.x = minX;\n      boundingRect.y = minY;\n      boundingRect.width = maxX - minX;\n      boundingRect.height = maxY - minY;\n\n      position.top -= valOffsetTop;\n      position.left -= valOffsetLeft;\n\n      return output;\n   }\n\n   /**\n    * Creates a transform matrix based on local data applied in order it was added.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {import('../data/types').Data.TJSPositionData}   [data] - TJSPositionData instance or local transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4(data = this.#data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'scale':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.scale;\n               TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data[key];\n               Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n               break;\n\n            case 'translateX':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateX;\n               TJSTransforms.#vectorTranslate[0] = data.translateX;\n               TJSTransforms.#vectorTranslate[1] = 0;\n               TJSTransforms.#vectorTranslate[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n               break;\n\n            case 'translateY':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateY;\n               TJSTransforms.#vectorTranslate[0] = 0;\n               TJSTransforms.#vectorTranslate[1] = data.translateY;\n               TJSTransforms.#vectorTranslate[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n               break;\n\n            case 'translateZ':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateZ;\n               TJSTransforms.#vectorTranslate[0] = 0;\n               TJSTransforms.#vectorTranslate[1] = 0;\n               TJSTransforms.#vectorTranslate[2] = data.translateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this.#data)\n      {\n         for (let cntr = 0; cntr < TJSTransforms.#transformKeys.length; cntr++)\n         {\n            const key = TJSTransforms.#transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'scale':\n                  TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n                  break;\n\n               case 'translateX':\n                  TJSTransforms.#vectorTranslate[0] = data[key];\n                  TJSTransforms.#vectorTranslate[1] = 0;\n                  TJSTransforms.#vectorTranslate[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                  break;\n\n               case 'translateY':\n                  TJSTransforms.#vectorTranslate[0] = 0;\n                  TJSTransforms.#vectorTranslate[1] = data[key];\n                  TJSTransforms.#vectorTranslate[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                  break;\n\n               case 'translateZ':\n                  TJSTransforms.#vectorTranslate[0] = 0;\n                  TJSTransforms.#vectorTranslate[1] = 0;\n                  TJSTransforms.#vectorTranslate[2] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n    *\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\n    * translate X / Y.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {Partial<import('../data/types').Data.TJSPositionData>}   [data] - TJSPositionData instance or local\n    *        transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4Ortho(data = this.#data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Attempt to retrieve values from passed in data otherwise default to 0.\n      // Always perform the translation last regardless of order added to local transform data.\n      // Add data.left to translateX and data.top to translateY.\n      TJSTransforms.#vectorTranslate[0] = (data.left ?? 0) + (data.translateX ?? 0);\n      TJSTransforms.#vectorTranslate[1] = (data.top ?? 0) + (data.translateY ?? 0);\n      TJSTransforms.#vectorTranslate[2] = data.translateZ ?? 0;\n      Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n\n      // Scale can also be applied out of order.\n      if (data.scale !== null)\n      {\n         TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data.scale;\n         Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n      }\n\n      // Early out if there is not rotation data.\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\n\n      // Rotation transforms must be applied in the order they are added.\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this.#data)\n      {\n         for (let cntr = 0; cntr < TJSTransforms.#transformKeys.length; cntr++)\n         {\n            const key = TJSTransforms.#transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Tests an object if it contains transform keys and the values are finite numbers.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} data - An object to test for transform data.\n    *\n    * @returns {boolean} Whether the given TJSPositionData has transforms.\n    */\n   hasTransform(data)\n   {\n      for (const key of TJSTransforms.#transformKeys)\n      {\n         if (Number.isFinite(data[key])) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Resets internal data from the given object containing valid transform keys.\n    *\n    * @param {object}   data - An object with transform data.\n    */\n   reset(data)\n   {\n      for (const key in data)\n      {\n         if (TJSTransforms.#transformKeys.includes(key))\n         {\n            if (Number.isFinite(data[key]))\n            {\n               this.#data[key] = data[key];\n            }\n            else\n            {\n               const index = this.#orderList.findIndex((entry) => entry === key);\n               if (index >= 0) { this.#orderList.splice(index, 1); }\n\n               delete this.#data[key];\n            }\n         }\n      }\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n    * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n    * translation.\n    *\n    * This method is used internally, but may be useful if you need the origin translation matrices to transform\n    * bespoke points based on any `transformOrigin` set in {@link TJSPositionData}.\n    *\n    * @param {string}   transformOrigin - The transform origin attribute from TJSPositionData.\n    *\n    * @param {number}   width - The TJSPositionData width or validation data width when 'auto'.\n    *\n    * @param {number}   height - The TJSPositionData height or validation data height when 'auto'.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4[]}   output - Output Mat4 array.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4[]} Output Mat4 array.\n    */\n   static #getOriginTranslation(transformOrigin, width, height, output)\n   {\n      const vector = TJSTransforms.#vec3Temp;\n\n      switch (transformOrigin)\n      {\n         case 'top left':\n            vector[0] = vector[1] = 0;\n            Mat4.fromTranslation(output[0], vector);\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'top center':\n            vector[0] = -width * 0.5;\n            vector[1] = 0;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'top right':\n            vector[0] = -width;\n            vector[1] = 0;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'center left':\n            vector[0] = 0;\n            vector[1] = -height * 0.5;\n            Mat4.fromTranslation(output[0], vector);\n            vector[1] = height * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         // By default, null / no transform is 'center'.\n         case null:\n         case 'center':\n            vector[0] = -width * 0.5;\n            vector[1] = -height * 0.5;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width * 0.5;\n            vector[1] = height * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'center right':\n            vector[0] = -width;\n            vector[1] = -height * 0.5;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width;\n            vector[1] = height * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'bottom left':\n            vector[0] = 0;\n            vector[1] = -height;\n            Mat4.fromTranslation(output[0], vector);\n            vector[1] = height;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'bottom center':\n            vector[0] = -width * 0.5;\n            vector[1] = -height;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width * 0.5;\n            vector[1] = height;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'bottom right':\n            vector[0] = -width;\n            vector[1] = -height;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width;\n            vector[1] = height;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         // No valid transform origin parameter; set identity.\n         default:\n            Mat4.identity(output[0]);\n            Mat4.identity(output[1]);\n            break;\n      }\n\n      return output;\n   }\n}\n\nclass AnimationScheduler\n{\n   /**\n    * Used to copy data from a TJSPosition instance.\n    *\n    * @type {import('../data/types').Data.TJSPositionData}\n    */\n   static #data = {};\n\n   static #getEaseOptions = Object.freeze({ default: false });\n\n   /**\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n    *\n    * @param {import('../').TJSPosition} position -\n    *\n    * @param {object}      initial -\n    *\n    * @param {object}      destination -\n    *\n    * @param {number}      duration -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {number}      delay -\n    *\n    * @param {import('#runtime/svelte/easing').EasingFunction}    ease -\n    *\n    * @param {import('#runtime/math/interpolate').InterpolateFunction}    [interpolate=lerp] -\n    *\n    * @param {import('../transform/types').TransformAPI.TransformOrigin}  [transformOrigin] -\n    *\n    * @param {import('../transform/types').TransformAPI.TransformOrigin}  [transformOriginInitial] -\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] -\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static #addAnimation(position, initial, destination, duration, el, delay, ease, interpolate = lerp, transformOrigin,\n    transformOriginInitial, cleanup)\n   {\n      // Set initial data for transform values that are often null by default.\n      TJSPositionDataUtil.setNumericDefaults(initial);\n      TJSPositionDataUtil.setNumericDefaults(destination);\n\n      // Reject all initial data that is not a number.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\n      }\n\n      const keys = Object.keys(initial);\n      const newData = Object.assign({}, initial);\n\n      // Nothing to animate, so return now.\n      // TODO handle in respective animation controls.\n\n      if (keys.length === 0) { return null; }\n\n      /** @type {import('./types-local').AnimationData} */\n      const animationData = {\n         active: true,\n         cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el,\n         finished: false,\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position,\n         resolve: void 0,\n         start: void 0,\n         transformOrigin,\n         transformOriginInitial,\n         quickTo: false\n      };\n\n      if (delay > 0)\n      {\n         animationData.active = false;\n\n         // Delay w/ setTimeout and make active w/ AnimationManager.\n         setTimeout(() => animationData.active = true, delay * 1000);\n      }\n\n      // Schedule immediately w/ AnimationManager\n      AnimationManager.add(animationData);\n\n      // Create animation control\n      return new AnimationControl(animationData, true);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} options - Tween options.\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] - Custom animation cleanup function.\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static from(position, fromData, options = {}, cleanup)\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n      }\n\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return null;\n      }\n\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n\n      // Handle any defined scheduling strategy.\n      if (strategy !== void 0)\n      {\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationScheduler.from error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationScheduler.from error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, this.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationScheduler.from error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      position.get(this.#data);\n\n      // Determine if any transform origin for the animation is valid.\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n\n      // Given a valid transform origin store the initial transform origin to be restored.\n      const transformOriginInitial = transformOrigin !== void 0 ? this.#data.transformOrigin : void 0;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         // Must use actual key from any aliases.\n         const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n         if (this.#data[animKey] !== void 0 && fromData[key] !== this.#data[animKey])\n         {\n            initial[key] = fromData[key];\n            destination[key] = this.#data[animKey];\n         }\n      }\n\n      ConvertStringData.process(initial, this.#data, el);\n\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\n       transformOriginInitial, cleanup);\n   }\n\n   /**\n    * Provides a tween from given position data to the given position.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The ending position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} options - Tween options.\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] - Custom animation cleanup function.\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static fromTo(position, fromData, toData, options = {}, cleanup)\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'fromData' is not an object.`);\n      }\n\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'toData' is not an object.`);\n      }\n\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return null;\n      }\n\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n\n      // Handle any defined scheduling strategy.\n      if (strategy !== void 0)\n      {\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, this.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationScheduler.fromTo error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      position.get(this.#data);\n\n      // Determine if any transform origin for the animation is valid.\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n\n      // Given a valid transform origin store the initial transform origin to be restored.\n      const transformOriginInitial = transformOrigin !== void 0 ? this.#data.transformOrigin : void 0;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (toData[key] === void 0)\n         {\n            console.warn(`AnimationScheduler.fromTo warning: skipping key ('${\n             key}') from 'fromData' as it is missing in 'toData'.`);\n\n            continue;\n         }\n\n         // Must use actual key from any aliases.\n         const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n         if (this.#data[animKey] !== void 0)\n         {\n            initial[key] = fromData[key];\n            destination[key] = toData[key];\n         }\n      }\n\n      ConvertStringData.process(initial, this.#data, el);\n      ConvertStringData.process(destination, this.#data, el);\n\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\n       transformOriginInitial, cleanup);\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The destination position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} options - Tween options.\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] - Custom animation cleanup function.\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static to(position, toData, options = {}, cleanup)\n   {\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationScheduler.to error: 'toData' is not an object.`);\n      }\n\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return null;\n      }\n\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n\n      // Handle any defined scheduling strategy.\n      if (strategy !== void 0)\n      {\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationScheduler.to error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationScheduler.to error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, this.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationScheduler.to error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      position.get(this.#data);\n\n      // Determine if any transform origin for the animation is valid.\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n\n      // Given a valid transform origin store the initial transform origin to be restored.\n      const transformOriginInitial = transformOrigin !== void 0 ? this.#data.transformOrigin : void 0;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in toData)\n      {\n         // Must use actual key from any aliases.\n         const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n         if (this.#data[animKey] !== void 0 && toData[key] !== this.#data[animKey])\n         {\n            destination[key] = toData[key];\n            initial[key] = this.#data[animKey];\n         }\n      }\n\n      ConvertStringData.process(destination, this.#data, el);\n\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\n       transformOriginInitial, cleanup);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Handle any defined scheduling strategy allowing existing scheduled animations for the same position instance\n    * to be controlled.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions.strategy} strategy - A scheduling strategy to apply.\n    *\n    * @returns {undefined | null} Returns null to abort scheduling current animation.\n    */\n   static #handleStrategy(position, strategy)\n   {\n      switch (strategy)\n      {\n         case 'cancel':\n            if (AnimationManager.isScheduled(position)) { AnimationManager.cancel(position); }\n            break;\n\n         case 'cancelAll':\n            if (AnimationManager.isScheduled(position))\n            {\n               AnimationManager.cancel(position, AnimationManager.cancelAllFn);\n            }\n            break;\n\n         case 'exclusive':\n            if (AnimationManager.isScheduled(position)) { return null; }\n            break;\n\n         default:\n            console.warn(`AnimationScheduler error: 'strategy' is not 'cancel', 'cancelAll', or 'exclusive'.`);\n            return null;\n      }\n   }\n}\n\n/**\n * @implements {import('./types').AnimationAPI}\n */\nclass AnimationAPI\n{\n   static #getEaseOptions = Object.freeze({ default: false });\n\n   /** @type {import('../data/types').Data.TJSPositionData} */\n   #data;\n\n   /** @type {import('../').TJSPosition} */\n   #position;\n\n   /**\n    * @param {import('../').TJSPosition}       position -\n    *\n    * @param {import('../data/types').Data.TJSPositionData}   data -\n    */\n   constructor(position, data)\n   {\n      this.#position = position;\n      this.#data = data;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Returns if there are scheduled animations whether active or pending for this TJSPosition instance.\n    *\n    * @returns {boolean} Are there scheduled animations.\n    */\n   get isScheduled()\n   {\n      return AnimationManager.isScheduled(this.#position);\n   }\n\n   /**\n    * Cancels all animation instances for this TJSPosition instance.\n    */\n   cancel()\n   {\n      AnimationManager.cancel(this.#position, AnimationManager.cancelAllFn);\n   }\n\n   /**\n    * Returns all currently scheduled AnimationControl instances for this TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation[]} All currently scheduled animation controls for\n    *          this TJSPosition instance.\n    */\n   getScheduled()\n   {\n      return AnimationManager.getScheduled(this.#position);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} [options] - Optional tween parameters.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   from(fromData, options)\n   {\n      const animationControl = AnimationScheduler.from(this.#position, fromData, options);\n      return animationControl ? animationControl : AnimationControl.voidControl;\n   }\n\n   /**\n    * Provides a tween from given position data to the given position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The ending position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} [options] - Optional tween parameters.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   fromTo(fromData, toData, options)\n   {\n      const animationControl = AnimationScheduler.fromTo(this.#position, fromData, toData, options);\n      return animationControl ? animationControl : AnimationControl.voidControl;\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The destination position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} [options] - Optional tween parameters.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   to(toData, options)\n   {\n      const animationControl = AnimationScheduler.to(this.#position, toData, options);\n      return animationControl ? animationControl : AnimationControl.voidControl;\n   }\n\n   /**\n    * Returns a function that provides an optimized way to constantly update a to-tween.\n    *\n    * @param {Iterable<import('./types').AnimationAPI.AnimationKey>}  keys - The keys for quickTo.\n    *\n    * @param {import('./types').AnimationAPI.QuickTweenOptions} [options] - Optional quick tween parameters.\n    *\n    * @returns {import('./types').AnimationAPI.QuickToCallback} quick-to tween function.\n    */\n   quickTo(keys, options = {})\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n      }\n\n      let { duration = 1, ease = 'cubicOut' } = options;\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, AnimationAPI.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationAPI.quickTo error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key of keys)\n      {\n         if (typeof key !== 'string')\n         {\n            throw new TypeError(`AnimationAPI.quickTo error: key ('${key}') is not a string.`);\n         }\n\n         if (!TJSPositionDataUtil.isAnimationKey(key))\n         {\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n         }\n\n         // Must use actual key from any aliases.\n         const value = TJSPositionDataUtil.getDataOrDefault(data, key, true);\n\n         if (value !== null)\n         {\n            destination[key] = value;\n            initial[key] = value;\n         }\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const newData = Object.assign({}, initial);\n\n      /** @type {import('./types-local').AnimationData} */\n      const animationData = {\n         active: true,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el: void 0,\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n         initial,\n         interpolate: lerp,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0,\n         quickTo: true\n      };\n\n      const quickToCB = /** @type {import('./types').AnimationAPI.QuickToCallback} */ (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         for (let cntr = keysArray.length; --cntr >= 0;)\n         {\n            const key = keysArray[cntr];\n\n            // Must use actual key from any aliases.\n            const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n            if (data[animKey] !== void 0) { initial[key] = data[animKey]; }\n         }\n\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n         if (isObject(args[0]))\n         {\n            const objData = args[0];\n\n            for (const key in objData)\n            {\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\n            }\n         }\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\n         {\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\n            {\n               const key = keysArray[cntr];\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\n            }\n         }\n\n         // Set initial data for transform values that are often null by default.\n         TJSPositionDataUtil.setNumericDefaults(initial);\n         TJSPositionDataUtil.setNumericDefaults(destination);\n\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n         const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n         animationData.el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n         ConvertStringData.process(destination, data, animationData.el);\n\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\n         if (animationData.finished)\n         {\n            animationData.cancelled = false;\n            animationData.finished = false;\n            animationData.active = true;\n            animationData.current = 0;\n\n            AnimationManager.add(animationData);\n         }\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n         {\n            const now = globalThis.performance.now();\n\n            animationData.cancelled = false;\n            animationData.current = 0;\n\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n            // precise delayed time.\n            animationData.start = now + (AnimationManager.timeNow - now);\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      quickToCB.options = (optionsCB) => // eslint-disable-line no-shadow\n      {\n         let { duration, ease } = optionsCB;\n\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n         }\n\n         ease = getEasingFunc(ease, AnimationAPI.#getEaseOptions);\n\n         if (ease !== void 0 && typeof ease !== 'function')\n         {\n            throw new TypeError(\n             `AnimationAPI.quickTo.options error: 'ease' is not a function or valid Svelte easing function name.`);\n         }\n\n         // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n         if (duration >= 0) { animationData.duration = duration * 1000; }\n         if (ease) { animationData.ease = ease; }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * Provides a implementation for a TJSPosition animation for a group of TJSPosition instances.\n *\n * @implements {import('#runtime/util/animate').BasicAnimation}\n */\nclass AnimationGroupControl\n{\n   /** @type {Set<import('./AnimationControl').AnimationControl>} */\n   #animationControls;\n\n   /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>} */\n   #finishedPromise;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationGroupControl}\n    */\n   static #voidControl = new AnimationGroupControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n    *\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {Set<import('./AnimationControl').AnimationControl>} animationControls - An array of AnimationControl\n    *        instances.\n    */\n   constructor(animationControls)\n   {\n      this.#animationControls = animationControls;\n   }\n\n   /**\n    * Get a promise that resolves when all animations are finished.\n    *\n    * @returns {Promise<import('#runtime/util/animate').BasicAnimationState>} Finished Promise for all animations.\n    */\n   get finished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (!CrossWindow.isPromise(this.#finishedPromise))\n      {\n         if (animationControls === null || animationControls === void 0 || animationControls.size === 0)\n         {\n            this.#finishedPromise = /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>} */\n             Promise.resolve({ cancelled: false });\n         }\n         else\n         {\n            /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>[]} */\n            const promises = [];\n\n            for (const animationControl of animationControls) { promises.push(animationControl.finished); }\n\n            this.#finishedPromise = Promise.allSettled(promises).then((results) => {\n               // Check if any promises were rejected or resolved with `cancelled: true`.\n               const anyCancelled = results.some((result) => result.status === 'rejected' ||\n                (result.status === 'fulfilled' && result.value.cancelled));\n\n               // Return a single BasicAnimationState based on the aggregation of individual results.\n               return { cancelled: anyCancelled };\n            });\n         }\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether there are active animation instances for this group.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n    * determine if all animations in the group are finished.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isActive()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return false; }\n\n      for (const animationControl of animationControls)\n      {\n         if (animationControl.isActive) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns whether all animations in the group are finished.\n    *\n    * @returns {boolean} Are all animation instances finished.\n    */\n   get isFinished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return true; }\n\n      for (const animationControl of animationControls)\n      {\n         if (!animationControl.isFinished) { return false; }\n      }\n\n      return true;\n   }\n\n   /**\n    * Cancels the all animations.\n    */\n   cancel()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return; }\n\n      for (const animationControl of animationControls) { animationControl.cancel(); }\n   }\n}\n\n/**\n * Provides a public API for grouping multiple {@link TJSPosition} animations together with the\n * AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the TJSPosition static / group Animation API `instanceof`\n * checks are not done against TJSPosition. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#getPosition}.\n *\n * @see AnimationAPI\n *\n * @implements {import('./types').AnimationGroupAPI}\n */\nclass AnimationGroupAPI\n{\n   /**\n    * Returns the TJSPosition instance for the possible given positionable by checking the instance by checking for\n    * AnimationAPI.\n    *\n    * @param {import('../').TJSPosition | import('../types').TJSPositionTypes.Positionable} positionable - Possible\n    *        position group entry.\n    *\n    * @returns {import('../').TJSPosition | null} Returns actual TJSPosition instance.\n    */\n   static #getPosition(positionable)\n   {\n      if (!isObject(positionable)) { return null; }\n\n      if (positionable.animate instanceof AnimationAPI) { return positionable; }\n\n      if (positionable.position?.animate instanceof AnimationAPI) { return positionable.position; }\n\n      return null;\n   }\n\n   /**\n    * Cancels any animation for given PositionGroup data.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - The position group to cancel.\n    */\n   static cancel(positionGroup)\n   {\n      if (isIterable(positionGroup))\n      {\n         let index = -1;\n\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            AnimationManager.cancel(actualPosition);\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found.`);\n            return;\n         }\n\n         AnimationManager.cancel(actualPosition);\n      }\n   }\n\n   /**\n    * Cancels all TJSPosition animation.\n    */\n   static cancelAll() { AnimationManager.cancelAll(); }\n\n   /**\n    * Gets all animation controls for the given position group data.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @returns {{\n    *    position: import('../').TJSPosition,\n    *    entry: import('../types').TJSPositionTypes.Positionable | undefined,\n    *    controls: import('#runtime/util/animate').BasicAnimation[]\n    * }[]} Results array.\n    */\n   static getScheduled(positionGroup)\n   {\n      const results = [];\n\n      if (isIterable(positionGroup))\n      {\n         let index = -1;\n\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found at index: ${\n                index}.`);\n\n               continue;\n            }\n\n            const controls = AnimationManager.getScheduled(actualPosition);\n\n            results.push({ position: actualPosition, entry: actualPosition !== entry ? entry : void 0, controls });\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found.`);\n            return results;\n         }\n\n         const controls = AnimationManager.getScheduled(actualPosition);\n\n         results.push({\n            position: actualPosition,\n            entry: actualPosition !== positionGroup ? positionGroup : void 0,\n            controls\n         });\n      }\n\n      return results;\n   }\n\n   /**\n    * Provides a type guard to test in the given key is an {@link AnimationAPI.AnimationKey}.\n    *\n    * @param {unknown}  key - A key value to test.\n    *\n    * @returns {key is import('./types').AnimationAPI.AnimationKey} Whether the given key is an animation key.\n    */\n   static isAnimationKey(key)\n   {\n      return TJSPositionDataUtil.isAnimationKey(key);\n   }\n\n   /**\n    * Returns the status _for the entire position group_ specified if all position instances of the group are scheduled.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {import('./types').AnimationAPI.ScheduleOptions} [options] - Options.\n    *\n    * @returns {boolean} True if all are scheduled / false if just one position instance in the group is not scheduled.\n    */\n   static isScheduled(positionGroup, options)\n   {\n      if (isIterable(positionGroup))\n      {\n         let index = -1;\n\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found at index: ${index}.`);\n\n               continue;\n            }\n\n            if (!AnimationManager.isScheduled(actualPosition, options)) { return false; }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found.`);\n            return false;\n         }\n\n         if (!AnimationManager.isScheduled(actualPosition, options)) { return false; }\n      }\n\n      return true;\n   }\n\n   /**\n    * Provides the `from` animation tween for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} fromData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.TweenOptions |\n    *    import('./types').AnimationAPI.GroupTweenOptionsCallback\n    * )} [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n    *        options for each instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation} Basic animation control.\n    */\n   static from(positionGroup, fromData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n      }\n\n      /** @type {Set<import('./AnimationControl').AnimationControl>} */\n      const animationControls = new Set();\n\n      /** @type {import('./types-local').AnimationCleanupFunction} */\n      const cleanupFn = (data) => animationControls.delete(data.control);\n\n      let index = -1;\n\n      /** @type {import('./types').AnimationAPI.GroupCallbackOptions} */\n      let callbackOptions;\n\n      const hasDataCallback = typeof fromData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualOptions = options;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n            }\n\n            if (hasDataCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: 'fromData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            const animationControl = AnimationScheduler.from(actualPosition, actualFromData, actualOptions, cleanupFn);\n            if (animationControl) { animationControls.add(animationControl); }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n         }\n\n         if (hasDataCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualFromData === null || actualFromData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: 'fromData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         const animationControl = AnimationScheduler.from(actualPosition, actualFromData, actualOptions, cleanupFn);\n         if (animationControl) { animationControls.add(animationControl); }\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `fromTo` animation tween for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} fromData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} toData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.TweenOptions |\n    *    import('./types').AnimationAPI.GroupTweenOptionsCallback\n    * )} [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n    *        options for each instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation} Basic animation control.\n    */\n   static fromTo(positionGroup, fromData, toData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n      }\n\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n      }\n\n      /** @type {Set<import('./AnimationControl').AnimationControl>} */\n      const animationControls = new Set();\n\n      /** @type {import('./types-local').AnimationCleanupFunction} */\n      const cleanupFn = (data) => animationControls.delete(data.control);\n\n      let index = -1;\n\n      /** @type {import('./types').AnimationAPI.GroupCallbackOptions} */\n      let callbackOptions;\n\n      const hasFromCallback = typeof fromData === 'function';\n      const hasToCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n            }\n\n            if (hasFromCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasToCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            const animationControl = AnimationScheduler.fromTo(actualPosition, actualFromData, actualToData,\n             actualOptions, cleanupFn);\n\n            if (animationControl) { animationControls.add(animationControl); }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n         }\n\n         if (hasFromCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualFromData === null || actualFromData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: 'fromData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasToCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualToData === null || actualToData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: 'toData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         const animationControl = AnimationScheduler.fromTo(actualPosition, actualFromData, actualToData,\n          actualOptions, cleanupFn);\n\n         if (animationControl) { animationControls.add(animationControl); }\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} toData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.TweenOptions |\n    *    import('./types').AnimationAPI.GroupTweenOptionsCallback\n    * )} [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n    *        options for each instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation} Basic animation control.\n    */\n   static to(positionGroup, toData, options)\n   {\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n      }\n\n      /** @type {Set<import('./AnimationControl').AnimationControl>} */\n      const animationControls = new Set();\n\n      /** @type {import('./types-local').AnimationCleanupFunction} */\n      const cleanupFn = (data) => animationControls.delete(data.control);\n\n      let index = -1;\n\n      /** @type {import('./types').AnimationAPI.GroupCallbackOptions} */\n      let callbackOptions;\n\n      const hasDataCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\n\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n            }\n\n            if (hasDataCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: 'toData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            const animationControl = AnimationScheduler.to(actualPosition, actualToData, actualOptions, cleanupFn);\n            if (animationControl) { animationControls.add(animationControl); }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n         }\n\n         if (hasDataCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualToData === null || actualToData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: 'toData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         const animationControl = AnimationScheduler.to(actualPosition, actualToData, actualOptions, cleanupFn);\n         if (animationControl) { animationControls.add(animationControl); }\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `quickTo` animation tweening function for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {Iterable<import('./types').AnimationAPI.AnimationKey>}  keys - Animation keys to target.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.QuickTweenOptions |\n    *    import('./types').AnimationAPI.GroupQuickTweenOptionsCallback\n    * )} [options] - Quick tween options assigned to all positionable instances or a callback function invoked for\n    *        unique options for each instance.\n    *\n    * @returns {import('./types').AnimationAPI.GroupQuickToCallback | undefined} quick-to tween function.\n    */\n   static quickTo(positionGroup, keys, options)\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./types').AnimationAPI.QuickToCallback[]}\n       */\n      const quickToCallbacks = [];\n\n      let index = -1;\n\n      const hasOptionCallback = typeof options === 'function';\n\n      const callbackOptions = { index, position: void 0, entry: void 0 };\n\n      let actualOptions = isObject(options) ? options : void 0;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            callbackOptions.index = index;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found.`);\n            return;\n         }\n\n         callbackOptions.index = 0;\n         callbackOptions.position = actualPosition;\n         callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.quickTo error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         if (typeof args[0] === 'function')\n         {\n            const dataCallback = args[0];\n\n            index = -1;\n            let cntr = 0;\n\n            if (isIterable(positionGroup))\n            {\n               for (const entry of positionGroup)\n               {\n                  index++;\n\n                  const actualPosition = this.#getPosition(entry);\n\n                  if (!actualPosition) { continue; }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = actualPosition;\n                  callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n\n                  const toData = dataCallback(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (toData === null || toData === void 0) { continue; }\n\n                  /** @type {boolean} */\n                  const toDataIterable = isIterable(toData);\n\n                  if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n                  {\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${\n                      index}) failed to return a finite number, iterable list, or object.`);\n                  }\n\n                  if (toDataIterable)\n                  {\n                     quickToCallbacks[cntr++](...toData);\n                  }\n                  else\n                  {\n                     quickToCallbacks[cntr++](toData);\n                  }\n               }\n            }\n            else\n            {\n               const actualPosition = this.#getPosition(positionGroup);\n\n               if (!actualPosition) { return; }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n\n               const toData = dataCallback(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (toData === null || toData === void 0) { return; }\n\n               const toDataIterable = isIterable(toData);\n\n               if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${\n                   index}) failed to return a finite number, iterable list, or object.`);\n               }\n\n               if (toDataIterable)\n               {\n                  quickToCallbacks[cntr++](...toData);\n               }\n               else\n               {\n                  quickToCallbacks[cntr++](toData);\n               }\n            }\n         }\n         else\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\n            {\n               quickToCallbacks[cntr](...args);\n            }\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {import('./types').AnimationAPI.QuickTweenOptions}   [options] - Optional parameters.\n       *\n       * @returns {import('./types').AnimationAPI.QuickToCallback} The quickTo callback.\n       */\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\n      {\n         if (options !== void 0 && !isObject(options))\n         {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object.`);\n         }\n\n         // Set options object for each quickTo callback.\n         if (isObject(options))\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\n         }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\nObject.seal(AnimationGroupAPI);\n\n/**\n * @implements {import('./types').PositionStateAPI}\n */\nclass PositionStateAPI\n{\n   /** @type {import('../data/types').Data.TJSPositionData} */\n   #data;\n\n   /**\n    * @type {Map<string, import('../data/types').Data.TJSPositionDataExtra>}\n    */\n   #dataSaved = new Map();\n\n   /** @type {import('../').TJSPosition} */\n   #position;\n\n   /** @type {import('../transform').TJSTransforms} */\n   #transforms;\n\n   constructor(position, data, transforms)\n   {\n      this.#position = position;\n      this.#data = data;\n      this.#transforms = transforms;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Clears all saved position data except any default state.\n    */\n   clear()\n   {\n      for (const key of this.#dataSaved.keys())\n      {\n         if (key !== '#defaultData') { this.#dataSaved.delete(key); }\n      }\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data name.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra | undefined} Any saved position data.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - get error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Returns any associated default position data.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra | undefined} Any saved default position data.\n    */\n   getDefault()\n   {\n      return this.#dataSaved.get('#defaultData');\n   }\n\n   /**\n    * @returns {IterableIterator<string>} The saved position data names / keys.\n    */\n   keys()\n   {\n      return this.#dataSaved.keys();\n   }\n\n   /**\n    * Removes and returns any position data by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra | undefined} Any saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Resets position instance to default data and invokes set.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [options.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      const defaultData = this.#dataSaved.get('#defaultData');\n\n      // Quit early if there is no saved default data.\n      if (!isObject(defaultData)) { return false; }\n\n      // Cancel all animations for TJSPosition if there are currently any scheduled.\n      if (this.#position.animate.isScheduled) { this.#position.animate.cancel(); }\n\n      const zIndex = this.#position.zIndex;\n\n      const data = Object.assign({}, defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Reset the transform data.\n      this.#transforms.reset(data);\n\n      // TODO: REFACTOR FOR APPLICATION DIRECT ACCESS.\n\n      // If current minimized invoke `maximize`.\n      if (this.#position.parent?.reactive?.minimized)\n      {\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\n      }\n\n      // Note next clock tick scheduling.\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\n\n      return true;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available to control\n    * whether the restore action occurs silently (no store / inline styles updates), animates to the stored data, or\n    * simply sets the stored data. Restoring via {@link AnimationAPI.to} allows specification of the duration and\n    * easing along with configuring a Promise to be returned if awaiting the end of the animation.\n    *\n    * @param {object}            options - Parameters\n    *\n    * @param {string}            options.name - Saved data set name.\n    *\n    * @param {boolean}           [options.remove=false] - Deletes data set.\n    *\n    * @param {Iterable<string>}  [options.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [options.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [options.async=false] - If animating return a Promise that resolves with any saved\n    *        data.\n    *\n    * @param {boolean}           [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('#runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function name or\n    *        function.\n    *\n    * @returns {(\n    *    import('../data/types').Data.TJSPositionDataExtra |\n    *    Promise<import('../data/types').Data.TJSPositionDataExtra | undefined> |\n    *    undefined\n    * )} Any saved position data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\n    ease = 'linear' })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.#position.transformOrigin)\n            {\n               this.#position.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.#position.animate.to(data, { duration, ease }).finished.then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.#position.animate.to(data, { duration, ease });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.#position.set(data);\n         }\n      }\n\n      // Saved data potentially not found, but must still return a Promise when async is true.\n      return async ? Promise.resolve(dataSaved) : dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state. Simply include\n    * extra properties in `options` to save extra data.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {import('../types').TJSPositionTypes.OptionsGet} [optionsGet] - Additional options for\n    *        {@link TJSPosition.get} when serializing position state. By default, `nullable` values are included.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra} Current position data plus any extra data stored.\n    */\n   save({ name, ...extra }, optionsGet)\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - save error: 'name' is not a string.`); }\n\n      const data = this.#position.get(extra, optionsGet);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Directly sets a saved position state. Simply include extra properties in `options` to set extra data.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    */\n   set({ name, ...data })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - set error: 'name' is not a string.`); }\n\n      this.#dataSaved.set(name, data);\n   }\n}\n\n/**\n * Provides a base {@link System.SystemBase} implementation.\n *\n * @implements {import('svelte/store').Readable}\n *\n * @implements {import('./types').System.SystemBase}\n */\nclass SystemBase\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<SystemBase>[]}\n    */\n   #subscribers = [];\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   /**\n    * @param {object}      [options] - Initial options.\n    *\n    * @param {boolean}     [options.constrain=true] - Initial constrained state.\n    *\n    * @param {HTMLElement} [options.element] - Target element.\n    *\n    * @param {boolean}     [options.enabled=true] - Enabled state.\n    *\n    * @param {boolean}     [options.lock=false] - Lock parameters from being set.\n    *\n    * @param {number}      [options.width] - Manual width.\n    *\n    * @param {number}      [options.height] - Manual height.\n    */\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.constrain = constrain;\n      this.element = element;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   /**\n    * @returns {boolean} The current constrain state.\n    */\n   get constrain() { return this.#constrain; }\n\n   /**\n    * @returns {HTMLElement | undefined | null} Target element.\n    */\n   get element() { return this.#element; }\n\n   /**\n    * @returns {boolean} The current enabled state.\n    */\n   get enabled() { return this.#enabled; }\n\n   /**\n    * @returns {number} Get manual height.\n    */\n   get height() { return this.#height; }\n\n   /**\n    * @return {boolean} Get locked state.\n    */\n   get locked() { return this.#lock; }\n\n   /**\n    * @returns {number} Get manual width.\n    */\n   get width() { return this.#width; }\n\n   /**\n    * @param {boolean}  constrain - New constrain state.\n    */\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {HTMLElement | undefined | null} element - Set target element.\n    */\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || A11yHelper.isFocusTarget(element))\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {boolean}  enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   height - Set manual height.\n    */\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   width - Set manual width.\n    */\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Set manual width & height.\n    *\n    * @param {number}   width - New manual width.\n    *\n    * @param {number}   height - New manual height.\n    */\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<SystemBase>} handler - Callback\n    *        function that is invoked on update / changes. Receives a copy of the TJSPositionData.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscribers.push(handler); // add handler to the array of subscribers\n\n      handler(this);                   // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscribers.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscribers.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers on changes.\n    */\n   #updateSubscribers()\n   {\n      for (let cntr = 0; cntr < this.#subscribers.length; cntr++) { this.#subscribers[cntr](this); }\n   }\n}\n\n/**\n * Provides a {@link System.Initial.InitialSystem} implementation to center an element being positioned.\n *\n * @implements {import('../types').System.Initial.InitialSystem}\n */\nclass Centered extends SystemBase\n{\n   /**\n    * Get the left constraint based on any manual target values or the browser inner width.\n    *\n    * @param {number}   width - Target width.\n    *\n    * @returns {number} Calculated left constraint.\n    */\n   getLeft(width)\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   /**\n    * Get the top constraint based on any manual target values or the browser inner height.\n    *\n    * @param {number}   height - Target height.\n    *\n    * @returns {number} Calculated top constraint.\n    */\n   getTop(height)\n   {\n      const boundsHeight = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n\n/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is\n * the only required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the {@link TJSPosition.validators} getter in the main\n * TJSPosition instance.\n * ```\n * const position = new TJSPosition();\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n *\n * @implements {import('./types').ValidatorAPI}\n */\nclass AdapterValidators\n{\n   /** @type {boolean} */\n   #enabled = true;\n\n   /**\n    * @type {import('./types').ValidatorAPI.ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {Map<import('./types').ValidatorAPI.ValidationFn, import('svelte/store').Unsubscriber>}\n    */\n   #mapUnsubscribe = new Map();\n\n   #updateFn;\n\n   /**\n    * @returns {[AdapterValidators, import('./types').ValidatorAPI.ValidatorData[]]} Returns this and internal storage\n    * for validator adapter.\n    */\n   static create(updateFn)\n   {\n      const validatorAPI = new AdapterValidators();\n\n      validatorAPI.#updateFn = updateFn;\n\n      return [validatorAPI, validatorAPI.#validatorData];\n   }\n\n   /**\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {boolean} Returns the enabled state.\n    */\n   get enabled() { return this.#enabled; }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * @param {boolean}  enabled - Sets enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @yields {import('./types').ValidatorAPI.ValidatorData}\n    * @returns {IterableIterator<import('./types').ValidatorAPI.ValidatorData>} iterator.\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * Adds the given validators.\n    *\n    * @param {...(\n    *    import('./types').ValidatorAPI.ValidatorFn |\n    *    import('./types').ValidatorAPI.ValidatorData\n    * )}   validators - Validators to add.\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      let subscribeCount = 0;\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if ((validatorType !== 'function' && validatorType !== 'object') || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         /** @type {import('./types').ValidatorAPI.ValidatorData} */\n         let data = void 0;\n\n         /** @type {(...args: any[]) => import('svelte/store').Unsubscriber} */\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validate: validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validate !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validate' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validate: validator.validate.bind(validator),\n                  weight: validator.weight || 1\n               };\n\n               subscribeFn = validator.validate.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            const unsubscribe = subscribeFn.call(validator, this.#updateFn);\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Validator has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validate))\n            {\n               throw new Error(\n                'AdapterValidator error: Validator added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validate, unsubscribe);\n            subscribeCount++;\n         }\n      }\n\n      // Validators with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an update manually.\n      if (subscribeCount < validators.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Clears / removes all validators.\n    */\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      this.#updateFn();\n   }\n\n   /**\n    * Removes one or more given validators.\n    *\n    * @param {...(\n    *    import('./types').ValidatorAPI.ValidatorFn |\n    *    import('./types').ValidatorAPI.ValidatorData\n    * )}   validators - Validators to remove.\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : isObject(data) ? data.validate : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validate === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Invoke update as a validator was removed.\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {import('./types').ValidatorAPI.RemoveByCallback} callback - Callback function to evaluate each validator\n    *        entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validate);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Removes any validators with matching IDs.\n    *\n    * @param {...any}   ids - IDs to remove.\n    */\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validate);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n}\n\nclass TransformBounds extends SystemBase\n{\n   static #TRANSFORM_DATA = new TJSTransformData();\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {import('./types').ValidatorAPI.ValidationData}   valData - The associated validation data for position\n    *        updates.\n    *\n    * @returns {import('../../data/types').Data.TJSPositionData} Potentially adjusted position data.\n    */\n   validate(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\n\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n      // true cap width bounds.\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = clamp(valData.width, valData.minWidth, maxW);\n      }\n\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n      // is true cap height bounds.\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = clamp(valData.height, valData.minHeight, maxH);\n      }\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      const data = valData.transforms.getData(valData.position, TransformBounds.#TRANSFORM_DATA, valData);\n\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n      // left oriented, so perform those checks last.\n\n      const initialX = data.boundingRect.x;\n      const initialY = data.boundingRect.y;\n\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\n      {\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\n      }\n\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\n      {\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\n      }\n\n      if (data.boundingRect.top - valData.marginTop < 0)\n      {\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\n      }\n\n      if (data.boundingRect.left - valData.marginLeft < 0)\n      {\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\n      }\n\n      valData.position.left -= initialX - data.boundingRect.x;\n      valData.position.top -= initialY - data.boundingRect.y;\n\n      return valData.position;\n   }\n}\n\n/**\n * Tracks changes to positional data during {@link TJSPosition.set} updates to minimize changes to the element\n * style in {@link UpdateElementManager}.\n */\nclass PositionChangeSet\n{\n   constructor()\n   {\n      this.left = false;\n      this.top = false;\n      this.width = false;\n      this.height = false;\n      this.maxHeight = false;\n      this.maxWidth = false;\n      this.minHeight = false;\n      this.minWidth = false;\n      this.zIndex = false;\n      this.transform = false;\n      this.transformOrigin = false;\n   }\n\n   hasChange()\n   {\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n   }\n\n   set(value)\n   {\n      this.left = value;\n      this.top = value;\n      this.width = value;\n      this.height = value;\n      this.maxHeight = value;\n      this.maxWidth = value;\n      this.minHeight = value;\n      this.minWidth = value;\n      this.zIndex = value;\n      this.transform = value;\n      this.transformOrigin = value;\n   }\n}\n\n/**\n * Encapsulates internal data from a TJSPosition instance to be manipulated by {@link UpdateElementManager}.\n */\nclass UpdateElementData\n{\n   constructor()\n   {\n      /**\n       * Stores the private data from TJSPosition.\n       *\n       * @type {TJSPositionData}\n       */\n      this.data = void 0;\n\n      /**\n       * Provides a copy of local data sent to subscribers.\n       *\n       * @type {TJSPositionData}\n       */\n      this.dataSubscribers = Object.seal(new TJSPositionData());\n\n      /**\n       * Stores the current dimension data used for the readable `dimension` store.\n       *\n       * @type {{width: number | 'auto' | 'inherit', height: number | 'auto' | 'inherit'}}\n       */\n      this.dimensionData = Object.seal({ width: 0, height: 0 });\n\n      /**\n       * @type {import('./').PositionChangeSet}\n       */\n      this.changeSet = void 0;\n\n      /**\n       * @type {import('../types-local').OptionsInternal}\n       */\n      this.options = void 0;\n\n      /**\n       * Stores if this TJSPosition / update data is queued for update.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      /**\n       * @type {import('../util').TJSPositionStyleCache}\n       */\n      this.styleCache = void 0;\n\n      /**\n       * @type {import('../transform').TJSTransforms}\n       */\n      this.transforms = void 0;\n\n      /**\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\n       * subscribers to the store or calculateTransform options is true.\n       *\n       * @type {TJSTransformData}\n       */\n      this.transformData = new TJSTransformData();\n\n      /**\n       * @type {import('svelte/store').Subscriber<import('../data/types').Data.TJSPositionData>[]}\n       */\n      this.subscribers = void 0;\n\n      /**\n       * @type {import('svelte/store').Writable<{width: (number|'auto'), height: (number|'auto')}>}\n       */\n      this.storeDimension = writable(this.dimensionData);\n\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n\n      /**\n       * @type {import('svelte/store').Writable<import('../transform/types').TransformAPI.TransformData>}\n       */\n      this.storeTransform = writable(this.transformData, () =>\n      {\n         this.options.transformSubscribed = true;\n         return () => this.options.transformSubscribed = false;\n      });\n\n      /**\n       * Stores the queued state for update element processing.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n */\nclass UpdateElementManager\n{\n   /**\n    * Stores the active list of all TJSPosition instances currently updating. The list entries are recycled between\n    * updates.\n    *\n    * @type {[HTMLElement, import('./').UpdateElementData][]}\n    */\n   static list = [];\n\n   /**\n    * Tracks the current position in the list.\n    *\n    * @type {number}\n    */\n   static listCntr = 0;\n\n   static updatePromise;\n\n   /**\n    * Potentially adds the given element and internal updateData instance to the list.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./').UpdateElementData} updateData - An UpdateElementData instance.\n    *\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\n    */\n   static add(el, updateData)\n   {\n      if (this.listCntr < this.list.length)\n      {\n         const entry = this.list[this.listCntr];\n         entry[0] = el;\n         entry[1] = updateData;\n      }\n      else\n      {\n         this.list.push([el, updateData]);\n      }\n\n      this.listCntr++;\n      updateData.queued = true;\n\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\n\n      return this.updatePromise;\n   }\n\n   /**\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n    *\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\n    */\n   static async wait()\n   {\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.updatePromise = void 0;\n\n      for (let cntr = this.listCntr; --cntr >= 0;)\n      {\n         // Obtain data for entry.\n         const entry = this.list[cntr];\n         const el = entry[0];\n         const updateData = entry[1];\n\n         // Clear entry data.\n         entry[0] = void 0;\n         entry[1] = void 0;\n\n         // Reset queued state.\n         updateData.queued = false;\n\n         // Early out if the element is no longer connected to the DOM / shadow root.\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n         if (!el.isConnected) { continue; }\n\n         if (updateData.options.ortho)\n         {\n            UpdateElementManager.#updateElementOrtho(el, updateData);\n         }\n         else\n         {\n            UpdateElementManager.#updateElement(el, updateData);\n         }\n\n         // If calculate transform options is enabled then update the transform data and set the readable store.\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n         {\n            UpdateElementManager.#updateTransform(el, updateData);\n         }\n\n         // Update all subscribers with changed data.\n         this.updateSubscribers(updateData);\n      }\n\n      this.listCntr = 0;\n\n      return currentTime;\n   }\n\n   /**\n    * Potentially immediately updates the given element.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./').UpdateElementData} updateData - An UpdateElementData instance.\n    */\n   static immediate(el, updateData)\n   {\n      // Early out if the element is no longer connected to the DOM / shadow root.\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n      if (!el.isConnected) { return; }\n\n      if (updateData.options.ortho)\n      {\n         UpdateElementManager.#updateElementOrtho(el, updateData);\n      }\n      else\n      {\n         UpdateElementManager.#updateElement(el, updateData);\n      }\n\n      // If calculate transform options is enabled then update the transform data and set the readable store.\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n      {\n         UpdateElementManager.#updateTransform(el, updateData);\n      }\n\n      // Update all subscribers with changed data.\n      this.updateSubscribers(updateData);\n   }\n\n   /**\n    * @param {import('./').UpdateElementData} updateData - Data change set.\n    */\n   static updateSubscribers(updateData)\n   {\n      const data = updateData.data;\n      const changeSet = updateData.changeSet;\n\n      if (!changeSet.hasChange()) { return; }\n\n      // Make a copy of the data.\n      const output = TJSPositionDataUtil.copyData(data, updateData.dataSubscribers);\n\n      const subscribers = updateData.subscribers;\n\n      // Early out if there are no subscribers.\n      if (subscribers.length > 0)\n      {\n         for (let cntr = 0; cntr < subscribers.length; cntr++) { subscribers[cntr](output); }\n      }\n\n      // Update dimension data if width / height has changed.\n      if (changeSet.width || changeSet.height)\n      {\n         updateData.dimensionData.width = data.width;\n         updateData.dimensionData.height = data.height;\n         updateData.storeDimension.set(updateData.dimensionData);\n      }\n\n      changeSet.set(false);\n   }\n\n   // Internal Implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Temporary data for validation.\n    *\n    * @type {{width, marginTop, height, marginLeft}}\n    */\n   static #validationData = Object.seal({\n      height: void 0,\n      width: void 0,\n      marginLeft: void 0,\n      marginTop: void 0\n   });\n\n   /**\n    * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to\n    * await on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n    * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n    * element are in sync with the browser and potentially in the future be further throttled.\n    *\n    * @param {HTMLElement} el - The target HTMLElement.\n    *\n    * @param {import('./').UpdateElementData} updateData - Update data.\n    */\n   static #updateElement(el, updateData)\n   {\n      const changeSet = updateData.changeSet;\n      const data = updateData.data;\n\n      if (changeSet.left)\n      {\n         el.style.left = `${data.left}px`;\n      }\n\n      if (changeSet.top)\n      {\n         el.style.top = `${data.top}px`;\n      }\n\n      if (changeSet.zIndex)\n      {\n         el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n      }\n\n      if (changeSet.width)\n      {\n         el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n      }\n\n      if (changeSet.height)\n      {\n         el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n      }\n\n      if (changeSet.transformOrigin)\n      {\n         el.style.transformOrigin = data.transformOrigin;\n      }\n\n      // Update all transforms in order added to transforms object.\n      if (changeSet.transform)\n      {\n         el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\n      }\n   }\n\n   /**\n    * Decouples updates to any parent target HTMLElement inline styles. Invoke\n    * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n    * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n    * immediately while updates to the element are in sync with the browser and potentially in the future be further\n    * throttled.\n    *\n    * @param {HTMLElement} el - The target HTMLElement.\n    *\n    * @param {import('./').UpdateElementData} updateData - Update data.\n    */\n   static #updateElementOrtho(el, updateData)\n   {\n      const changeSet = updateData.changeSet;\n      const data = updateData.data;\n\n      if (changeSet.zIndex)\n      {\n         el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n      }\n\n      if (changeSet.width)\n      {\n         el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n      }\n\n      if (changeSet.height)\n      {\n         el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n      }\n\n      if (changeSet.transformOrigin)\n      {\n         el.style.transformOrigin = data.transformOrigin;\n      }\n\n      // Update all transforms in order added to transforms object.\n      if (changeSet.left || changeSet.top || changeSet.transform)\n      {\n         el.style.transform = updateData.transforms.getCSSOrtho(data);\n      }\n   }\n\n   /**\n    * Updates the applied transform data and sets the readble `transform` store.\n    *\n    * @param {HTMLElement} el - The target HTMLElement.\n    *\n    * @param {import('./').UpdateElementData} updateData - Update element data.\n    */\n   static #updateTransform(el, updateData)\n   {\n      const validationData = this.#validationData;\n\n      validationData.height = updateData.data.height !== 'auto' && updateData.data.height !== 'inherit' ?\n       updateData.data.height : updateData.styleCache.offsetHeight;\n\n      validationData.width = updateData.data.width !== 'auto' && updateData.data.height !== 'inherit' ?\n       updateData.data.width : updateData.styleCache.offsetWidth;\n\n      validationData.marginLeft = updateData.styleCache.marginLeft;\n\n      validationData.marginTop = updateData.styleCache.marginTop;\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      updateData.transforms.getData(updateData.data, updateData.transformData, validationData);\n\n      updateData.storeTransform.set(updateData.transformData);\n   }\n}\n\n/**\n * Caches computed styles of a {@link TJSPosition} target element.\n */\nclass TJSPositionStyleCache\n{\n   constructor()\n   {\n      /** @type {HTMLElement|undefined} */\n      this.el = void 0;\n\n      /** @type {CSSStyleDeclaration} */\n      this.computed = void 0;\n\n      /** @type {number|undefined} */\n      this.marginLeft = void 0;\n\n      /** @type {number|undefined} */\n      this.marginTop = void 0;\n\n      /** @type {number|undefined} */\n      this.maxHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.maxWidth = void 0;\n\n      /** @type {number|undefined} */\n      this.minHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.minWidth = void 0;\n\n      /** @type {boolean} */\n      this.hasWillChange = false;\n\n      /**\n       * @type {import('#runtime/util/dom/observer').ResizeObserverData.ResizeObject}\n       */\n      this.resizeObserved = Object.seal({\n         contentHeight: void 0,\n         contentWidth: void 0,\n         offsetHeight: void 0,\n         offsetWidth: void 0\n      });\n\n      /**\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n       *\n       * @type {(import('svelte/store').Writable<import('#runtime/util/dom/observer').ResizeObserverData.ResizeObject>)}\n       */\n      const storeResizeObserved = writable(this.resizeObserved);\n\n      this.stores = {\n         element: writable(this.el),\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n         resizeObserved: storeResizeObserved,\n         resizeObservable: writable(false),\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n      };\n   }\n\n   /**\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetHeight()\n   {\n      if (A11yHelper.isFocusTarget(this.el))\n      {\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n      }\n\n      throw new Error(`TJSPositionStyleCache - get offsetHeight error: no element assigned.`);\n   }\n\n   /**\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetWidth()\n   {\n      if (A11yHelper.isFocusTarget(this.el))\n      {\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n      }\n\n      throw new Error(`TJSPositionStyleCache - get offsetWidth error: no element assigned.`);\n   }\n\n   /**\n    * @param {HTMLElement} el -\n    *\n    * @returns {boolean} Does element match cached element.\n    */\n   hasData(el) { return this.el === el; }\n\n   /**\n    * Resets the style cache.\n    */\n   reset()\n   {\n      // Remove will-change inline style from previous element if it is still connected.\n      if (A11yHelper.isFocusTarget(this.el) && this.el.isConnected && !this.hasWillChange)\n      {\n         this.el.style.willChange = null;\n      }\n\n      this.el = void 0;\n      this.computed = void 0;\n      this.marginLeft = void 0;\n      this.marginTop = void 0;\n      this.maxHeight = void 0;\n      this.maxWidth = void 0;\n      this.minHeight = void 0;\n      this.minWidth = void 0;\n\n      this.hasWillChange = false;\n\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n      this.resizeObserved.contentHeight = void 0;\n      this.resizeObserved.contentWidth = void 0;\n      this.resizeObserved.offsetHeight = void 0;\n      this.resizeObserved.offsetWidth = void 0;\n\n      // Reset the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(void 0);\n   }\n\n   /**\n    * Updates the style cache with new data from the given element.\n    *\n    * @param {HTMLElement} el - An HTML element.\n    */\n   update(el)\n   {\n      this.el = el;\n\n      this.computed = globalThis.getComputedStyle(el);\n\n      this.marginLeft = StyleParse.pixels(el.style.marginLeft) ?? StyleParse.pixels(this.computed.marginLeft);\n      this.marginTop = StyleParse.pixels(el.style.marginTop) ?? StyleParse.pixels(this.computed.marginTop);\n      this.maxHeight = StyleParse.pixels(el.style.maxHeight) ?? StyleParse.pixels(this.computed.maxHeight);\n      this.maxWidth = StyleParse.pixels(el.style.maxWidth) ?? StyleParse.pixels(this.computed.maxWidth);\n\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\n      this.minHeight = StyleParse.pixels(el.style.minHeight) ?? StyleParse.pixels(this.computed.minHeight);\n      this.minWidth = StyleParse.pixels(el.style.minWidth) ?? StyleParse.pixels(this.computed.minWidth);\n\n      // Tracks if there already is a will-change property on the inline or computed styles.\n      const willChange = el.style.willChange !== '' ? el.style.willChange : this.computed.willChange;\n\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\n\n      // Update the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(el);\n   }\n}\n\n/**\n * Provides an advanced compound store for positioning elements dynamically including an optimized pipeline for updating\n * an associated element. Essential tweening / animation is supported in addition to a validation API to constrain\n * positional updates.\n *\n * @implements {import('./types').TJSPositionTypes.TJSPositionWritable}\n */\nclass TJSPosition\n{\n   /**\n    * Public API for {@link TJSPosition.Initial}.\n    *\n    * @type {Readonly<import('./types').TJSPositionTypes.PositionInitial>}\n    */\n   static #positionInitial = Object.freeze({\n      browserCentered: new Centered({ lock: true }),\n      Centered\n   });\n\n   /**\n    * Public API for {@link TJSPosition.Validators}\n    *\n    * @type {Readonly<import('./types').TJSPositionTypes.PositionValidators>}\n    */\n   static #positionValidators = Object.freeze({\n      TransformBounds,\n      transformWindow: new TransformBounds({ lock: true })\n   });\n\n   /**\n    * Stores all position data / properties.\n    *\n    * @type {TJSPositionData}\n    */\n   #data = Object.seal(new TJSPositionData());\n\n   /**\n    * Provides the animation API.\n    *\n    * @type {import('./animation/types').AnimationAPI}\n    */\n   #animate = new AnimationAPI(this, this.#data);\n\n   /**\n    * Provides a way to turn on / off the position handling.\n    *\n    * @type {boolean}\n    */\n   #enabled = true;\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    *\n    * @type {import('./types-local').OptionsInternal}\n    */\n   #options = {\n      calculateTransform: false,\n      initial: void 0,\n      ortho: true,\n      transformSubscribed: false,\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {import('./types').TJSPositionTypes.PositionParent}\n    */\n   #parent;\n\n   /**\n    * Stores the style attributes that changed on update.\n    *\n    * @type {PositionChangeSet}\n    */\n   #positionChangeSet = new PositionChangeSet();\n\n   /**\n    * Tracks the current state if this position instance is a candidate for resize observation by the `resizeObserver`\n    * action. This is `true` when `width` or `height` is `auto` or `inherit`.\n    *\n    * @type {boolean}\n    */\n   #resizeObservable = false;\n\n   /**\n    * @type {import('./types').TJSPositionTypes.Stores}\n    */\n   #stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    *\n    * @type {TJSPositionStyleCache}\n    */\n   #styleCache;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<import('./data/types').Data.TJSPositionData>[]}\n    */\n   #subscribers = [];\n\n   /**\n    * @type {TJSTransforms}\n    */\n   #transforms = new TJSTransforms();\n\n   /**\n    * @type {UpdateElementData}\n    */\n   #updateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    *\n    * @type {Promise}\n    */\n   #updateElementPromise;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {import('./system/validators/types').ValidatorAPI.ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {PositionStateAPI}\n    */\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns {import('./animation/types').AnimationGroupAPI} Public Animation API.\n    */\n   static get Animate() { return AnimationGroupAPI; }\n\n   /**\n    * @returns {import('./data/types').Data.TJSPositionDataConstructor} TJSPositionData constructor.\n    */\n   static get Data() { return TJSPositionData; }\n\n   /**\n    * @returns {Readonly<import('./types').TJSPositionTypes.PositionInitial>} TJSPosition default initial helpers.\n    */\n   static get Initial() { return this.#positionInitial; }\n\n   /**\n    * @returns {import('./system/types').System.SystemBaseConstructor} `SystemBase` constructor.\n    */\n   static get SystemBase() { return SystemBase; }\n\n   /**\n    * Returns TJSTransformData class / constructor.\n    *\n    * @returns {import('./transform/types').TransformAPI.TransformDataConstructor} TransformData class /\n    *          constructor.\n    */\n   static get TransformData() { return TJSTransformData; }\n\n   /**\n    * Returns default validators.\n    *\n    * @returns {Readonly<import('./types').TJSPositionTypes.PositionValidators>} Available validators.\n    */\n   static get Validators() { return this.#positionValidators; }\n\n   /**\n    * Returns a list of supported transform origins.\n    *\n    * @returns {Readonly<import('./transform/types').TransformAPI.TransformOrigin[]>} The supported transform origin\n    *          strings.\n    */\n   static get transformOrigins()\n   {\n      return TJSTransforms.transformOrigins;\n   }\n\n   /**\n    * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\n    * {@link TJSPositionData} instance is created.\n    *\n    * @param {Partial<import('./data/types').Data.TJSPositionData>}  source - The source instance to copy from.\n    *\n    * @param {import('./data/types').Data.TJSPositionData}  [target] - Target TJSPositionData like object; if one is not\n    *        provided a new instance is created.\n    *\n    * @returns {import('./data/types').Data.TJSPositionData} The target instance with all TJSPositionData fields.\n    */\n   static copyData(source, target)\n   {\n      return TJSPositionDataUtil.copyData(source, target);\n   }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators. The position parent is not\n    * copied and a new one must be set manually via the {@link TJSPosition.parent} setter.\n    *\n    * @param {TJSPosition} position - A position instance.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsCtorAll}   [options] - Unique new options to set.\n    *\n    * @returns {TJSPosition} A duplicate position instance.\n    */\n   static duplicate(position, options = {})\n   {\n      if (!(position instanceof TJSPosition)) { throw new TypeError(`'position' is not an instance of TJSPosition.`); }\n\n      const newPosition = new TJSPosition(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param {(\n    *    import('./types').TJSPositionTypes.PositionParent |\n    *    import('./types').TJSPositionTypes.OptionsCtorAll\n    * )} [parentOrOptions] - A  potential parent element or object w/ `elementTarget` accessor. You may also forego\n    *    setting the parent and pass in the options object.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsCtorAll}  [options] - The options object.\n    */\n   constructor(parentOrOptions, options)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parentOrOptions))\n      {\n         options = parentOrOptions;\n      }\n      else\n      {\n         this.#parent = /** @type {import('./types').TJSPositionTypes.PositionParent} */ parentOrOptions;\n      }\n\n      this.#styleCache = new TJSPositionStyleCache();\n\n      const updateData = new UpdateElementData();\n\n      updateData.changeSet = this.#positionChangeSet;\n      updateData.data = this.#data;\n      updateData.options = this.#options;\n      updateData.styleCache = this.#styleCache;\n      updateData.subscribers = this.#subscribers;\n      updateData.transforms = this.#transforms;\n\n      this.#updateElementData = updateData;\n\n      // Set TJSPosition options -------------------------------------------------------------------------------------\n\n      if (typeof options?.calculateTransform === 'boolean')\n      {\n         this.#options.calculateTransform = options.calculateTransform;\n      }\n\n      if (typeof options?.ortho === 'boolean') { this.#options.ortho = options.ortho; }\n\n      // Initialize stores -------------------------------------------------------------------------------------------\n\n      this.#stores = Object.freeze({\n         // The main properties for manipulating TJSPosition.\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         translateX: propertyStore(this, 'translateX'),\n         translateY: propertyStore(this, 'translateY'),\n         translateZ: propertyStore(this, 'translateZ'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore(this, 'maxHeight'),\n         maxWidth: propertyStore(this, 'maxWidth'),\n         minHeight: propertyStore(this, 'minHeight'),\n         minWidth: propertyStore(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeObservable: { subscribe: this.#styleCache.stores.resizeObservable.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      });\n\n      /**\n       * Define 'values' getter to retrieve static transform origins.\n       */\n      Object.defineProperty(this.#stores.transformOrigin, 'values', {\n         get: () => TJSPosition.transformOrigins\n      });\n\n      // When resize change from any applied `resizeObserver` action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' or `inherit` for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\n      {\n         const parent = this.#parent;\n         const el = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (A11yHelper.isFocusTarget(el) && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set();\n         }\n      });\n\n      [this.#validators, this.#validatorData] = AdapterValidators.create(() => this.set());\n\n      if (options?.initial)\n      {\n         const initial = options.initial;\n\n         if (typeof initial?.getLeft !== 'function' || typeof initial?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initial = initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator))\n         {\n            this.validators.add(...options.validator);\n         }\n         else\n         {\n            /**\n             * @type {(\n             *    import('./system/validators/types').ValidatorAPI.ValidatorFn |\n             *    import('./system/validators/types').ValidatorAPI.ValidatorData\n             * )}\n             */\n            const validatorFn = options.validator;\n            this.validators.add(validatorFn);\n         }\n      }\n\n      Object.seal(this);\n\n      // Set any remaining position data.\n      if (isObject(options)) { this.set(options); }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns {import('./animation/types').AnimationAPI} Animation API.\n    */\n   get animate()\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns {Readonly<{width: number | 'auto' | 'inherit', height: number | 'auto' | 'inherit'}>} Dimension data.\n    */\n   get dimension()\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the enabled state.\n    *\n    * @returns {boolean} Enabled state.\n    */\n   get enabled()\n   {\n      return this.#enabled;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns {HTMLElement | undefined} Current HTMLElement being positioned.\n    */\n   get element()\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link TJSPositionTypes.PositionParent} instance.\n    *\n    * @returns {import('./types').TJSPositionTypes.PositionParent} The current position parent instance.\n    */\n   get parent() { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns {import('./state/types').PositionStateAPI} TJSPosition state API.\n    */\n   get state() { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {import('./types').TJSPositionTypes.Stores} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns {import('./transform/types').TransformAPI.TransformData} Transform Data.\n    */\n   get transform()\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {import('./system/validators/types').ValidatorAPI} validators.\n    */\n   get validators() { return this.#validators; }\n\n   /**\n    * Sets the enabled state.\n    *\n    * @param {boolean}  enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean')\n      {\n         throw new TypeError(`'enabled' is not a boolean.`);\n      }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Sets the associated {@link TJSPositionTypes.PositionParent} instance. Resets the style cache and default data.\n    *\n    * @param {import('./types').TJSPositionTypes.PositionParent | undefined} parent - A PositionParent instance or\n    *        undefined to disassociate\n    */\n   set parent(parent)\n   {\n      if (parent !== void 0 && !A11yHelper.isFocusTarget(parent) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number | 'auto' | 'inherit' | null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number | null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number | null} maxHeight\n    */\n   get maxHeight() { return this.#data.maxHeight; }\n\n   /**\n    * @returns {number | null} maxWidth\n    */\n   get maxWidth() { return this.#data.maxWidth; }\n\n   /**\n    * @returns {number | null} minHeight\n    */\n   get minHeight() { return this.#data.minHeight; }\n\n   /**\n    * @returns {number | null} minWidth\n    */\n   get minWidth() { return this.#data.minWidth; }\n\n   /**\n    * @returns {number | null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number | null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number | null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number | null} alias for rotateZ\n    */\n   get rotation() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number | null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number | null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {import('./transform/types').TransformAPI.TransformOrigin | null} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number | null} translateX\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number | null} translateY\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number | null} translateZ\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * @returns {number | 'auto' | 'inherit' | null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number | null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number | 'auto' | 'inherit' | null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number | string | null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number | string | null} maxHeight -\n    */\n   set maxHeight(maxHeight)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param {number | string | null} maxWidth -\n    */\n   set maxWidth(maxWidth)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param {number | string | null} minHeight -\n    */\n   set minHeight(minHeight)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param {number | string | null} minWidth -\n    */\n   set minWidth(minWidth)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param {number | string | null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number | string | null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number | string | null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number | string | null} rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number | string | null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number | string | null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {import('./transform/types').TransformAPI.TransformOrigin} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (TJSTransforms.transformOrigins.includes(transformOrigin))\n      {\n         this.#stores.transformOrigin.set(transformOrigin);\n      }\n   }\n\n   /**\n    * @param {number | string | null} translateX -\n    */\n   set translateX(translateX)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param {number | string | null} translateY -\n    */\n   set translateY(translateY)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param {number | string | null} translateZ -\n    */\n   set translateZ(translateZ)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param {number | 'auto' | 'inherit' | null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number | string | null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position data to given object `data` object. By default, `null` position data is not assigned.\n    * Other options allow configuration of the data assigned including setting default numeric values for any properties\n    * that are null.\n    *\n    * @param {object}  [data] - Target to assign current position data.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsGet}   [options] - Defines options for specific keys and\n    *        substituting null for numeric default values. By default, nullable keys are included.\n    *\n    * @returns {Partial<import('./data/types').Data.TJSPositionData>} Passed in object with current position data.\n    */\n   get(data = {}, options)\n   {\n      const keys = options?.keys;\n      const excludeKeys = options?.exclude;\n      const nullable = options?.nullable ?? true;\n      const numeric = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         for (const key of keys)\n         {\n            // Convert any null values to numeric defaults if `numeric` is true.\n            data[key] = numeric ? TJSPositionDataUtil.getDataOrDefault(this, key) : this[key];\n\n            // Potentially remove null keys.\n            if (!nullable && data[key] === null) { delete data[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         return data;\n      }\n      else\n      {\n         data = Object.assign(data, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { TJSPositionDataUtil.setNumericDefaults(data); }\n\n         if (!nullable)\n         {\n            for (const key in data)\n            {\n               if (data[key] === null) { delete data[key]; }\n            }\n         }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns {import('./data/types').Data.TJSPositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition}. This allows position to be fully\n    * reactive and in control of updating inline styles for a connected {@link HTMLElement}.\n    *\n    * The initial set call with a target element will always set width / height as this is necessary for correct\n    * calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them via the validator API available from\n    * {@link TJSPosition.validators}.\n    *\n    * Updates to any target element are decoupled from the underlying TJSPosition data. This method returns this\n    * instance that you can then await on the target element inline style update by using\n    * {@link TJSPosition.elementUpdated}.\n    *\n    * Relative updates to any property of {@link TJSPositionData} are possible by specifying properties as strings.\n    * This string should be in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n    * {@link TJSPosition.set} will apply the `addition`, `subtraction`, or `multiplication` operation specified against\n    * the current value of the given property. Please see {@link Data.TJSPositionDataRelative} for a detailed\n    * description.\n    *\n    * @param {import('./data/types').Data.TJSPositionDataRelative} [position] - TJSPosition data to set.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsSet} [options] - Additional options.\n    *\n    * @returns {TJSPosition} This TJSPosition instance.\n    */\n   set(position = {}, options)\n   {\n      if (!isObject(position)) { throw new TypeError(`TJSPosition - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if not enabled.\n      if (!this.#enabled)\n      {\n         return this;\n      }\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      const immediateElementUpdate = options?.immediateElementUpdate ?? false;\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      const changeSet = this.#positionChangeSet;\n      const styleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            ;\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any string position data to numeric inputs.\n         ConvertStringData.process(position, this.#data, el);\n\n         position = this.#updatePosition(position, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (Number.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (Number.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.scale) || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? clamp(position.scale, 0, 1000) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && TJSTransforms.transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateX) || position.translateX === null)\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateY) || position.translateY === null)\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      const widthIsObservable = position.width === 'auto' || position.width === 'inherit';\n\n      if (Number.isFinite(position.width) || widthIsObservable || position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width)\n         {\n            data.width = position.width;\n            changeSet.width = true;\n         }\n      }\n\n      const heightIsObservable = position.height === 'auto' || position.height === 'inherit';\n\n      if (Number.isFinite(position.height) || heightIsObservable || position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\n      }\n\n      // Potentially update the `resizeObservable` store when the state of `width` or `height` changes between\n      // `auto` / `inherit` to a number or null.\n      const resizeObservable = widthIsObservable || heightIsObservable;\n      if (this.#resizeObservable !== resizeObservable)\n      {\n         this.#resizeObservable = resizeObservable;\n         // Set store on next clock tick.\n         // setTimeout(() => this.#styleCache.stores.resizeObservable.set(resizeObservable), 0);\n         this.#styleCache.stores.resizeObservable.set(resizeObservable);\n      }\n\n      if (el)\n      {\n         const defaultData = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (!isObject(defaultData)) { this.#state.save({ name: '#defaultData', ...Object.assign({}, data) }); }\n\n         // If `immediateElementUpdate` is true then update the element immediately. This is for rAF based library\n         // integrations like GSAP and updates coming from AnimationManager.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(globalThis.performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<Readonly<import('./data/types').Data.TJSPositionData>>} handler -\n    *        Callback function that is invoked on update / changes. Receives a readonly copy of the TJSPositionData.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscribers.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscribers.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscribers.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Provides the {@link Writable} store `update` method. Receive and return a {@link TJSPositionData} instance to\n    * update the position state. You may manipulate numeric properties by providing relative adjustments described in\n    * {@link TJSPositionDataRelative}.\n    *\n    * @param {import('svelte/store').Updater<import('./data/types').Data.TJSPositionDataRelative>} updater -\n    */\n   update(updater)\n   {\n      const result = updater(this.get());\n\n      if (!isObject(result)) { throw new TypeError(`'result' of 'updater' is not an object.`); }\n\n      this.set(result);\n   }\n\n   // Internal Implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Temporary data storage for `TJSPosition.#updatePosition`.\n    *\n    * @type {TJSPositionData}\n    */\n   static #updateDataCopy = Object.seal(new TJSPositionData());\n\n   /**\n    * Temporary data storage for `TJSPosition.#updatePosition`.\n    *\n    * @type {import('./system/validators/types').ValidatorAPI.ValidationData}\n    */\n   static #validationData = Object.seal({\n      position: void 0,\n      parent: void 0,\n      el: void 0,\n      computed: void 0,\n      transforms: void 0,\n      height: void 0,\n      width: void 0,\n      marginLeft: void 0,\n      marginTop: void 0,\n      maxHeight: void 0,\n      maxWidth: void 0,\n      minHeight: void 0,\n      minWidth: void 0,\n      rest: void 0\n   });\n\n   /**\n    * @param {import('./data/types').Data.TJSPositionDataRelative} data -\n    *\n    * @param {object} parent -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {TJSPositionStyleCache} styleCache -\n    *\n    * @returns {null | import('./data/types').Data.TJSPositionData} Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   } = {}, parent, el, styleCache)\n   {\n      let currentPosition = TJSPositionDataUtil.copyData(this.#data, TJSPosition.#updateDataCopy);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (width !== void 0 || el.style.width === '')\n      {\n         const widthValid = width === null || Number.isFinite(width);\n\n         if (width === 'auto' || (currentPosition.width === 'auto' && !widthValid))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && !widthValid))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (height !== void 0 || el.style.height === '')\n      {\n         const heightValid = height === null || Number.isFinite(height);\n\n         if (height === 'auto' || (currentPosition.height === 'auto' && !heightValid))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && !heightValid))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (Number.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options?.initial?.getLeft === 'function' ?\n          this.#options.initial.getLeft(width) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options?.initial?.getTop === 'function' ?\n          this.#options.initial.getTop(height) : 0;\n      }\n\n      if (Number.isFinite(maxHeight) || maxHeight === null)\n      {\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (Number.isFinite(maxWidth) || maxWidth === null)\n      {\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (Number.isFinite(minHeight) || minHeight === null)\n      {\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (Number.isFinite(minWidth) || minWidth === null)\n      {\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\n\n      if (Number.isFinite(scale) || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? clamp(scale, 0, 1000) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = TJSTransforms.transformOrigins.includes(transformOrigin) ? transformOrigin :\n          null;\n      }\n\n      if (Number.isFinite(zIndex) || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (this.#validators.enabled && validatorData.length)\n      {\n         const validationData = TJSPosition.#validationData;\n\n         validationData.parent = parent;\n\n         validationData.el = el;\n\n         validationData.computed = styleCache.computed;\n\n         validationData.transforms = this.#transforms;\n\n         validationData.height = height;\n\n         validationData.width = width;\n\n         validationData.marginLeft = styleCache.marginLeft;\n\n         validationData.marginTop = styleCache.marginTop;\n\n         validationData.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         validationData.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         const isMinimized = parent?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         validationData.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         validationData.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\n         {\n            validationData.position = currentPosition;\n            validationData.rest = rest;\n            currentPosition = validatorData[cntr].validate(validationData);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nexport { TJSPosition, applyPosition, draggable };\n//# sourceMappingURL=index.js.map\n","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link globalThis.ApplicationHeaderButton} type.\n    * Additionally, a `title` field is supported to give a tool tip for the button. For backward compatibility\n    * `onclick` is supported, but for uniformity across TRL defining an `onPress` function is recommended. If defined\n    * it is invoked when the button is clicked or `Enter` key pressed and state is updated accordingly.\n    *\n    * TRL also supports the following extra button data:\n    *\n    * - {keyCode='Enter'}           keyCode: A string conforming to `KeyboardEvent.code` to activate `onPress` callback.\n    *\n    * - {keepMinimized=false}       keepMinimized: When true the button is not removed when app minimized.\n    *\n    * - {Function}                  onContextMenu: Invoked when right mouse button or contextmenu key is pressed.\n    *\n    * - {Function}                  onPress: Invoked when left mouse button or `keyCode` key is pressed.\n    *\n    * - {{ [key: string]: string | null }}   styles: Additional inline styles to apply to button.\n    *\n    * - {string}                    title: Tooltip title.\n    *\n    * @componentDocumentation\n    * @internal\n    */\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action/dom/style';\n   import { localize }      from '@typhonjs-fvtt/runtime/util/i18n';\n   import { isObject }      from '@typhonjs-fvtt/runtime/util/object';\n\n   export let button = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   $: title = isObject(button) && typeof button.title === 'string' ? localize(button.title) : '';\n\n   // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n   $: icon = isObject(button) && typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ?\n    button.icon : `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\n\n   $: label = isObject(button) && typeof button.label === 'string' ? localize(button.label) : void 0;\n\n   $: keepMinimized = isObject(button) && typeof button.keepMinimized === 'boolean' ? button.keepMinimized : false;\n\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode : 'Enter';\n\n   $: styles = isObject(button) && isObject(button.styles) ? button.styles : void 0;\n\n   function onClick(event)\n   {\n      // Accept `onPress or `onclick` as the function / data to invoke. `onclick` is from Foundry defined buttons.\n      const invoke = button?.onPress ?? button?.onclick;\n\n      if (typeof invoke === 'function')\n      {\n         invoke({ button, event });\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   function onContextMenu(event)\n   {\n      if (button?.onContextMenu === 'function')\n      {\n         button.onContextMenu({ button, event });\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   /**\n    * Consume / stop propagation of key down when key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeydown(event)\n   {\n      if (event.code === keyCode)\n      {\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n\n   /**\n    * Handle press event if key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeyup(event)\n   {\n      if (event.code === keyCode)\n      {\n         // Accept `onPress or `onclick` as the function / data to invoke. `onclick` is from Foundry defined buttons.\n         const invoke = button.onPress ?? button.onclick;\n\n         if (typeof invoke === 'function')\n         {\n            invoke({ button, event });\n            button = button; // This provides a reactive update if button data changes.\n         }\n\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<!-- svelte-ignore a11y-missing-attribute -->\n<a on:click|preventDefault|stopPropagation={onClick}\n   on:contextmenu|preventDefault|stopPropagation={onContextMenu}\n   on:keydown={onKeydown}\n   on:keyup={onKeyup}\n   use:applyStyles={styles}\n   class=\"header-button {button.class}\"\n   class:keep-minimized={keepMinimized}\n   aria-label={label}\n   tabindex=0\n   role=button>\n    {@html icon}{#if label}<span class:has-icon={icon !== void 0}>{label}</span>{/if}\n</a>\n\n<style>\n   a {\n      padding: var(--tjs-app-header-button-padding, 0 3px);\n      user-select: none;\n      -webkit-tap-highlight-color: var(--tjs-default-webkit-tap-highlight-color, revert);\n   }\n\n   a :global(i) {\n      padding: var(--tjs-app-header-button-icon-padding, 0);\n   }\n\n   a:hover {\n      text-shadow: var(--tjs-app-header-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   a:focus-visible {\n      box-shadow: var(--tjs-app-header-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n      outline: var(--tjs-app-header-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n      transition: var(--tjs-app-header-button-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n      text-shadow: var(--tjs-app-header-button-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   span {\n      padding: var(--tjs-app-header-button-label-padding, 0);\n   }\n\n   span.has-icon {\n      padding: var(--tjs-app-header-button-label-padding, 0 0 0 3px);\n   }\n</style>\n","<script>\n   /**\n    * TODO: Add description\n    *\n    * @componentDocumentation\n    * @internal\n    */\n   import { getContext }            from 'svelte';\n\n   import { TJSSvelteConfigUtil }   from '@typhonjs-fvtt/runtime/svelte/util';\n   import { A11yHelper }            from '@typhonjs-fvtt/runtime/util/a11y';\n   import { localize }              from '@typhonjs-fvtt/runtime/util/i18n';\n   import { isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\n   import {\n      draggable as dragDefault }    from '@typhonjs-fvtt/runtime/svelte/store/position';\n\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\n\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   /**\n    * @type {SvelteApplication}\n    */\n   const application = getContext('#external')?.application;\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep } = application.reactive.storeAppOptions;\n\n   const { elementRoot } = getContext('#internal').stores;\n\n   const storeTitle = application.reactive.storeAppOptions.title;\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\n   const storeDragging = application.reactive.storeUIState.dragging;\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n   const storeHeaderIcon = application.reactive.storeAppOptions.headerIcon;\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\n   const storeMinimized = application.reactive.storeUIState.minimized;\n\n   // These classes in the window header allow dragging.\n   const s_DRAG_TARGET_CLASSLIST = Object.freeze(['tjs-app-icon', 'tjs-window-header-spacer',\n    'window-header', 'window-title']);\n\n   let dragOptions;\n\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\n\n   // Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n   // 0.06 seconds and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n   // `storeDragging` are always overridden by application position / stores.\n   $: dragOptions = Object.assign({}, { tween: true, tweenOptions: { duration: 0.06, ease: 'cubicOut' } },\n    isObject(draggableOptions) ? draggableOptions : {}, { position: application.position, enabled:\n     $storeDraggable, storeDragging, hasTargetClassList: s_DRAG_TARGET_CLASSLIST });\n\n   let displayHeaderTitle;\n\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\n\n   let buttonsLeft;\n   let buttonsRight;\n\n   $:\n   {\n      buttonsLeft = [];\n      buttonsRight = [];\n\n      for (const button of $storeHeaderButtons)\n      {\n         const buttonsList = typeof button?.alignLeft === 'boolean' && button?.alignLeft ? buttonsLeft : buttonsRight;\n\n         // If the button contains a TJSSvelteConfig object in the `svelte` attribute then use it otherwise use\n         // `TJSHeaderButton` w/ button as props.\n         buttonsList.push(TJSSvelteConfigUtil.isConfig(button?.svelte) ? { ...button.svelte } :\n          { class: TJSHeaderButton, props: { button } });\n      }\n   }\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = (event) =>\n      {\n         // Only toggle minimize state if window title or header is the event target. Also allow toggle state if the\n         // event target has 'keep-minimized' class.\n         if (event.target.classList.contains('window-title') || event.target.classList.contains('window-header') ||\n           event.target.classList.contains('keep-minimized'))\n         {\n            application._onToggleMinimize(event);\n         }\n      }\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n   /**\n    * Explicitly focus `elementRoot` if pointer event is not consumed by header buttons / components. This allows\n    * keyboard tab navigation to select header buttons.\n    *\n    * Note: if `focusKeep` app option store is set to true `elementRoot` is only focused if the current browser wide\n    * active element is not contained inside the app element.\n    */\n   function onPointerdown(event)\n   {\n      const rootEl = $elementRoot;\n\n      // Cancel any app animation in progress when dragging starts.\n      application.position.animate.cancel();\n\n      if ($focusAuto && A11yHelper.isFocusTarget(rootEl) && rootEl?.isConnected)\n      {\n         if ($focusKeep)\n         {\n            const activeWindow = application.reactive.activeWindow;\n\n            const focusOutside = A11yHelper.isFocusTarget(activeWindow.document.activeElement) &&\n             !rootEl.contains(activeWindow.document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               rootEl.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            rootEl.focus();\n         }\n      }\n   }\n</script>\n\n{#key draggable}\n   <header class=\"window-header flexrow\"\n           on:pointerdown={onPointerdown}\n           use:draggable={dragOptions}\n           use:minimizable={$storeMinimizable}>\n      {#if typeof $storeHeaderIcon === 'string'}\n         <img class=\"tjs-app-icon keep-minimized\" src={$storeHeaderIcon} alt=icon>\n      {/if}\n      <h4 class=window-title style:display={displayHeaderTitle}>\n         {localize($storeTitle)}\n      </h4>\n      {#each buttonsLeft as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n      <span class=\"tjs-window-header-spacer keep-minimized\"></span>\n      {#each buttonsRight as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n   </header>\n{/key}\n\n<style>\n   /**\n    * Provides a zero space element that expands to the right creating the gap between window title and left aligned\n    * buttons and right aligned buttons. Note the use of a negative left margin to remove the gap between elements.\n    */\n   .tjs-window-header-spacer {\n      flex: 0;\n      margin-left: calc(-1 * var(--tjs-app-header-gap, 5px));\n      margin-right: auto;\n   }\n\n   .window-header {\n      flex: var(--tjs-app-header-flex, 0 0 30px);\n      gap: var(--tjs-app-header-gap, 5px);\n      padding: var(--tjs-app-header-padding, 0 4px);\n      touch-action: none;\n   }\n\n   .window-header .tjs-app-icon {\n      align-self: center;\n      border-radius: var(--tjs-app-header-icon-border-radius, 4px);\n      flex: 0 0 var(--tjs-app-header-icon-width, 24px);\n      height: var(--tjs-app-header-icon-height, 24px);\n   }\n\n   .window-title {\n      gap: var(--tjs-app-header-gap, 5px);\n      max-width: fit-content;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n   }\n</style>\n","<script>\n   /**\n    * TODO: Add description\n    *\n    * @componentDocumentation\n    */\n   import { getContext }         from 'svelte';\n\n   export let isResizable = false;\n\n   const application = getContext('#external')?.application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('#internal').stores.elementRoot;\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Cancel any app animation in progress when dragging starts.\n    */\n   function onPointerdown()\n   {\n      application.position.animate.cancel();\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         application.position.set({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         // TODO: Direct Foundry API access.\n         application?._onResize?.(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     on:pointerdown={onPointerdown}\n     use:resizable={{ active: $storeResizable, storeResizing }}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n\n<style>\n   .window-resizable-handle {\n      display: block;\n      position: absolute;\n      width: var(--tjs-app-resizable-handle-width, 20px);\n      height: var(--tjs-app-resizable-handle-height, 20px);\n      top: var(--tjs-app-resizable-handle-top, unset);\n      bottom: var(--tjs-app-resizable-handle-bottom, -1px);\n      right: var(--tjs-app-resizable-handle-right, 0);\n      left: var(--tjs-app-resizable-handle-left, unset);\n      background: var(--tjs-app-resizable-handle-background, #444);\n      border: var(--tjs-app-resizable-handle-border, 1px solid #111);\n      border-radius: var(--tjs-app-resizable-handle-border-radius, 4px 0 0 0);\n      padding: var(--tjs-app-resizable-handle-padding, 2px);\n      touch-action: none;\n   }\n\n   .fa-arrows-alt-h {\n      color: var(--tjs-app-resizable-handle-icon-color, #f0f0e0);\n      transform: var(--tjs-app-resizable-handle-icon-transform, rotate(45deg));\n   }\n</style>\n","<script>\n   /**\n    * Provides a component to wrap focus to the first focusable element in the given `elementRoot` prop. Place this\n    * component as the last child in `elementRoot`.\n    *\n    * @componentDocumentation\n    */\n   import { A11yHelper }    from '@typhonjs-fvtt/runtime/util/a11y';\n\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   /** @type {boolean} */\n   export let enabled = true;\n\n   let ignoreElements, wrapEl;\n\n   $: if (wrapEl) { ignoreElements = new Set([wrapEl]); }\n\n   function onFocus()\n   {\n      // Early out if not enabled.\n      if (!enabled) { return; }\n\n      if (A11yHelper.isFocusTarget(elementRoot))\n      {\n         const firstFocusEl = A11yHelper.getFirstFocusableElement(elementRoot, ignoreElements);\n\n         if (A11yHelper.isFocusTarget(firstFocusEl) && firstFocusEl !== wrapEl)\n         {\n            firstFocusEl.focus();\n         }\n         else\n         {\n            // No focus target found, so focus elementRoot.\n            elementRoot.focus();\n         }\n      }\n   }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<div bind:this={wrapEl} class=tjs-focus-wrap tabindex=0 on:focus={onFocus}></div>\n\n<style>\n    div {\n        width: 0;\n        height: 0;\n        flex: 0;\n    }\n\n    div:focus {\n        outline: none;\n    }\n</style>\n","<script>\n   /**\n    * Provides an application shell is a main top level slotted component that provides a reactive\n    * outer wrapper and header bar for the main content component.\n    *\n    * @componentDocumentation\n    */\n\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import { resizeObserver }           from '@typhonjs-fvtt/runtime/svelte/action/dom/observer';\n   import { applyStyles }              from '@typhonjs-fvtt/runtime/svelte/action/dom/style';\n   import { dynamicAction }            from '@typhonjs-fvtt/runtime/svelte/action/util';\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { A11yHelper }               from '@typhonjs-fvtt/runtime/util/a11y';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   import TJSFocusWrap                 from '../internal/dom/TJSFocusWrap.svelte';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   // export let children = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   /**\n    * Application reference.\n    *\n    * @type {SvelteApplication}\n    */\n   const application = getContext('#external')?.application;\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   // Is the backing app TJSPosition instance a candidate for the `resizeObserver` action? IE `width` or `height is\n   // `auto` or `inherit`.\n   const { resizeObservable } = application.position.stores;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // If a parent component binds and sets `appOffsetHeight` or `appOffsetWidth` to a truthy value then the\n   // `resizeObserver` action is enabled on the outer application `div`. Additionally, the SvelteApplication position\n   // resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Tracks initial state if either of the above props are truthy otherwise a null operation.\n   const initialAppResizeObserver = !!appOffsetHeight || !!appOffsetWidth;\n\n   /**\n    * Reactive statement to control any dynamic action to apply for the app resize observer. It is always enabled when\n    * `initialAppResizeObserver` is true or when the position store `resizeObservable` is true when app position `width`\n    * or `height` is `auto` or `inherit`.\n    *\n    * @type {undefined | import('@typhonjs-fvtt/runtime/svelte/action/util').DynamicActionOptions}\n    */\n   $: appResizeObserver = initialAppResizeObserver || $resizeObservable ?\n    { action: resizeObserver, data: resizeObservedApp } : void 0;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = TJSDefaultTransition.default;\n   export let inTransition = TJSDefaultTransition.default;\n   export let outTransition = TJSDefaultTransition.default;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = TJSDefaultTransition.default;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : TJSDefaultTransition.default;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = TJSDefaultTransition.default; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = TJSDefaultTransition.default; }\n\n      // Set close animation to `false` / not run when an out transition is defined.\n      const defaultCloseAnimation = application?.options?.defaultCloseAnimation;\n      if (typeof defaultCloseAnimation === 'boolean' && defaultCloseAnimation &&\n       outTransition !== TJSDefaultTransition.default)\n      {\n         application.options.defaultCloseAnimation = false;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() => elementRoot.focus());\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!A11yHelper.isFocusTarget(targetEl)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then last focusable element is focused skipping `TJSFocusWrap`.\n    *\n    * Also, if a popout app all key down events will bring this application to the top such that when focus is trapped\n    * the app is top most.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      // TODO: Note this handling is specifically for Foundry v11+ as the platform KeyboardManager uses\n      // `document.querySelector(':focus')` to short circuit keyboard handling internally to KeyboardManager.\n      // ApplicationShell manages containing focus programmatically and this prevents the Foundry KeyboardManager from\n      // activating. We need to check if this key event target is currently the `elementRoot` or `elementContent` and\n      // the event matches any KeyboardManager actions and if so blur current focus.\n      if ((event.target === elementRoot || event.target === elementContent) &&\n       KeyboardManager && KeyboardManager?._getMatchingActions?.(\n        KeyboardManager?.getKeyboardEventContext?.(event))?.length)\n      {\n         event.target?.blur();\n         return;\n      }\n\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         const activeWindow = application.reactive.activeWindow;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === activeWindow.document.activeElement ||\n          firstFocusEl === activeWindow.document.activeElement)\n         {\n            if (A11yHelper.isFocusTarget(lastFocusEl) && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    *\n    * Note: `capture` is used so pointer down is always received. Be mindful as `onPointerdownApp` should only\n    * invoke `bringToTop`.\n    */\n   function onPointerdownApp()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Focus `elementContent` if the event target is not focusable and `focusAuto` is enabled.\n    *\n    * Note: `focusAuto` is an app option store. This check is a bit tricky as `section.window-content` has a tabindex\n    * of '-1', so it is focusable manually.\n    */\n   function onPointerdownContent(event)\n   {\n      // Note: the event target may not always be the element that will eventually receive focus.\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const activeWindow = application.reactive.activeWindow;\n            const focusOutside = !elementRoot.contains(activeWindow.document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementContent.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementContent.focus();\n         }\n      }\n   }\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition !== TJSDefaultTransition.default || outTransition !== TJSDefaultTransition.default}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        in:inTransition|global={inTransitionOptions}\n        out:outTransition|global={outTransitionOptions}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown={onKeydown}\n        on:pointerdown|capture={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:dynamicAction={appResizeObserver}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} />\n   </div>\n{:else}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown={onKeydown}\n        on:pointerdown|capture={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:dynamicAction={appResizeObserver}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n   </div>\n{/if}\n\n<style>\n   /* Note: this is different than stock Foundry and allows rounded corners from .app core styles */\n   .window-app {\n      contain: layout style paint;\n      overflow: var(--tjs-app-overflow, hidden);\n   }\n\n   .window-content {\n      gap: var(--tjs-app-content-gap);\n\n      /* For Firefox */\n      scrollbar-width: var(--tjs-app-content-scrollbar-width, thin);\n      scrollbar-color: var(--tjs-app-content-scrollbar-color, inherit);\n   }\n\n   .window-app:focus-visible {\n      outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   .window-content:focus-visible {\n      outline: var(--tjs-app-content-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   /* Override Foundry default; adjust --tjs-app-header-gap to change gap size */\n   .window-app :global(.window-header a) {\n      flex: none;\n      margin: 0;\n   }\n\n   /* Override Foundry default; See TJSHeaderButton for CSS variables */\n   .window-app :global(.window-header i[class^=fa]) {\n      margin: 0\n   }\n</style>\n","import { cssVariables }                      from './cssVariables.js';\n\nexport { default as ApplicationShell }       from './ApplicationShell.svelte';\nexport { default as EmptyApplicationShell }  from './EmptyApplicationShell.svelte';\nexport { default as TJSApplicationShell }    from './TJSApplicationShell.svelte';\nexport { default as TJSGlassPane }           from './TJSGlassPane.svelte';\n\n/**\n * Provides default CSS variables for core components.\n */\ncssVariables.setProperties({\n   // Anchor text shadow / header buttons\n   '--tjs-default-text-shadow-focus-hover': '0 0 8px var(--color-shadow-primary)',\n\n   // TJSApplicationShell app background.\n   '--tjs-app-background': `url(\"${globalThis.foundry.utils.getRoute('/ui/denim075.png')}\")`,\n}, false);\n","import { writable } from 'svelte/store';\nimport { isMinimalWritableStore, subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Registers game settings and creates a backing Svelte store for each setting. The Svelte store will update the\n * Foundry game settings and vice versa when changes occur to the Foundry game settings the updated data is set to the\n * store.\n *\n * Note: It is possible to add multiple `onChange` callbacks on registration.\n *\n * TODO: A possible future extension is to offer type checking against the setting type by creating a customized\n * writable store that has an overloaded `set` method to provide type checking.\n */\nclass TJSGameSettings\n{\n   /** @type {string} */\n   #namespace;\n\n   /** @type {GameSettingData[]} */\n   #settings = [];\n\n   /**\n    * @type {Map<string, import('svelte/store').Writable>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates the TJSGameSettings instance.\n    *\n    * @param {string}   namespace - The namespace for all settings.\n    */\n   constructor(namespace)\n   {\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\n\n      this.#namespace = namespace;\n   }\n\n   /**\n    * Creates a new writable for the given key.\n    *\n    * @param {*}  initialValue - An initial value to set to new stores.\n    *\n    * @returns {import('svelte/store').Writable} The new writable.\n    */\n   static #createStore(initialValue)\n   {\n      return writable(initialValue);\n   }\n\n   /**\n    * @returns {string} Returns namespace set in constructor.\n    */\n   get namespace()\n   {\n      return this.#namespace;\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {string}   [initialValue] - An initial value to set to new stores.\n    *\n    * @returns {import('svelte/store').Writable} The store for the given key.\n    */\n   #getStore(key, initialValue)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = TJSGameSettings.#createStore(initialValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Returns a readable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Readable | undefined} The associated store for the given game setting key.\n    */\n   getReadableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      const store = this.#getStore(key);\n\n      return { subscribe: store.subscribe };\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\n    */\n   getStore(key)\n   {\n      return this.getWritableStore(key);\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\n    */\n   getWritableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      return this.#getStore(key);\n   }\n\n   /**\n    * Registers a setting with TJSGameSettings and Foundry core.\n    *\n    * Note: The specific store subscription handler assigned to the passed in store or store created for the setting\n    * internally is returned from this function. In some cases when setting up custom stores particularly of object\n    * types with several child property stores (`propertyStore`) it is necessary to only update the setting store and\n    * not all subscribers to the custom store as the `propertyStore` instances are also subscribers to the custom store.\n    *\n    * This allows the custom store in the `set` implementation to mainly only trigger the TJSGameSettings subscriber\n    * handler on updates and not all the connected `propertyStore` instances.\n    *\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\n    *\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\n    *\n    * @returns {Function} The specific store subscription handler assigned to the passed in store.\n    */\n   register(setting, coreConfig = true)\n   {\n      if (!isObject(setting))\n      {\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\n      }\n\n      if (!isObject(setting.options))\n      {\n         throw new TypeError(`TJSGameSettings - register: 'setting.options' attribute is not an object.`);\n      }\n\n      if (typeof coreConfig !== 'boolean')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'coreConfig' is not an boolean.`);\n      }\n\n      if (setting.store !== void 0 && !isMinimalWritableStore(setting.store))\n      {\n         throw new TypeError(\n          `TJSGameSettings - register: 'setting.store' attribute is not a minimal writable store.`);\n      }\n\n      const namespace = setting.namespace;\n      const key = setting.key;\n      const folder = setting.folder;\n\n      // The `config` parameter passed to Foundry core.\n      const foundryConfig = coreConfig ? setting.options.config : false;\n\n      if (typeof namespace !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\n      }\n\n      if (typeof key !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\n      }\n\n      if (folder !== void 0 && typeof folder !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'folder' attribute is not a string.`);\n      }\n\n      const store = setting.store;\n\n      /**\n       * @type {GameSettingOptions}\n       */\n      const options = setting.options;\n\n      const onchangeFunctions = [];\n\n      // When true prevents local store subscription from a loop when values are object data.\n      let gateSet = false;\n\n      // Provides an `onChange` callback to update the associated store.\n      onchangeFunctions.push((value) =>\n      {\n         const callbackStore = this.#getStore(key);\n         if (callbackStore && !gateSet)\n         {\n            gateSet = true;\n            callbackStore.set(value);\n            gateSet = false;\n         }\n      });\n\n      // Handle loading any existing `onChange` callbacks.\n      if (isIterable(options?.onChange))\n      {\n         for (const entry of options.onChange)\n         {\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\n         }\n      }\n      else if (typeof options.onChange === 'function')\n      {\n         onchangeFunctions.push(options.onChange);\n      }\n\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\n      const onChange = (value) =>\n      {\n         for (const entry of onchangeFunctions) { entry(value); }\n      };\n\n      globalThis.game.settings.register(namespace, key, { ...options, config: foundryConfig, onChange });\n\n      // Set new store value with existing setting or default value.\n      const targetStore = store ? store : this.#getStore(key, globalThis.game.settings.get(namespace, key));\n\n      // If a store instance is passed into register then initialize it with game settings data.\n      if (store)\n      {\n         this.#stores.set(key, targetStore);\n         store.set(globalThis.game.settings.get(namespace, key));\n      }\n\n      const storeHandler = async (value) =>\n      {\n         if (!gateSet)\n         {\n            gateSet = true;\n            await globalThis.game.settings.set(namespace, key, value);\n         }\n\n         gateSet = false;\n      };\n\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\n      // existing game setting.\n      subscribeIgnoreFirst(targetStore, storeHandler);\n\n      const gameSettingData = {\n         namespace,\n         key,\n         folder,\n         ...options\n      };\n\n      Object.freeze(gameSettingData);\n\n      this.#settings.push(gameSettingData);\n\n      return storeHandler;\n   }\n\n   /**\n    * Registers multiple settings.\n    *\n    * Please refer to the note in {@link TJSGameSettings.register} about the returned object of store subscriber handler\n    * functions.\n    *\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\n    *\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\n    *\n    * @returns { {[key: string]: Function} } An object containing all TJSGameSetting store subscriber handlers for each\n    *          setting `key` added.\n    */\n   registerAll(settings, coreConfig)\n   {\n      /** @type { {[key: string]: Function} } */\n      const storeHandlers = {};\n\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\n\n      for (const entry of settings)\n      {\n         if (!isObject(entry))\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\n         }\n\n         if (typeof entry.namespace !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\n         }\n\n         if (typeof entry.key !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\n         }\n\n         if (!isObject(entry.options))\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\n         }\n\n         storeHandlers[entry.key] = this.register(entry, coreConfig);\n      }\n\n      return storeHandlers;\n   }\n\n   // Iterators ------------------------------------------------------------------------------------------------------\n\n   /**\n    * Returns an iterable for the game setting data; {@link GameSettingData}.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<GameSettingData>} Iterable iterator of GameSettingData.\n    * @yields {GameSettingData}\n    */\n   *data(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#settings.length) { return void 0; }\n\n      if (regex)\n      {\n         for (const setting of this.#settings)\n         {\n            if (regex.test(setting.key)) { yield setting; }\n         }\n      }\n      else\n      {\n         for (const setting of this.#settings) { yield setting; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the game setting keys and stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<[string, import('svelte/store').Writable<T>]>} Iterable iterator of keys and stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *entries(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield [key, this.getStore(key)]; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield [key, this.getStore(key)]; }\n      }\n   }\n\n   /**\n    * Returns an iterable for the game setting keys from existing stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<string>} Iterable iterator of game setting keys.\n    * @yields {string}\n    */\n   *keys(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield key; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield key; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the game setting stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<import('svelte/store').Writable<T>>} Iterable iterator of stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *stores(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield this.getStore(key); }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield this.getStore(key); }\n      }\n   }\n}\n\n/**\n * @typedef {object} GameSettingOptions\n *\n * @property {object} [choices] If choices are defined, the resulting setting will be a select menu.\n *\n * @property {boolean} [config=true] Specifies that the setting appears in the configuration view.\n *\n * @property {*} [default] A default value for the setting.\n *\n * @property {string} [hint] A description of the registered setting and its behavior.\n *\n * @property {string} [name] The displayed name of the setting.\n *\n * @property {Function|Iterable<Function>} [onChange] An onChange callback function or iterable list of callbacks to\n * directly receive callbacks from Foundry on setting change.\n *\n * @property {{min: number, max: number, step: number}} [range] If range is specified, the resulting setting will be\n * a range slider.\n *\n * @property {boolean} [requiresReload=false] If true then a prompt to reload after changes occurs.\n *\n * @property {('client' | 'world')} [scope='client'] Scope for setting.\n *\n * @property {object|Function} type A constructable object or function.\n */\n\n/**\n * @typedef {object} GameSetting Defines a game setting.\n *\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\n *\n * @property {string} key The setting key to register.\n *\n * @property {string} [folder] The name of the TJSSvgFolder to put this setting in to group them.\n *\n * @property {import('svelte/store').Writable} [store] An existing store instance to use.\n *\n * @property {GameSettingOptions} options Configuration for setting data.\n */\n\n/**\n * @typedef {GameSettingOptions} GameSettingData Stores the primary TJS game setting keys w/ GameSettingOptions.\n *\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\n *\n * @property {string} key The setting key to register.\n *\n * @property {string} [folder] The name of the TJSSvgFolder to put this setting in to group them.\n */\n\n/**\n * Provides an accessible JS object that is updated reactively from all or subset of TJSGameSettings stores.\n * Accessors are provided to directly get / set current setting data. Using a setter will update the setting and backing\n * store.\n *\n * Note: You can create a JSDoc / `@typedef` to apply with `@type` and achieve typing support in IDEs for the\n * customizable live settings instance. Please see the example at the end of this source file on how to accomplish this\n * task.\n *\n * TJSLiveGameSettings is also a readable Svelte store essentially providing a customizable derived store of all\n * settings tracked.\n *\n * Note: When using from JS a second subscriber function argument is the key that was updated.\n * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\n */\nclass TJSLiveGameSettings\n{\n   /**\n    * Stores the current parsed game setting data.\n    *\n    * @type {{}}\n    */\n   #currentData = {};\n\n   /**\n    * Map of all game settings stores and unsubscribe functions currently subscribed.\n    *\n    * @type {Map<string, { unsubscribe: Function, store: import('svelte/store').Writable }>}\n    */\n   #gameSettings = new Map();\n\n   /**\n    * Stores readable subscribers of this instance.\n    *\n    * Note: When using from JS a second argument is the key that was updated.\n    * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\n    *\n    * @type {((value: TJSLiveGameSettings, key?: string) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * Stores the last updated key.\n    *\n    * @type {string}\n    */\n   #lastKey = void 0;\n\n   /**\n    * Creates a live binding against the setting stores. All settings are configured by default, but can also be\n    * filtered by setting key with inclusive / exclusive Sets.\n    *\n    * @param {TJSGameSettings}   gameSettings - A game settings instance to subscribe to...\n    *\n    * @param {object}            [options] - TJSLiveGameSettings options.\n    *\n    * @param {Set<string>}       [options.include] - A Set of setting keys to include from subscribing.\n    *\n    * @param {Set<string>}       [options.exclude] - A Set of setting keys to exclude from subscribing.\n    */\n   constructor(gameSettings, { include, exclude } = {})\n   {\n      if (!(gameSettings instanceof TJSGameSettings))\n      {\n         throw new TypeError(`'gameSettings' is not a TJSGameSettings instance.`);\n      }\n\n      if (include !== void 0 && !CrossWindow.isSet(include)) { throw new TypeError(`'options.include' is not a Set.`); }\n      if (exclude !== void 0 && !CrossWindow.isSet(exclude)) { throw new TypeError(`'options.exclude' is not a Set.`); }\n\n      for (const setting of gameSettings.data())\n      {\n         const key = setting.key;\n\n         // Skip any keys that are in the include set.\n         if (include !== void 0 && !include.has(key)) { continue; }\n\n         // Skip any keys that are in the exclude set.\n         if (exclude !== void 0 && exclude.has(key)) { continue; }\n\n         if (typeof this[key] === 'function' || key === 'lastKey')\n         {\n            console.warn(`TJSLiveGameSettings warning: key (${key}) shadows a function. Skipping key.`);\n         }\n\n         const store = gameSettings.getStore(key);\n\n         // Update this instance storing setting data by key.\n         this.#gameSettings.set(key, {\n            store,\n            unsubscribe: store.subscribe((data) =>\n            {\n               if (this.#currentData !== void 0) { this.#currentData[key] = data; }\n\n               this.#lastKey = key;\n\n               // Notify any child instance that a particular key has updated.\n               this._update(key);\n\n               // Notify any readable store subscribers.\n               this.#updateSubscribers(key);\n            })\n         });\n\n         // Define new accessors for setting key.\n         Object.defineProperty(this, key, {\n            get: () =>\n            {\n               if (this.#currentData === void 0)\n               {\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\n               }\n               else\n               {\n                  return this.#currentData[key];\n               }\n            },\n            set: (data) =>\n            {\n               if (this.#currentData === void 0)\n               {\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\n               }\n               else\n               {\n                  this.#gameSettings.get(key).store.set(data);\n               }\n            }\n         });\n      }\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {string} Last updated setting key.\n    */\n   get lastKey()\n   {\n      return this.#lastKey;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Destroys this instance of TJSLiveGameSettings and unsubscribes from all game setting stores.\n    */\n   destroy()\n   {\n      for (const data of this.#gameSettings)\n      {\n         if (typeof data.unsubscribe === 'function') { data.unsubscribe(); }\n      }\n\n      this.#gameSettings.clear();\n      this.#currentData = void 0;\n   }\n\n   /**\n    * Returns an iterator / generator of all setting entries.\n    *\n    * @returns {IterableIterator<[key: string, value: any]>} An iterator returning setting entries.\n    * @yields {[key: string, value: any]}\n    */\n   *entries()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield [key, this.#currentData[key]];\n      }\n   }\n\n   /**\n    * Returns an iterator / generator of all setting keys.\n    *\n    * @returns {IterableIterator<string>} An iterator returning setting keys.\n    * @yields {string}\n    */\n   *keys()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield key;\n      }\n   }\n\n   /**\n    * Returns a string / JSON stringify of the current setting data.\n    *\n    * @returns {string} Tracked setting data.\n    */\n   toString()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      return JSON.stringify(this.#currentData);\n   }\n\n   /**\n    * Override to respond to setting update.\n    *\n    * @param {string} key - The setting / local key that updated.\n    *\n    * @protected\n    */\n   _update(key) {}   // eslint-disable-line no-unused-vars\n\n   /**\n    * Returns an iterator / generator of all values.\n    *\n    * @returns {IterableIterator<any>} An iterator returning setting values.\n    * @yields {any}\n    */\n   *values()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield this.#currentData[key];\n      }\n   }\n\n   // Readable store implementation ----------------------------------------------------------------------------------\n\n   /**\n    * @param {(value: TJSLiveGameSettings, key?: string) => void} handler - Callback function that is invoked on\n    * update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this, void 0);             // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers.\n    *\n    * @param {string} key - The key that was updated.\n    */\n   #updateSubscribers(key)\n   {\n      const subscriptions = this.#subscriptions;\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this, key); }\n   }\n}\n\nexport { TJSGameSettings, TJSLiveGameSettings };\n//# sourceMappingURL=index.js.map\n","import { TJSGameSettings } from '#runtime/svelte/store/fvtt/settings';\nimport { SYSTEM_ID }       from '~/src/helpers/constants';\n\n/**\n * Provides a shared instance of TJSGameSettings across the system\n * @type {TJSGameSettings}\n */\nexport const gameSettings = new TJSGameSettings(SYSTEM_ID);\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { fade, scale }        from 'svelte/transition';\n  import { ApplicationShell } from \"#runtime/svelte/component/application\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import { gameSettings } from '~/src/config/gameSettings';\n\n  export let elementRoot = void 0;\n  export let version = void 0; //- avoid's build errors\n  version; //- avoid's build errors\n\n  const application = getContext('#external').application;\n  const dontShowWelcomeStore = gameSettings.getStore('dontShowWelcome');\n\n  const handleChange = (event) => {\n    game.settings.set(SYSTEM_ID, 'dontShowWelcome', event.target.checked);\n  }\n\n\n  let draggable = application.reactive.draggable;\n  draggable = true\n\n  $: application.reactive.draggable = draggable;\n  $: dontShowWelcome = $dontShowWelcomeStore\n\n  $: game.system.log.d('dontShowWelcome', dontShowWelcome);\n\n  onMount(async () => {\n  });\n  \n</script>\n\n<svelte:options accessors={true}/>\n\n<template lang=\"pug\">\n  ApplicationShell(bind:elementRoot)\n    main\n      .logo-background\n        .texture\n        img(src=\"/systems/foundryvtt-final-fantasy/assets/FF-logo.png\" alt=\"Final Fantasy XIV RPG Logo\" style=\"border: none; width: auto;\")\n      h1 {localize('Welcome.Introduction')}\n      p.lightest \n        i.fa-solid.fa-info-circle.mr-sm\n        a(href=\"https://www.square-enix-shop.com/ffxivttrpg/en/freetrial.html\") {localize(\"Title\")} \n        | {localize(\"Welcome.Released\") }\n        | {localize('Setting.DontShowWelcome.Introduction')}\n      p.lighter\n        i.fa-solid.fa-bug.mr-sm\n        | {localize('Setting.DontShowWelcome.Bugs')} <a href=\"https://github.com/geoidesic/foundryvtt-final-fantasy/issues\"> {localize('Setting.DontShowWelcome.IssuesLinkText')} </a>\n      p \n        i.fa-solid.fa-heart.mr-sm(style=\"color: #660000;\")\n        | {localize('Setting.DontShowWelcome.Support')} <a href='https://github.com/sponsors/geoidesic'> {localize('Setting.DontShowWelcome.SponsorLinkText')} </a> or <a href='https://https://paypal.me/geoidesic'>PayPal</a>\n      \n      //- h1 Help\n      //- p\n      //-   span {localize('Welcome.Issues')}\n      //-   a(href=\"https://github.com/geoidesic/foundryvtt-final-fantasy/issues\") {localize('Welcome.Github')}\n      .flexrow.inset.justify-vertical.mb-sm.dont-show(data-tooltip=\"{localize('Setting.DontShowWelcome.Hint')}\")\n        .flex0\n          input(type=\"checkbox\" on:change=\"{handleChange}\" label=\"{localize('Setting.DontShowWelcome.Name')}\" bind:checked=\"{dontShowWelcome}\") \n        .flex\n          span {localize('Setting.DontShowWelcome.Name')}\n    footer\n      div.right\n        a(href=\"https://www.aardvark.games\")\n          img.white(src=\"/systems/foundryvtt-final-fantasy/assets/aardvark-logo.webp\" alt=\"Aardvark Game Studios Logo\" height=\"50\" width=\"50\" style=\"fill: white; border: none; width: auto;\")\n      div.left\n        h4 {localize(\"Title\")} {localize(\"Welcome.CreatedBy\")} \n        //- a(href=\"https://www.round-table.games\") Round Table Games\n        a(href=\"https://www.aardvark.games\") Aardvark Game Studios\n    \n</template>\n<style lang=\"sass\">\n  @use '../../styles/_mixins' as mixins\n \n  main\n\n    +mixins.inset\n    overflow-y: auto\n    margin-bottom: 5em\n    z-index: 1\n\n    .logo-background\n      +mixins.texture-background\n      +mixins.texture-texture\n        \n\n  .dont-show\n    font-size: smaller\n    input\n      cursor: pointer\n\n  .white\n    filter: invert(1)\n    \n  footer\n    border-top: 8px ridge var(--border-shadow)\n    display: grid\n    grid-template-columns: 1fr 1.5fr\n    position: fixed\n    bottom: 0\n    align-items: center\n    line-height: 1em\n    left: 0\n    right: 0\n    background-color: #333\n    color: white\n    text-align: center\n    padding: 1em\n    font-size: 0.8em\n    z-index: 3\n    img\n      min-width: 100px\n    a\n      color: white\n      text-decoration: underline\n      &:hover\n        color: #ccc\n</style>\n","import { isObject }  from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides the ability the save / restore / serialize application state for positional and UI state such as minimized\n * status.\n *\n * You can restore a saved state with animation; please see the options of {@link ApplicationState.restore}.\n */\nexport class ApplicationState\n{\n   /** @type {object} */\n   #application;\n\n   /**\n    * Stores the current save state key being restored by animating. When a restore is already being animated with the\n    * same name the subsequent restore animation is ignored.\n    *\n    * @type {string | undefined}\n    */\n   #currentRestoreKey;\n\n   /** @type {Map<string, import('./types').ApplicationStateData>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {object}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Clears all saved application state.\n    */\n   clear()\n   {\n      this.#dataSaved.clear();\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {import('./types').ApplicationStateData} Passed in object with current application state.\n    */\n   current(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: this.#application?.reactive?.toJSON(),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Gets any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {import('./types').ApplicationStateData | undefined} Any saved application state.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - get error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} The saved application state names / keys.\n    */\n   keys()\n   {\n      return this.#dataSaved.keys();\n   }\n\n   /**\n    * Removes and returns any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('./types').ApplicationStateData | undefined} Any saved application state.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a previously saved application state by `name` returning the data. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link AnimationAPI.to} and the duration and easing name or function may be specified.\n    *\n    * @param {object}            options - Options.\n    *\n    * @param {string}            options.name - Saved data set name.\n    *\n    * @param {boolean}           [options.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {import('./types').ApplicationStateData | undefined} Any saved application state.\n    */\n   restore({ name, remove = false, animateTo = false, duration = 0.1, ease = 'linear' })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         // Multiple invocations for animated restores are skipped when one is already in progress.\n         if (animateTo && name !== this.#currentRestoreKey)\n         {\n            // Track current restore key name.\n            this.#currentRestoreKey = name;\n\n            this.#setImpl(dataSaved, {\n               animateTo,\n               async: true,\n               duration,\n               ease\n            }).then(() =>\n            {\n               // Reset current restore key name for animation if the same as initial animation initiation.\n               if (name === this.#currentRestoreKey) { this.#currentRestoreKey = void 0; }\n            });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to index this saved state.\n    *\n    * @returns {import('./types').ApplicationStateData} Current saved application state.\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.current(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Sets application state from the given {@link ApplicationStateData} instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link AnimationAPI.to} and the duration and easing name or function may be specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * @param {import('./types').ApplicationStateData}   data - Saved data set name.\n    *\n    * @param {object}         [options] - Optional parameters\n    *\n    * @param {boolean}        [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}         [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    */\n   set(data, options = {})\n   {\n      this.#setImpl(data, { ...options, async: false });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Sets application state from the given {@link ApplicationStateData} instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link AnimationAPI.to} and the duration and easing name or function may be specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {import('./types').ApplicationStateData}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [opts.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {undefined | Promise<void>} When asynchronous the animation Promise.\n    */\n   #setImpl(data, { async = false, animateTo = false, duration = 0.1, ease = 'linear' } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\n         return;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         if (!rendered)\n         {\n            console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\n            return;\n         }\n\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position, {\n            duration,\n            ease,\n            strategy: 'cancelAll'\n         }).finished.then(({ cancelled }) =>\n         {\n            if (cancelled) { return; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently, w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n   }\n}\n","/**\n * Provides a mechanism to retrieve and query all mounted Svelte components including the main application shell.\n */\nexport class GetSvelteData\n{\n   /** @type {import('./types').MountedAppShell[] | null[]} */\n   #applicationShellHolder;\n\n   /** @type {import('./types').SvelteData[]} */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {import('./types').MountedAppShell[] | null[]}  applicationShellHolder - A reference to the\n    *        MountedAppShell array.\n    *\n    * @param {import('./types').SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {import('./types').MountedAppShell | null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return data?.component ?? void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('svelte').SvelteComponent]>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {IterableIterator<import('svelte').SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index - The index of SvelteData instance to retrieve.\n    *\n    * @returns {import('./types').SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {import('svelte').SvelteComponent} component - Svelte component.\n    *\n    * @returns {import('./types').SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('./types').SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<import('./types').SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n","import { writable, get } from 'svelte/store';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  opts.storage - The web storage source.\n *\n * @param {(value: any, ...rest: any[]) => string}  [opts.serialize] - Replace with custom serialization;\n *        default: `JSON.stringify`.\n *\n * @param {(value: string, ...rest: any[]) => any}  [opts.deserialize] - Replace with custom deserialization;\n *        default: `JSON.parse`.\n *\n * @returns {StorageStores} A complete set of store helper functions and associated storage API instance and\n *          serialization strategy.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived,\n        storage,\n        serialize,\n        deserialize\n    };\n}\n\n/**\n * Provides all Storage API enabled `localStorage` store helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.writable;\n\n/**\n * Provides all Storage API enabled `sessionStorage` store helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.writable;\n\n/**\n * Provides the base Storage API store manager. It is recommended to use {@link TJSLocalStorage} &\n * {@link TJSSessionStorage} for standard browser local and session storage use cases. TJSWebStorage exists\n * to provide additional customization options for custom Storage API compatible storage instances and custom\n * serialization configuration.\n *\n * @implements {import('./types').WebStorage}\n */\nclass TJSWebStorage\n{\n   /** @type {import('./').StorageStores} */\n   #storageStores;\n\n   /**\n    * @type {(Map<string, {\n    *    store: import('svelte/store').Writable,\n    *    deserialize?: (value: string, ...rest: any[]) => any,\n    *    serialize?: (value: any, ...rest: any[]) => string\n    * }>)}\n    */\n   #stores = new Map();\n\n   /**\n    * @param {import('./').StorageStores} storageStores - Provides a complete set of\n    *        storage API store helper functions and the associated storage API instance and serializations strategy.\n    */\n   constructor(storageStores)\n   {\n      this.#storageStores = storageStores;\n   }\n\n   /**\n    * Creates a new store for the given key.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The new store.\n    */\n   #createStore(key, defaultValue = void 0, storageStores)\n   {\n      try\n      {\n         const value = this.#storageStores.storage.getItem(key);\n         if (value !== null)\n         {\n            const deserialize = storageStores?.deserialize ?? this.#storageStores.deserialize;\n            defaultValue = deserialize(value);\n         }\n      }\n      catch (err) { /**/ }\n\n      const writable = storageStores?.writable ?? this.#storageStores.writable;\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: string, ...rest: any[]) => any} Deserialize function.\n    */\n   #getDeserialize(key)\n   {\n      return this.#stores.get(key)?.deserialize ?? this.#storageStores.deserialize;\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: any, ...rest: any[]) => string} Serialize function.\n    */\n   #getSerialize(key)\n   {\n      return this.#stores.get(key)?.serialize ?? this.#storageStores.serialize;\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0, storageStores)\n   {\n      const storeEntry = this.#stores.get(key);\n      if (storeEntry) { return storeEntry.store; }\n\n      const store = this.#createStore(key, defaultValue, storageStores);\n\n      // Set any key specific storage helper details.\n      this.#stores.set(key, {\n         store,\n         deserialize: storageStores?.deserialize,\n         serialize: storageStores?.serialize\n      });\n\n      return store;\n   }\n\n   /**\n    * Get value from the storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = this.#storageStores.storage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = this.#getDeserialize(key)(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = this.#getSerialize(key)(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            this.#storageStores.storage.setItem(key, newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {T}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The Svelte store for this key.\n    */\n   getStore(key, defaultValue, storageStores)\n   {\n      return this.#getStore(key, defaultValue, storageStores);\n   }\n\n   /**\n    * Returns whether a store has already been created for the given key.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    */\n   hasStore(key)\n   {\n      return this.#stores.has(key);\n   }\n\n   /**\n    * Sets the value for the given key in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in storage API updating the associated store value.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!this.#getDeserialize(key)(this.#storageStores.storage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n\n   // Iterators ------------------------------------------------------------------------------------------------------\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage keys and stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<[string, import('svelte/store').Writable<T>]>} Iterable iterator of keys and stores.\n    * @yields {import('svelte/store').Writable<[string, Writable<T>]>}\n    */\n   *entries(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield [key, this.getStore(key)]; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield [key, this.getStore(key)]; }\n      }\n   }\n\n   /**\n    * Returns an iterable for the session storage keys from existing stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<string>} Iterable iterator of session storage keys.\n    * @yields {string}\n    */\n   *keys(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield key; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield key; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<import('svelte/store').Writable<T>>} Iterable iterator of stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *stores(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield this.getStore(key); }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield this.getStore(key); }\n      }\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser local storage use cases.\n */\nclass TJSLocalStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(localStores);\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser session storage use cases.\n */\nclass TJSSessionStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(sessionStores);\n   }\n}\n\nexport { TJSLocalStorage, TJSSessionStorage, TJSWebStorage, localStores, sessionStores, storeGenerator };\n//# sourceMappingURL=index.js.map\n","import { derived, writable }     from 'svelte/store';\n\nimport { subscribeIgnoreFirst }  from '@typhonjs-fvtt/runtime/svelte/store/util';\n\nimport {\n   TJSSessionStorage,\n   TJSWebStorage }               from '@typhonjs-fvtt/runtime/svelte/store/web-storage';\n\nimport { propertyStore }         from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                     from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication and retrievable by\n * {@link SvelteApplication.reactive}.\n *\n * There are several reactive getters for UI state such and for two-way bindings / stores see\n * {@link SvelteReactive.storeUIState}:\n * - {@link SvelteReactive.dragging}\n * - {@link SvelteReactive.minimized}\n * - {@link SvelteReactive.resizing}\n *\n * There are also reactive getters / setters for {@link SvelteApplicationOptions} and Foundry\n * {@link ApplicationOptions}. You can use the following as one way bindings and update the associated stores. For\n * two-way bindings / stores see {@link SvelteReactive.storeAppOptions}.\n *\n * - {@link SvelteReactive.draggable}\n * - {@link SvelteReactive.focusAuto}\n * - {@link SvelteReactive.focusKeep}\n * - {@link SvelteReactive.focusTrap}\n * - {@link SvelteReactive.headerButtonNoClose}\n * - {@link SvelteReactive.headerButtonNoLabel}\n * - {@link SvelteReactive.headerIcon}\n * - {@link SvelteReactive.headerNoTitleMinimized}\n * - {@link SvelteReactive.minimizable}\n * - {@link SvelteReactive.popOut}\n * - {@link SvelteReactive.positionable}\n * - {@link SvelteReactive.resizable}\n * - {@link SvelteReactive.title}\n *\n * An instance of TJSWebStorage (session) / TJSSessionStorage is accessible via {@link SvelteReactive.sessionStorage}.\n * Optionally you can pass in an existing TJSWebStorage instance that can be shared across multiple SvelteApplications\n * by setting {@link SvelteApplicationOptions.sessionStorage}.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * This API is not sealed, and it is recommended that you extend it with accessors to get / set data that is reactive\n * in your application. An example of setting an exported prop `document` from the main mounted application shell.\n *\n * @example\n * import { hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\n *\n * // Note: make a normal comment.\n * //  * @member {object} document - Adds accessors to SvelteReactive to get / set the document associated with\n * //  *                             Document with the mounted application shell Svelte component.\n * //  *\n * //  * @memberof SvelteReactive#\n * //  *\n * Object.defineProperty(this.reactive, 'document', {\n *    get: () => this.svelte?.applicationShell?.document,\n *    set: (document) =>\n *    {\n *       const component = this.svelte?.applicationShell;\n *       if (hasSetter(component, 'document')) { component.document = document; }\n *    }\n * });\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {import('../SvelteApplication').SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /** @type {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').WebStorage} */\n   #sessionStorage;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {import('../SvelteApplication').SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n      const optionsSessionStorage = application?.options?.sessionStorage;\n\n      if (optionsSessionStorage !== void 0 && !(optionsSessionStorage instanceof TJSWebStorage))\n      {\n         throw new TypeError(`'options.sessionStorage' is not an instance of TJSWebStorage.`);\n      }\n\n      // If no external web storage API instance is available then create a TJSSessionStorage instance.\n      this.#sessionStorage = optionsSessionStorage !== void 0 ? optionsSessionStorage : new TJSSessionStorage();\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {SvelteReactiveStores | undefined} Internal methods to interact with Svelte stores.\n    * @package\n    * @internal\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiStateUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Store getters -----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').WebStorage} Returns WebStorage (session) instance.\n    */\n   get sessionStorage()\n   {\n      return this.#sessionStorage;\n   }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {import('./types').StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {import('./types').StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current active Window / WindowProxy UI state.\n    *\n    * @returns {Window} Active window UI state.\n    */\n   get activeWindow() { return this.#dataUIState.activeWindow ?? globalThis; }\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n   /**\n    * Sets the current active Window / WindowProxy UI state.\n    *\n    * Note: This is protected usage and used internally.\n    *\n    * @param {Window} activeWindow - Active Window / WindowProxy UI state.\n    */\n   set activeWindow(activeWindow)\n   {\n      // Note: when setting activeWindow to undefined `globalThis` is set. There isn't a great test for Window /\n      // WindowProxy, so check `toString`.\n      if (activeWindow === void 0 || activeWindow === null ||\n       (Object.prototype.toString.call(activeWindow) === '[object Window]'))\n      {\n         this.#storeUIStateUpdate((options) => deepMerge(options, { activeWindow: activeWindow ?? globalThis }));\n      }\n   }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the focusAuto app option.\n    *\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto() { return this.#application?.options?.focusAuto; }\n\n   /**\n    * Returns the focusKeep app option.\n    *\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep() { return this.#application?.options?.focusKeep; }\n\n   /**\n    * Returns the focusTrap app option.\n    *\n    * @returns {boolean} When true focus trapping / wrapping is enabled keeping focus inside app.\n    */\n   get focusTrap() { return this.#application?.options?.focusTrap; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerIcon app option.\n    *\n    * @returns {string|void} URL for header app icon.\n    */\n   get headerIcon() { return this.#application?.options?.headerIcon; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * Returns the Foundry popOut state; {@link Application.popOut}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the positionable app option; {@link SvelteApplicationOptions.positionable}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get positionable() { return this.#application?.options?.positionable; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the title accessor from the parent Application class; {@link Application.title}\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.focusAuto` which is reactive for application shells.\n    *\n    * @param {boolean}  focusAuto - Sets the focusAuto option.\n    */\n   set focusAuto(focusAuto)\n   {\n      if (typeof focusAuto === 'boolean') { this.setOptions('focusAuto', focusAuto); }\n   }\n\n   /**\n    * Sets `this.options.focusKeep` which is reactive for application shells.\n    *\n    * @param {boolean}  focusKeep - Sets the focusKeep option.\n    */\n   set focusKeep(focusKeep)\n   {\n      if (typeof focusKeep === 'boolean') { this.setOptions('focusKeep', focusKeep); }\n   }\n\n   /**\n    * Sets `this.options.focusTrap` which is reactive for application shells.\n    *\n    * @param {boolean}  focusTrap - Sets the focusTrap option.\n    */\n   set focusTrap(focusTrap)\n   {\n      if (typeof focusTrap === 'boolean') { this.setOptions('focusTrap', focusTrap); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerIcon` which is reactive for application shells.\n    *\n    * @param {string | undefined}  headerIcon - Sets the headerButtonNoLabel option.\n    */\n   set headerIcon(headerIcon)\n   {\n      if (headerIcon === void 0 || typeof headerIcon === 'string') { this.setOptions('headerIcon', headerIcon); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.positionable` enabling / disabling {@link SvelteApplication.position}.\n    *\n    * @param {boolean}  positionable - Sets the positionable option.\n    */\n   set positionable(positionable)\n   {\n      if (typeof positionable === 'boolean') { this.setOptions('positionable', positionable); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string | undefined | null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   // Reactive Options API -------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Serializes the main {@link SvelteApplicationOptions} for common application state.\n    *\n    * @returns {import('./types').SvelteReactiveData} Common application state.\n    */\n   toJSON()\n   {\n      return {\n         draggable: this.#application?.options?.draggable ?? true,\n         focusAuto: this.#application?.options?.focusAuto ?? true,\n         focusKeep: this.#application?.options?.focusKeep ?? false,\n         focusTrap: this.#application?.options?.focusTrap ?? true,\n         headerButtonNoClose: this.#application?.options?.headerButtonNoClose ?? false,\n         headerButtonNoLabel: this.#application?.options?.headerButtonNoLabel ?? false,\n         headerNoTitleMinimized: this.#application?.options?.headerNoTitleMinimized ?? false,\n         minimizable: this.#application?.options?.minimizable ?? true,\n         positionable: this.#application?.options?.positionable ?? true,\n         resizable: this.#application?.options?.resizable ?? true\n      };\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the SvelteApplication app options {@link SvelteApplicationOptions.headerButtonNoClose}\n    * to remove the close button and {@link SvelteApplicationOptions.headerButtonNoLabel} to true and labels will be\n    * removed from the header buttons.\n    *\n    * @param {object} [opts] - Optional parameters (for internal use)\n    *\n    * @param {boolean} [opts.headerButtonNoClose] - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} [opts.headerButtonNoLabel] - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * `storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {import('./types').StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         focusAuto: propertyStore(writableAppOptions, 'focusAuto'),\n         focusKeep: propertyStore(writableAppOptions, 'focusKeep'),\n         focusTrap: propertyStore(writableAppOptions, 'focusTrap'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerIcon: propertyStore(writableAppOptions, 'headerIcon'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         positionable: propertyStore(writableAppOptions, 'positionable'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         activeWindow: globalThis,\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {import('./types').StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         // activeWindow: propertyStore(writableUIOptions, 'activeWindow'),\n         activeWindow: derived(writableUIOptions, ($options, set) => set($options.activeWindow)),\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            globalThis.ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete globalThis.ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n}\n\n/**\n * @typedef {object} SvelteReactiveStores\n *\n * @property {(this: void, updater: import('svelte/store').Updater<object>) => void} appOptionsUpdate Update function\n * for app options store.\n *\n * @property {Function} subscribe Subscribes to local stores.\n *\n * @property {(this: void, updater: import('svelte/store').Updater<object>) => void} uiStateUpdate Update function\n * for UI state stores.\n *\n * @property {Function} unsubscribe Unsubscribes from local stores.\n */\n","/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\nexport { applicationShellContract };\n","import { applicationShellContract } from './applicationShellContract.js';\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nexport function isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n","import { TJSSvelteConfigUtil }   from '@typhonjs-fvtt/runtime/svelte/util';\nimport { CrossWindow }           from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\nimport { isApplicationShell }    from './isApplicationShell.js';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            [opts] - Optional parameters.\n *\n * @param {object}            [opts.app] - The target application\n *\n * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig}  [opts.config] - Svelte component options\n *\n * @param {Function}          [opts.elementRootUpdate] - A callback to assign to the external context.\n *\n * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig({ app, config, elementRootUpdate } = {})\n{\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (CrossWindow.isHTMLElement(config.target))\n   {\n      target = config.target;\n   }\n   else if (typeof config.target === 'string')\n   {\n      // Attempt to find target from query selector string.\n      const activeWindow = app?.reactive?.activeWindow;\n      target = activeWindow?.document?.querySelector(config.target);\n   }\n\n   if (!CrossWindow.isHTMLElement(target))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - Could not find target, '${config.target}', for config:\\n`,\n        'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = TJSSvelteConfigUtil.parseConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('#external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n   externalContext.sessionStorage = app.reactive.sessionStorage;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (isObject(app._eventbus) && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Seal external context so that it can't be extended.\n   Object.seal(externalContext);\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   if (!CrossWindow.isHTMLElement(element))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - No application shell contract found. Did you bind and export a HTMLElement ` +\n        `as 'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n         `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   return { config: svelteConfig, component, element };\n}\n","/**\n * Provides an index of all visible rendered {@link SvelteApplication} instances in a given Svelte runtime. This allows\n * bulk operations to be performed across all apps.\n */\nexport class TJSAppIndex\n{\n   /**\n    * Stores all visible / rendered apps.\n    *\n    * @type {Map<string, import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>}\n    */\n   static #visibleApps = new Map();\n\n   /**\n    * Adds a SvelteApplication to all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static add(app)\n   {\n      this.#visibleApps.set(app.id, app);\n   }\n\n   /**\n    * Removes a SvelteApplication from all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static delete(app)\n   {\n      this.#visibleApps.delete(app.id);\n   }\n\n   /**\n    * Gets a particular app by ID.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} Associated app.\n    */\n   static get(key)\n   {\n      return this.#visibleApps.get(key);\n   }\n\n   /**\n    * Returns whether an associated app by ID is being tracked.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {boolean} The given App ID is visible.\n    */\n   static has(key)\n   {\n      return this.#visibleApps.has(key);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} All visible app IDs.\n    */\n   static keys()\n   {\n      return this.#visibleApps.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>} All visible apps.\n    */\n   static values()\n   {\n      return this.#visibleApps.values();\n   }\n}\n","import { TJSPosition }     from '@typhonjs-fvtt/runtime/svelte/store/position';\nimport { TJSSvelteUtil }   from '@typhonjs-fvtt/runtime/svelte/util';\nimport { A11yHelper }      from '@typhonjs-fvtt/runtime/util/a11y';\nimport { CrossWindow }     from '@typhonjs-fvtt/runtime/util/browser';\n\nimport {\n   deepMerge,\n   hasGetter,\n   isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   SvelteReactive,\n   TJSAppIndex }           from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to the Foundry {@link Application} class to manage the app lifecycle\n * appropriately. You can declaratively load one or more components from `defaultOptions` using a\n * {@link TJSSvelteConfig} object in the SvelteApplicationOptions `options` {@link SvelteApplicationOptions.svelte}\n * property.\n *\n * @implements {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionTypes.Positionable}\n */\nexport class SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {import('./internal/state-svelte/types').MountedAppShell[] | null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n    * can correctly be positioned with initial helper constraints (centered).\n    *\n    * @type {boolean}\n    */\n   #gateSetPosition = false;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {TJSPosition}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {import('./internal/state-svelte/types').SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * #svelteData.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {import('./internal/state-reactive/SvelteReactive').SvelteReactiveStores}\n    */\n   #stores;\n\n   /**\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplicationOptions} options - The options for the application.\n    *\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApplication - constructor - No Svelte configuration object found in 'options'.`);\n      }\n\n      /** @type {ApplicationState} */\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize TJSPosition with the position object set by Application.\n      this.#position = new TJSPosition(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve TJSPosition by `this.position`.\n       *\n       * @member {TJSPosition} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (isObject(position)) { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplicationOptions} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    *\n    * @internal\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         focusAuto: true,                 // When true auto-management of app focus is enabled.\n         focusKeep: false,                // When `focusAuto` and `focusKeep` is true; keeps internal focus.\n         focusSource: void 0,             // Stores any A11yFocusSource data that is applied when app is closed.\n         focusTrap: true,                 // When true focus trapping / wrapping is enabled keeping focus inside app.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerIcon: void 0,              // Sets a header icon given an image URL.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: TJSPosition.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true TJSPosition is optimized for orthographic use.\n         positionValidator: TJSPosition.Validators.transformWindow, // A function providing the default validator.\n         sessionStorage: void 0,          // An instance of WebStorage (session) to share across SvelteApplications.\n         svelte: void 0,                  // A Svelte configuration object.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {import('./internal/state-reactive/types').SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {import('./internal/state-app/types').ApplicationState} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {import('./internal/state-svelte/types').GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html :\n       [this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.focus=true] - When true and the active element is not contained in the app `elementTarget`\n    *        is focused..\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    * @ignore\n    * @internal\n    */\n   bringToTop({ focus = true, force = false } = {})\n   {\n      // Only perform bring to top when the active window is the main Foundry window instance.\n      if (this.reactive.activeWindow !== globalThis) { return; }\n\n      if (force || this.popOut) { super.bringToTop(); }\n\n      const elementTarget = this.elementTarget;\n      const activeElement = document.activeElement;\n\n      // If the activeElement is not contained in this app via elementTarget then blur the current active element\n      // and make elementTarget focused.\n      if (focus && elementTarget && activeElement !== elementTarget && !elementTarget?.contains(activeElement))\n      {\n         // Blur current active element.\n         if (A11yHelper.isFocusTarget(activeElement))\n         {\n            activeElement.blur();\n         }\n\n         elementTarget?.focus();\n      }\n\n      globalThis.ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and unregisters references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    *\n    * @ignore\n    * @internal\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el)\n      {\n         /**\n          * @ignore\n          * @internal\n          */\n         this._state = states.CLOSED;\n\n         return;\n      }\n\n      // Support for PopOut! module; `close` is double invoked; once before the element is rejoined to the main window.\n      // Reject close invocations when the element window is not the main originating window / globalThis.\n      if (CrossWindow.getWindow(el, { throws: false }) !== globalThis) { return; }\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSING;\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * Note: JQuery wrapping as Foundry event arguments uses JQuery.\n          */\n         Hooks.call(`close${cls.name}`, this, $(el));\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(TJSSvelteUtil.outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (isObject(eventbus) && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.allSettled(svelteDestroyPromises);\n\n      // Remove from all visible apps tracked.\n      TJSAppIndex.delete(this);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n\n      delete globalThis.ui.windows[this.appId];\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._minimized = false;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._scrollPositions = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store state.\n      this.#stores.uiStateUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n\n      // Apply any stored focus options and then remove them from options.\n      A11yHelper.applyFocusSource(this.options.focusSource);\n\n      delete this.options.focusSource;\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _injectHTML()\n   {\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      // A sanity check; absence should be detected in constructor.\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApplication - _injectHTML - No Svelte configuration object found in 'options'.`);\n      }\n\n      const svelteData = loadSvelteConfig({\n         app: this,\n         config: this.options.svelte,\n         elementRootUpdate\n      });\n\n      // A sanity check as shouldn't hit this case as only one component is being mounted.\n      if (this.svelte.applicationShell !== null)\n      {\n         throw new Error(\n          `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\\n` +\n           `${JSON.stringify(this.options.svelte)}`);\n      }\n\n      this.#applicationShellHolder[0] = svelteData.component;\n\n      // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n      // refreshes. Update the element root accordingly and force an update to TJSPosition.\n      // See this issue for info about `on_hmr`:\n      // https://github.com/sveltejs/svelte-hmr/issues/57\n      if (TJSSvelteUtil.isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n      {\n         svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n      }\n\n      this.#svelteData.push(svelteData);\n\n      // Wrap `elementRoot` as a JQuery object and set to AppV1 / Application element.\n      this._element = $(this.svelte.applicationShell.elementRoot);\n\n      // Detect if the application shell exports an `elementContent` accessor.\n      this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n       this.svelte.applicationShell.elementContent : null;\n\n      // Detect if the application shell exports an `elementTarget` accessor if not set `elementTarget` to\n      // `elementRoot`.\n      this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n       this.svelte.applicationShell.elementTarget : this.svelte.applicationShell.elementRoot;\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      element.classList.remove('minimized');\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteMount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteRemount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link TJSPosition.set}.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _render(force = false, options = {})\n   {\n      // Store any focusSource instance.\n      if (isObject(options?.focusSource)) { this.options.focusSource = options.focusSource; }\n\n      const activeWindow = this.reactive.activeWindow;\n\n      try\n      {\n         if (this._state === Application.RENDER_STATES.NONE &&\n          A11yHelper.isFocusTarget(activeWindow.document.querySelector(`#${this.id}`)))\n         {\n            console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n             }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n            return;\n         }\n      }\n      catch (err)\n      {\n         console.warn(`SvelteApplication - _render: Potentially malformed application ID '${this.id\n          }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      // On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n      // can correctly be positioned with initial helper constraints (centered).\n      this.#gateSetPosition = true;\n\n      await super._render(force, options);\n\n      this.#gateSetPosition = false;\n\n      // Handle the same render exclusion tests that reject a render in Application.\n\n      // Do not render under certain conditions.\n      if ([Application.RENDER_STATES.CLOSING, Application.RENDER_STATES.RENDERING].includes(this._state)) { return; }\n\n      // Applications which are not currently rendered must be forced.\n      if (!force && (this._state <= Application.RENDER_STATES.NONE)) { return; }\n\n      // It is necessary to directly invoke `position.set` as TJSPosition uses accessors and is not a bare object, so\n      // the merging that occurs in `Application._render` does not take effect. Additionally, any of the main\n      // positional properties that are defined as strings such as percentage values need to be set after the element\n      // is mounted.\n      if (!this._minimized)\n      {\n         this.#position.set({\n            left: typeof this.options?.left === 'string' ? this.options.left : void 0,\n            height: typeof this.options?.height === 'string' ? this.options.height : void 0,\n            maxHeight: typeof this.options?.maxHeight === 'string' ? this.options.maxHeight : void 0,\n            maxWidth: typeof this.options?.maxWidth === 'string' ? this.options.maxWidth : void 0,\n            minHeight: typeof this.options?.minHeight === 'string' ? this.options.minHeight : void 0,\n            minWidth: typeof this.options?.minWidth === 'string' ? this.options.minWidth : void 0,\n            rotateX: typeof this.options?.rotateX === 'string' ? this.options.rotateX : void 0,\n            rotateY: typeof this.options?.rotateY === 'string' ? this.options.rotateY : void 0,\n            rotateZ: typeof this.options?.rotateZ === 'string' ? this.options.rotateZ : void 0,\n            rotation: typeof this.options?.rotation === 'string' ? this.options.rotation : void 0,\n            top: typeof this.options?.top === 'string' ? this.options.top : void 0,\n            width: typeof this.options?.width === 'string' ? this.options.width : void 0,\n\n            ...options\n         });\n      }\n\n      if (!this.#onMount)\n      {\n         // Add to visible apps tracked.\n         TJSAppIndex.add(this);\n\n         this.onSvelteMount({\n            elementRoot: /** @type {HTMLElement} */ this._element[0],\n            elementContent: this.#elementContent,\n            elementTarget: this.#elementTarget\n         });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Provide an empty JQuery element per the core Foundry API.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderInner()\n   {\n      const activeWindow = this.reactive.activeWindow;\n\n      const html = activeWindow.document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition.set}. This allows position to be\n    * fully reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link TJSPosition.validators} / ValidatorAPI functionality.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/store/position').Data.TJSPositionDataRelative}   [position] - TJSPosition data.\n    *\n    * @returns {TJSPosition} The updated position object for the application containing the new values.\n    * @ignore\n    */\n   setPosition(position)\n   {\n      return !this.#gateSetPosition ? this.position.set(position) : this.position;\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n             this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n\n         this.onSvelteRemount({\n            elementRoot: /** @type {HTMLElement} */ this._element[0],\n            elementContent: this.#elementContent,\n            elementTarget: this.#elementTarget\n         });\n      }\n   }\n}\n","import { SvelteApplication } from '../SvelteApplication.js';\n\n/**\n * Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\n */\nexport class PopoutSupport\n{\n   static initialize()\n   {\n      Hooks.on('PopOut:loading', (app, popout) =>\n      {\n         if (app instanceof SvelteApplication)\n         {\n            // Disable app position system.\n            app.position.enabled = false;\n\n            // Save current `headerButtonNoClose` state.\n            app.state.save({\n               name: '#beforePopout',\n               headerButtonNoClose: app.reactive.headerButtonNoClose\n            });\n\n            // Set the apps active window to the popout browser window.\n            app.reactive.activeWindow = popout;\n\n            // Disable the close button.\n            app.reactive.headerButtonNoClose = true;\n         }\n      });\n\n      Hooks.on('PopOut:popin', (app) => this.#handleRejoin(app));\n      Hooks.on('PopOut:close', (app) => this.#handleRejoin(app));\n   }\n\n   /**\n    * Handles rejoining the app to main browser window.\n    *\n    * @param {Application} app - The target app.\n    */\n   static #handleRejoin(app)\n   {\n      if (app instanceof SvelteApplication)\n      {\n         // Enable the app position system.\n         app.position.enabled = true;\n\n         // Restore the initial header button no close state.\n         const beforeData = app.state.remove({ name: '#beforePopout' });\n         if (beforeData) { app.reactive.headerButtonNoClose = beforeData?.headerButtonNoClose ?? false; }\n\n         // Reset the apps active window to the main `globalThis` reference.\n         app.reactive.activeWindow = void 0;\n      }\n   }\n}\n","import {\n   FoundryHMRSupport,\n   PopoutSupport }   from './external/index.js';\n\nexport * from './SvelteApplication.js';\nexport * from './TJSDialog.js';\n\n// Handle `hotReload` Foundry hook when running the Vite dev server.\nif (import.meta.hot) { FoundryHMRSupport.initialize(); }\n\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\nPopoutSupport.initialize();\n\n// From: SvelteApplication.js ----------------------------------------------------------------------------------------\n\n/**\n * @typedef {object} SvelteApplicationOptions Options for SvelteApplication. Note: that this extends the Foundry\n * {@link ApplicationOptions}.\n *\n * @property {boolean}  [defaultCloseAnimation=true] If false the default slide close animation is not run.\n *\n * @property {boolean}  [draggable=true] If true then application shells are draggable.\n *\n * @property {boolean}  [focusAuto=true] When true auto-management of app focus is enabled.\n *\n * @property {boolean}  [focusKeep=false] When `focusAuto` and `focusKeep` is true; keeps internal focus.\n *\n * @property {import('@typhonjs-fvtt/runtime/util/a11y').A11yFocusSource}   [focusSource] - Defines A11yHelper focus source to\n *           apply when application closes.\n *\n * @property {boolean}  [focusTrap=true] When true focus trapping / wrapping is enabled keeping focus inside app.\n *\n * @property {boolean}  [headerButtonNoClose=false] If true then the close header button is removed.\n *\n * @property {boolean}  [headerButtonNoLabel=false] If true then header button labels are removed.\n *\n * @property {string}   [headerIcon] Sets a header icon given an image URL.\n *\n * @property {boolean}  [headerNoTitleMinimized=false] If true then header title is hidden when minimized.\n *\n * @property {number}   [minHeight=MIN_WINDOW_HEIGHT] Assigned to position. Number specifying minimum\n *           window height.\n *\n * @property {number}   [minWidth=MIN_WINDOW_WIDTH] Assigned to position. Number specifying minimum\n *           window width.\n *\n * @property {boolean}  [positionable=true] If false then `position.set` does not take effect.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').System.Initial.InitialSystem}   [positionInitial] A helper for\n *           initial position placement.\n *\n * @property {boolean}  [positionOrtho=true] When true TJSPosition is optimized for orthographic use.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').ValidatorAPI.ValidatorOption}   [positionValidator] A validator\n *           function or data or list of validators.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').WebStorage}   [sessionStorage] An instance of\n *           WebStorage (session) to share across SvelteApplications. This is only required to share a WebStorage\n *           instance across multiple SvelteApplications. By default, a unique {@link TJSSessionStorage} instance is\n *           created per SvelteApplication.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig}   [svelte] A Svelte configuration object defining\n *           the main component.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').TransformAPI.TransformOrigin}   [transformOrigin='top left'] By\n *           default, 'top / left' respects rotation when minimizing.\n */\n","import WelcomeAppShell from './WelcomeAppShell.svelte';\nimport { SvelteApplication } from \"#runtime/svelte/application\";\nimport { version } from \"~/system.json\";\nimport { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\"\n\n/**\n * Welcome application that displays system information and welcome message\n * @extends {SvelteApplication}\n */\nexport default class WelcomeApplication extends SvelteApplication\n{\n   /**\n    * Default Application options\n    * @return {object} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    */\n   static get defaultOptions()\n   {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         id: `${SYSTEM_ID}--welcome`,\n         classes: [SYSTEM_CODE],\n         resizable: true,\n         minimizable: true,\n         width: 600,\n         height: 700,\n         // headerIcon: 'systems/foundryvtt-final-fantasy/assets/critical.svg',\n         title: game.i18n.localize(`${SYSTEM_CODE}.SystemName`)+' v'+version,\n         svelte: {\n            class: WelcomeAppShell,\n            target: document.body,\n            intro: true,\n            props: {\n               version  // A prop passed to HelloFoundryAppShell for the initial message displayed.\n            }\n         }\n      });\n   }\n}","import WelcomeApplication from \"~/src/components/applications/WelcomeApplication\"\nimport { SYSTEM_ID } from \"~/src/helpers/constants\"\n\n/**\n * Hook that runs when the system is ready\n * @return {void}\n */\nexport default function canvasReady() {\n  Hooks.once(\"ready\", async () => {\n    if (!game.settings.get(SYSTEM_ID, 'dontShowWelcome')) {\n      new WelcomeApplication().render(true, { focus: true });\n    }\n  });\n}","import { SYSTEM_ID } from \"~/src/helpers/constants\";\nimport { localize } from '~/src/helpers/util'\nimport { gameSettings } from '~/src/config/gameSettings';\n\n/**\n * Registers all game settings for the system.\n * This function initializes various user and world settings that control\n * system behavior and preferences.\n * @return {void}\n */\nexport function registerSettings() {\n  /** User settings */\n  dontShowWelcome();\n  applicationWindowHeaderIconsOnly()\n  confirmBeforeDeletingActorItem()\n  chatMessageSound()\n  showStatusEffectNames()\n  manualInitiative()\n  showChatProfileImages()\n  chatMessageSenderIsActorOwner()\n  automaticUses()\n  defaultChatDescriptionVisible()\n}\n\n/**\n * Some abilities have limitations on how many times they can be used.\n * This setting controls whether the system should automatically deduct uses from the actor's pool when an ability is used.\n * If disabled, the user will be prompted to deduct uses from the actor's pool when an ability is used.\n * @return {void}\n */\nfunction automaticUses() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'automaticUses',\n    options: {\n      name: localize('Setting.automaticUses.Name'),\n      hint: localize('Setting.automaticUses.Hint'),\n      scope: 'user',\n      config: true,\n      default: true,\n      type: Boolean\n    }\n  });\n}\n\n\n/**\n * Controls whether chat messages should display the actor owner as the sender.\n * When enabled, chat messages will show the owner of the associated actor\n * rather than the current user.\n * @return {void}\n */\nfunction chatMessageSenderIsActorOwner() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'chatMessageSenderIsActorOwner',\n    options: {\n      name: localize('Setting.chatMessageSenderIsActorOwner.Name'),\n      hint: localize('Setting.chatMessageSenderIsActorOwner.Hint'),\n      scope: 'user',\n      config: true,\n      default: true,\n      type: Boolean\n    }\n  });\n}\n\n/**\n * Configures whether initiative should be manually entered.\n * When enabled, allows users to manually input initiative values instead\n * of using automatic calculations.\n * @return {void}\n */\nfunction manualInitiative() {\n\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'manual-initiative',\n    options: {\n      name: localize('Setting.ManualInitiative.Name'),\n      hint: localize('Setting.ManualInitiative.Hint'),\n      scope: 'world',\n      config: true,\n      default: true,\n      type: Boolean\n    }\n  });\n}\n\n/**\n * Controls the visibility of status effect names.\n * When enabled, displays the names of status effects alongside their icons\n * in the interface.\n * @return {void}\n */\nfunction showStatusEffectNames() {\n\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'show-status-effect-names',\n    options: {\n      name: localize('Setting.ShowStatusEffects.Name'),\n      hint: localize('Setting.ShowStatusEffects.Hint'),\n      scope: 'world',\n      config: true,\n      default: true,\n      type: Boolean\n    }\n  });\n}\n\n/**\n * Controls whether to show the welcome message on startup.\n * Users can disable the welcome message to prevent it from appearing\n * each time they start the system.\n * @return {void}\n */\nfunction dontShowWelcome() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'dontShowWelcome',\n    options: {\n      name: localize('Setting.DontShowWelcome.Name'),\n      hint: localize('Setting.DontShowWelcome.Hint'),\n      scope: 'user',\n      config: true,\n      default: false,\n      type: Boolean\n    }\n  });\n}\n\n/**\n * Controls the display of application window headers.\n * When enabled, shows only icons in application window headers\n * instead of both icons and text.\n * @return {void}\n */\nfunction applicationWindowHeaderIconsOnly() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'applicationWindowHeaderIconsOnly',\n    options: {\n      name: localize('Setting.applicationWindowHeaderIconsOnly.Name'),\n      hint: localize('Setting.applicationWindowHeaderIconsOnly.Hint'),\n      scope: 'user',\n      config: true,\n      default: false,\n      type: Boolean\n    }\n  });\n}\n\n/**\n * Sets whether to show a confirmation dialog before deleting actor items.\n * Helps prevent accidental deletion of items from actor sheets.\n * @return {void}\n */\nfunction confirmBeforeDeletingActorItem() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'confirmBeforeDeletingActorItem',\n    options: {\n      name: localize('Setting.confirmBeforeDeletingActorItem.Name'),\n      hint: localize('Setting.confirmBeforeDeletingActorItem.Hint'),\n      scope: 'user',\n      config: true,\n      default: true,\n      type: Boolean\n    }\n  });\n}\n\n/**\n * Configures the sound played for chat messages.\n * Allows users to set a custom notification sound for\n * when new chat messages are received.\n * @return {void}\n */\nfunction chatMessageSound() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'chatMessageSound',\n    options: {\n      name: localize('Setting.chatMessageSound.Name'),\n      hint: localize('Setting.chatMessageSound.Hint'),\n      scope: 'user',\n      config: true,\n      default: 'sounds/notify.wav',\n      type: String,\n      filePicker: \"any\",\n    }\n  });\n}\n\n/**\n * Controls the visibility of profile images in chat messages.\n * When enabled, shows user/actor profile images alongside\n * their chat messages.\n * @return {void}\n */\nfunction showChatProfileImages() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'showChatProfileImages',\n    options: {\n      name: localize('Setting.showChatProfileImages.Name'),\n      hint: localize('Setting.showChatProfileImages.Hint'),\n      scope: 'user',\n      config: true,\n      default: true,\n      type: Boolean\n    }\n  });\n}\n\n/**\n * Controls whether chat descriptions are visible by default.\n * When enabled, automatically expands description sections in\n * chat messages instead of requiring manual expansion.\n * @return {void}\n */\nfunction defaultChatDescriptionVisible() {\n  gameSettings.register({\n    namespace: SYSTEM_ID,\n    key: 'defaultChatDescriptionVisible',\n    options: {\n      name: localize('Setting.DefaultChatDescriptionVisible.Name'),\n      hint: localize('Setting.DefaultChatDescriptionVisible.Hint'),\n      scope: 'world',\n      config: true,\n      default: false,\n      type: Boolean\n    }\n  });\n}","/**\n * Base data model for all system types\n * @extends {foundry.abstract.TypeDataModel}\n */\nexport class FFTypeDataModel extends foundry.abstract.TypeDataModel {\n  /**\n   * Defines the base schema for all data models\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n    }\n  }\n}","import { FFTypeDataModel } from '~/src/models/BaseModel';\n\nconst {\n  HTMLField, SchemaField, NumberField, BooleanField, ArrayField, StringField\n} = foundry.data.fields;\n\n/**\n * Base actor data model that provides common functionality for all actor types\n * @extends {FFTypeDataModel}\n */\nexport class FFActorDataModel extends FFTypeDataModel {\n  /**\n   * Defines the base schema for actor data models\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      isEditing: new BooleanField({initial: false}),\n      hasMoved: new BooleanField({initial: false}),\n      inventoryLocked: new BooleanField({ initial: false }),\n      effectActionsLocked: new BooleanField({ initial: false }),\n      description: new HTMLField(),\n      DOT: new NumberField({ required: true, integer: true, min: 0, initial: 0 }),\n      globalCheckMod: new NumberField({ required: true, integer: true, min: 0, initial: 0 }),\n      points: new SchemaField({\n        MP: new SchemaField({\n          val: new NumberField({ required: true, integer: true, initial: 0 }),\n          max: new NumberField({ required: true, integer: true, initial: 0 })\n        }),\n        HP: new SchemaField({\n          val: new NumberField({ required: true, integer: true, min: 0, initial: 0 }),\n          max: new NumberField({ required: true, integer: true, min: 0, initial: 0 })\n        }),\n        BP: new SchemaField({\n          val: new NumberField({ required: true, integer: true, min: 0, initial: 0 })\n        })\n      }),\n      attributes: new SchemaField({\n        primary: new SchemaField({\n          str: new SchemaField({\n            //- @deprecated: I think `label` is in the wrong place? Should maybe just be in the svelte template as it is a constant, not data\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.str.Label') }),\n            val: new NumberField({ required: true, integer: true, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, initial: 0 })\n          }),\n          dex: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.dex.Label') }),\n            val: new NumberField({ required: true, integer: true, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, initial: 0 })\n          }),\n          vit: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.vit.Label') }),\n            val: new NumberField({ required: true, integer: true, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, initial: 0 })\n          }),\n          int: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.ing.Label') }),\n            val: new NumberField({ required: true, integer: true, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, initial: 0 })\n          }),\n          mnd: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.mnd.Label') }),\n            val: new NumberField({ required: true, integer: true, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, initial: 0 })\n          }),\n        }),\n        secondary: new SchemaField({\n          def: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.def.Label') }),\n            val: new NumberField({ required: true, integer: true, min: 0, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, min: 0, initial: 0 })\n          }),\n          mag: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.mag.Label') }),\n            val: new NumberField({ required: true, integer: true, min: 0, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, min: 0, initial: 0 })\n          }),\n          vig: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.vig.Label') }),\n            val: new NumberField({ required: true, integer: true, min: 0, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, min: 0, initial: 0 })\n          }),\n          spd: new SchemaField({\n            // label: new StringField({ initial: localize('FFXIV.Types.Actor.Types.PC.Attributes.Primary.spd.Label') }),\n            val: new NumberField({ required: true, integer: true, min: 0, initial: 0 }),\n            mod: new NumberField({ required: true, integer: true, min: 0, initial: 0 })\n          }),\n        }),\n      })\n    }\n  }\n\n  /** \n   * Check if the actor has any favourited items\n   * @return {boolean} True if the actor has any favourited items\n   */\n  hasFavouriteItems() {\n    return this.parent.items.some(item => item.system.favourite === true);\n  }\n}","import { FFActorDataModel } from './baseActor';\n\nconst {\n  StringField\n} = foundry.data.fields;\n\n/**\n * Data model for NPC actors\n * @extends {FFActorDataModel}\n */\nexport class NPCModel extends FFActorDataModel {\n  /**\n   * Defines the schema for NPC data\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      size: new StringField({ initial: \"\" }),\n    }\n  }\n}\n\n","import { FFActorDataModel } from './baseActor';\n\nconst {\n  HTMLField, SchemaField, NumberField, StringField, ArrayField, BooleanField\n} = foundry.data.fields;\n\n/**\n * Data model for Player Character actors\n * @extends {FFActorDataModel}\n */\nexport class PCModel extends FFActorDataModel {\n  /**\n   * Defines the schema for PC data\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      biography: new HTMLField(),\n      job: new SchemaField({\n        uuid: new StringField({ required: true, initial: '' }),\n        grants: new ArrayField(\n          new StringField({ required: true, initial: '' })\n        ),\n        level: new NumberField({ required: true, integer: true, min: 30, initial: null }),\n        role: new StringField({ required: true, initial: '' }),\n        name: new StringField({ required: true, initial: '' }),\n        img: new StringField({ required: true, initial: '' })\n      }),\n      actionState: new SchemaField({\n        available: new ArrayField(new StringField(), {\n          initial: ['primary', 'secondary']\n        }),\n        used: new ArrayField(new SchemaField({\n          type: new StringField({ required: true }),\n          messageId: new StringField({ required: true })\n        }), {\n          initial: []\n        }),\n        usedReaction: new BooleanField({ required: true, initial: false })\n      })\n    }\n  }\n}","import { FFTypeDataModel } from \"~/src/models/BaseModel\";\n\nconst { HTMLField, BooleanField, StringField, NumberField, ArrayField, SchemaField } = foundry.data.fields;\n\n/**\n * Base data model for all item types\n * @extends {FFTypeDataModel}\n */\nexport class FFItemDataModel extends FFTypeDataModel {\n  /**\n   * Defines the base schema for item data models\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),  // Include the schema from the base class\n      description: new HTMLField(),\n      favourite: new BooleanField({ initial: false }),\n      effectActionsLocked: new BooleanField({ initial: false }),\n      durations: new ArrayField(new SchemaField({\n        type: new StringField({ required: false }),\n        amount: new NumberField({ required: false, integer: true }),\n        units: new StringField({ required: false }),\n        qualifier: new StringField({ required: false })\n      }), { initial: [] }),\n    };\n  }\n}\n","import { FFItemDataModel } from './baseItem';\n\nconst {\n  SchemaField, NumberField, StringField, BooleanField, ObjectField, ArrayField\n} = foundry.data.fields;\n\n/**\n * Data model for Action items\n * @extends {FFItemDataModel}\n */\nexport class ActionModel extends FFItemDataModel {\n\n  /**\n   * Defines the schema for Action items\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),  // Merge with the base model schema\n      hasAspected: new BooleanField({ required: false, initial: false }),\n      aspected: new StringField({ required: false, initial: '' }),\n      hasRanged: new BooleanField({ required: false, initial: false }),\n      rangeType: new StringField({ required: false, initial: '' }),\n      hasTrigger: new BooleanField({ required: false, initial: false }),\n      trigger: new StringField({ required: false, initial: '' }),\n      hasTarget: new BooleanField({ required: false, initial: false }),\n      target: new StringField({ required: false, initial: '' }),\n      baseEffectHealing: new StringField({ required: false, initial: '' }),\n      baseEffectHealingType: new StringField({ required: false, initial: '' }),\n      baseEffectDamage: new StringField({ required: false, initial: '' }),\n      hasBaseEffect: new BooleanField({ required: false, initial: false }),\n      hasBaseEffectHealing: new BooleanField({ required: false, initial: false }),\n      hasBaseEffectDamage: new BooleanField({ required: false, initial: false }),\n      hasBaseEffectRestoreMP: new BooleanField({ required: false, initial: false }),\n      baseEffectRestoreMP: new StringField({ required: false, initial: '' }),\n      hasBaseEffectBarrier: new BooleanField({ required: false, initial: false }),\n      baseEffectBP: new NumberField({ required: false, initial: 0 }),\n      hasCheck: new BooleanField({ required: false, initial: false }),\n      checkAttribute: new StringField({ required: false, initial: '' }),\n      checkBonus: new NumberField({ required: false, initial: 0 }),\n      hasCR: new BooleanField({ required: false, initial: false }),\n      CR: new StringField({ required: false, initial: '' }),\n      hasDirectHit: new BooleanField({ required: false, initial: false }),\n      directHitType: new StringField({ required: false, initial: '' }),\n      directHitDamage: new StringField({ required: false, initial: '' }),\n      directHitText: new StringField({ required: false, initial: '' }),\n      directHitCondition: new StringField({ required: false, initial: '' }),\n      hasLimitation: new BooleanField({ required: false, initial: false }),\n      limitation: new NumberField({  required: false, initial: 0, integer: true, min: 0, max: 3 }),\n      limitationUnits: new StringField({ required: false, initial: \"phase\" }),\n      uses: new NumberField({ required: false, initial: 0, integer: true, min: 0 }),\n      type: new StringField({ \n        required: false, \n        choices: ['primary', 'secondary', 'reaction', 'limit', 'combo']\n      }),\n      hasSplitDamage: new BooleanField({ required: false, initial: false }),\n      hasCostMP: new BooleanField({ required: false, initial: false }),\n      costMP: new NumberField({ required: false, initial: 0 }),\n      procTrigger: new NumberField({ required: false, initial: null }),\n      procs: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n      grants: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n      sourceGrants: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n      requires: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n      sharedLimitation: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n      removes: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n      enables: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n      hasTags: new BooleanField({ required: false, initial: false }),\n      tags: new ArrayField(\n        new StringField({ required: false, initial: '' })\n      ),\n      isMagic: new BooleanField({ required: false, initial: false }),\n    };\n  }\n}","import { FFItemDataModel } from './baseItem';\n\nconst { NumberField, StringField } = foundry.data.fields;\n\n/**\n * Data model for Equipment items\n * @extends {FFItemDataModel}\n */\nexport class EquipmentModel extends FFItemDataModel {\n  /**\n   * Defines the schema for Equipment items\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),  // Merge with the base model schema\n      quantity: new NumberField({ required: false, integer: true, min: 0, initial: 1 }),\n      actionType: new StringField({ \n        required: true, \n        choices: ['primary', 'secondary'], \n        initial: 'secondary' \n      }),\n    };\n  }\n}","import { FFItemDataModel } from './baseItem';\n\nconst {\n  SchemaField, NumberField, StringField, BooleanField, ObjectField, ArrayField\n} = foundry.data.fields;\n\n/**\n * Data model for Job items\n * @extends {FFItemDataModel}\n */\nexport class JobModel extends FFItemDataModel {\n  /**\n   * Defines the schema for Job items\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),  // Merge with the base model schema\n      level: new NumberField({ required: true, initial: 0 }),\n      role: new StringField({ required: true, initial: '' }),\n      grants: new SchemaField({\n        list: new ArrayField(\n          new ObjectField({ // Use ObjectField to allow storing objects\n            fields: {\n              uuid: new StringField({ required: true, initial: '' })\n            }\n          })\n        ),\n        value: new BooleanField({ required: true, initial: false })\n      }),\n    }\n  }\n}\n","import { FFItemDataModel } from './baseItem';\n\nconst {\n  SchemaField, NumberField, StringField, BooleanField, ArrayField\n} = foundry.data.fields;\n\n/**\n * Data model for Trait items\n * @extends {FFItemDataModel}\n */\nexport class TraitModel extends FFItemDataModel {\n  /**\n   * Defines the schema for Trait items\n   * @return {object} The schema definition object\n   */\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),  // Merge with the base model schema\n      type: new StringField({ required: false, initial: '' }),\n      hasLimitation: new BooleanField({ required: false, initial: false }),\n      limitation: new NumberField({ required: false, initial: 0, integer: true, min: 0, max: 3 }),\n      limitationUnits: new StringField({ required: false, initial: \"phase\" }),\n      uses: new NumberField({ required: false, initial: 0, integer: true, min: 0 }),\n      hasModifier: new BooleanField({ required: false, initial: false }),\n      modType: new StringField({ required: false, initial: '' }),\n      operator: new StringField({ required: false, initial: '+' }),\n      modAmount: new NumberField({ required: false, initial: 0 }),\n      hasDamageDiceReroll: new BooleanField({ required: false, initial: false }),\n      damageDiceReroll: new NumberField({ required: false, initial: 0, integer: true, min: 0, max: 3 }),\n      hasTags: new BooleanField({ required: false, initial: false }),\n      tags: new ArrayField(\n        new StringField({ required: false, initial: '' })\n      ),\n      sacrificesMovement: new BooleanField({ required: false, initial: false }),\n    };\n  }\n\n}","import { NPCModel } from \"../models/actors/NPC\";\nimport { PCModel } from \"../models/actors/PC\";\nimport { ActionModel } from \"../models/items/Action\";\nimport { EquipmentModel } from \"../models/items/Equipment\";\nimport { JobModel } from \"../models/items/Job\";\nimport { TraitModel } from \"../models/items/Trait\";\n\n/**\n * Configure all of our system documents\n * @return {void}\n */\nexport function setupModels() {\n    // Setup models\n    CONFIG.Item.dataModels[\"job\"] = JobModel;\n    CONFIG.Item.dataModels[\"action\"] = ActionModel;\n    CONFIG.Item.dataModels[\"trait\"] = TraitModel;\n    CONFIG.Item.dataModels[\"equipment\"] = EquipmentModel;\n\n    CONFIG.Actor.dataModels[\"PC\"] = PCModel;\n    CONFIG.Actor.dataModels[\"NPC\"] = NPCModel;\n}","<svelte:options accessors={true} />\n\n<script>\n  import { onMount, getContext, createEventDispatcher } from \"svelte\";\n  import { resolveDotpath, formatDotpath } from \"~/src/helpers/paths\";\n\n  const dispatch = createEventDispatcher();\n\n  export let options = void 0; //- {value: string, label: string}[]\n  export let valuePath = \"\";\n  export let document = false;\n  export let preventDefault = false;\n  export let disabled = false;\n  export let label = \"\";\n  export let callback = void 0;\n  export let handleOwnUpdates = true;\n\n  let inputValue = null, // Initialize to null to avoid preselection\n    LABEL = !!label,\n    inputElement,\n    pulseClass = \"\";\n    \n  // Document reference\n  const doc = document || getContext(\"#doc\");\n\n  const update = async () => {\n    if (preventDefault) return;\n    \n    if (handleOwnUpdates) {\n      const updateObj = {};\n      foundry.utils.setProperty(updateObj, valuePath, inputValue);\n\n      game.system.log.b('DocSelect:updateObj', updateObj);\n      await $doc.update(updateObj);\n      game.system.log.b($doc)\n      if (callback) await callback(inputValue);\n    } else {\n      dispatch('change', { value: inputValue, path: valuePath });\n    }\n  };\n\n  onMount(() => {\n    inputValue = resolveDotpath($doc, valuePath);\n  });\n</script>\n\n<select {...$$restProps} bind:value={inputValue} on:change={update} {disabled}>\n  <!-- Placeholder option when nothing is selected -->\n  <option value=\"\" disabled selected={!inputValue}>Please select an option</option>\n  \n  {#if options && options.length}\n    {#each options as option}\n      <option value={option.value}>\n        {option.label}\n      </option>\n    {/each}\n  {/if}\n  <slot />\n</select>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n\n  select \n    +mixins.input\n\n    &:disabled \n      +mixins.input-disabled\n\n    &.short\n      height: inherit\n</style>\n","<script>\n  import { getContext, onMount, tick, createEventDispatcher } from \"svelte\";\n  import { Timing } from \"#runtime/util\";\n  import { resolveDotpath } from \"~/src/helpers/paths\";\n\n  const dispatch = createEventDispatcher();\n\n  // For empty state display\n  export let placeholder = \"--\";\n  // For input length constraints\n  export let maxlength = \"40\";\n  // For targeting specific document properties\n  export let valuePath = \"\";\n  // For accessibility and form organization\n  export let label = \"\";\n  // When you need to override the default document context\n  export let document = false;\n  // For controlling edit state\n  export let editable = false;\n  // For input validation and formatting\n  export let type = \"standard\";\n  // For controlling click behavior\n  export let clickType = \"click\";\n  // For visual feedback when values change\n  export let pulse = false;\n  // For real-time update behavior\n  export let updateOnInput = false;\n  // For controlling input state\n  export let enabled = false;\n  // For custom styling of the output text\n  export let textClasses = \"\";\n  // For cases where you want the input to always be in edit mode\n  export let alwaysEditable = false;\n  // For layout control\n  export let fullWidth = false;\n  // For UX patterns where immediate updates would be disruptive\n  export let updateOnBlur = false;\n  // Set to false when DocInput should not update the document directly\n  export let handleOwnUpdates = true;\n\n  let inputValue,\n    LABEL = !!label,\n    inputElement,\n    pulseClass = \"\",\n    initialRender = true,\n    internalUpdate = false,\n    externalValue,\n    displayValue = \"\";\n\n  const doc = document || getContext(\"#doc\");\n  const updateDebounce = Timing.debounce(update, 500);\n\n  function handleKeyDown(event, index) {\n    game.system.log.d('DocInput keydown: ' + event.key);\n    if (!updateOnBlur && event.key === \"Enter\") {\n        event.preventDefault();\n        inputElement.blur();\n        editable = false;\n        update(event);\n    }\n  }\n\n  function handleBlur(event, index) {\n    game.system.log.d('DocInput blurring');\n    if (!alwaysEditable) {\n      editable = false;\n      enabled = false;\n    }\n    if (updateOnBlur) {\n      if (handleOwnUpdates) {\n        update(event);\n      } else {\n        dispatch('change', { value: event.target.value, path: valuePath });\n      }\n    }\n  }\n\n  async function enableInput(event) {\n    if(enabled || alwaysEditable) return;\n    enabled = true;\n    console.log('enableInput', event);\n    if (event.key === 'Space') {\n        console.log('space');\n        event.preventDefault();\n        return;\n    }\n    editable = true;\n    await tick();\n\n    inputElement.focus();\n    inputElement.select();\n  }\n \n  function handleButtonKeyDown(event) {\n    if (event.key === \" \") {\n        event.preventDefault(); // Prevent space from triggering the button click\n    }\n  }\n\n  async function update(event) {\n    internalUpdate = true;\n    let val = event.target.value;\n    if(type == 'number' && $$props.max !== undefined && val > $$props.max) {\n      val = $$props.max;\n      ui.notifications.warn(`Value cannot exceed ${$$props.max}`);\n    }\n    if(type == 'number' &&  $$props.min !== undefined && val < $$props.min) {\n      val = $$props.min;\n      ui.notifications.warn(`Value cannot exceed ${$$props.min}`);\n    }\n    inputValue = type == 'number' ? Number(val) : val;\n\n    if (handleOwnUpdates) {\n      await $doc.update({[valuePath]: val});\n      if (pulse) {\n        pulseClass = \"pulse\";\n        setTimeout(() => pulseClass = \"\", 1000);\n      }\n      enabled = false;\n    } else {\n      dispatch('change', { value: val, path: valuePath });\n    }\n    internalUpdate = false;\n  }\n\n  $: {\n    if (!internalUpdate) {\n      externalValue = resolveDotpath($doc, valuePath) ?? \"\";\n    }\n  }\n\n  $: {\n    if (!internalUpdate && !initialRender && externalValue !== inputValue) {\n      inputValue = type == 'number' ? Number(externalValue) : externalValue;\n    }\n  }\n\n  $: {\n    displayValue = inputValue === undefined || inputValue === '' || inputValue == 0 ? '' : inputValue;\n  }\n\n  $: isEmpty = inputValue === '';\n  $: hasFocus = inputElement === document.activeElement;\n  $: editable = alwaysEditable || editable;\n\n  onMount(async () => {\n    const resolved = resolveDotpath($doc, valuePath);\n    inputValue = resolved ?? \"\";\n    \n    initialRender = false;\n    if($$props.type == 'number') {\n      inputValue = Number(inputValue);\n      if( placeholder == '--'){\n        placeholder = 0;\n      }\n    }\n  });\n\n</script>\n\n<template lang=\"pug\">\n+if(\"alwaysEditable\")\n  .flexrow.gap-15(class=\"{fullWidth ? 'wide' : ''}\")\n    +if(\"LABEL\")\n      .flex1.wide\n        label.bold.gold(for=\"{inputElement?.id}\") {label} \n    .flex5.wide\n    \n      input({...$$restProps} type=\"{$$props.type}\" bind:this=\"{inputElement}\" value=\"{inputValue}\" on:keydown|stopPropagation=\"{handleKeyDown}\" on:input|stopPropagation!=\"{updateOnInput ? updateDebounce : () => {}}\" on:blur|stopPropagation=\"{handleBlur}\" placeholder=\"{placeholder}\" maxlength=\"{maxlength}\")\n+if(\"!alwaysEditable\")\n  button.stealth(class=\"{$$props?.class?.includes('widebutton') ? 'wide' : ' ' + $$props?.class?.includes('left') ? 'left' : ' '}\" on:click!=\"{clickType=='click' ? enableInput : () => {}}\")\n    .flexrow.gap-15.wide.doc-input\n      +if(\"LABEL\")\n        .flex1.wide\n          label.bold.gold(for=\"{inputElement?.id}\") {label} \n      +if(\"editable\")\n        .flex5.wide\n          input({...$$restProps} type=\"{$$props.type}\" bind:this=\"{inputElement}\" value=\"{inputValue}\" on:keydown|stopPropagation=\"{handleKeyDown}\" on:input|stopPropagation!=\"{updateOnInput ? updateDebounce : () => {}}\" on:blur|stopPropagation=\"{handleBlur}\" placeholder=\"{placeholder}\" maxlength=\"{maxlength}\")\n        +else\n          .output(class=\"{pulseClass} {textClasses}\" class:empty=\"{isEmpty}\") {inputValue ? inputValue : placeholder}\n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n  /* CSS for the pulse effect */\n  .pulse \n    transition: scale 0.5s ease-in-out\n    animation: pulse-animation 0.5s ease-in-out\n\n  @keyframes pulse-animation \n    0% \n      scale: 1\n    \n    50% \n      scale: 1.5\n    \n    100% \n      scale: 1\n      \n  button.stealth\n    font-family: inherit\n    font-size: inherit\n    color: inherit\n    margin: inherit\n    letter-spacing: inherit\n    text-shadow: inherit\n\n  div.empty \n    width: 100%\n    min-height: 1em\n    display: inline-block\n    border: 1px solid #aaa\n    border-radius: var(--border-radius)\n\n  .output:not([type=\"checkbox\"])\n    // margin-right: 0.5em\n\n  .wide\n    width: 100%\n\n  input\n    width: 100%\n    background-color: white\n    height: 1.5rem\n    border: 1px solid #ccc\n    border-radius: 3px\n    padding: 0 0.5rem\n</style>","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { localize } from \"~/src/helpers/util\";\nimport { activeEffectModes } from \"~/src/helpers/constants\";\n\nimport DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\nimport DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n\nconst doc = getContext('#doc');\n\n// Initialize with empty array to ensure it's always iterable\nlet pendingChanges = [];\nlet buttonAnimation = '';\n\nonMount(() => {\n  pendingChanges = ($doc.changes || []).map(change => ({...change}));\n});\n\nfunction handleInputChange(event, index, field) {\n  const { value } = event.detail;\n  pendingChanges[index][field] = value;\n  // Force Svelte to recognize the array update\n  pendingChanges = [...pendingChanges];\n}\n\nfunction handleMouseLeave() {\n  if (buttonAnimation) {\n    buttonAnimation = '';\n  }\n  game.system.log.b('mouse leave');\n}\n\nfunction handleSelectChange(event, index) {\n  const { value } = event.detail;\n  pendingChanges[index].mode = value;\n  // Force Svelte to recognize the array update\n  pendingChanges = [...pendingChanges];\n}\n\nfunction deleteChange(index) {\n  pendingChanges = pendingChanges.filter((_, i) => i !== index);\n}\n\nfunction addChange() {\n  pendingChanges = [...pendingChanges, {\n    key: \"\",\n    mode: null,\n    value: \"\"\n  }];\n}\n\nfunction save() {\n  //- validate changes\n  if(pendingChanges.length === 0) {\n    $doc.update({ changes: [] });\n    buttonAnimation = 'success-glow hover-disabled';\n    return;\n  }\n  \n  for(const change of pendingChanges) {\n    if(!change.key || (change.mode < 0 || change.mode > 5) || !change.value) {\n      game.system.log.b(pendingChanges);\n      ui.notifications.warn('Please complete all fields');\n      buttonAnimation = 'error-shake hover-disabled ';\n      return;\n    }\n    change.priority = 1;\n  }\n\n  //- save changes\n  game.system.log.g('Saving...', pendingChanges);\n  $doc.update({ changes: pendingChanges });\n  game.system.log.g('Changes saved');\n  buttonAnimation = 'success-glow hover-disabled';\n}\n\nonMount(async () => {\n  console.log('Changes', $doc);\n});\n</script>\n<template lang=\"pug\">\n\n.item-sheet.details.overflow.wide.inset.mt-sm\n  .flexcol.flex3.left.high.wide.mb-md\n    h1.font-cinzel.center Changes\n    table.borderless\n      thead\n        tr.gold\n          th.left.expand(scope=\"col\") {localize('EFFECT.Change.Key')}\n          th.shrink.left.fixed(scope=\"col\") {localize('EFFECT.Change.Mode')}\n          th.left.expand(scope=\"col\") {localize('EFFECT.Change.Value')}\n          th.buttons(scope=\"col\")\n            button.stealth(on:click!=\"{() => addChange()}\")\n              i.fa.fa-plus\n      tbody\n        +each(\"pendingChanges as change, i\")\n          tr\n            td\n              DocInput( valuePath=\"{`changes[${i}].key`}\"  alwaysEditable=\"{true}\" updateOnBlur=\"{true}\" handleOwnUpdates=\"{false}\" on:change!=\"{(e) => handleInputChange(e, i, 'key')}\" )\n            td.shrink\n              DocSelect(\n                valuePath=\"{`changes[${i}].mode`}\" \n                options=\"{activeEffectModes}\"\n                handleOwnUpdates=\"{false}\"\n                on:change!=\"{(e) => handleSelectChange(e, i)}\"\n              )\n            td\n              DocInput(\n                valuePath=\"{`changes[${i}].value`}\" \n                alwaysEditable=\"{true}\" \n                updateOnBlur=\"{true}\" \n                handleOwnUpdates=\"{false}\" \n                on:change!=\"{(e) => handleInputChange(e, i, 'value')}\"\n              )\n            td.buttons\n              button.stealth(on:click!=\"{() => deleteChange(i)}\" )\n                i.fa.fa-trash\n\n    .flexrow.mt-sm\n      button.glossy-button.gold-light.hover-shine(\n        class=\"{buttonAnimation}\"\n        on:click=\"{save}\"\n        on:mouseleave=\"{handleMouseLeave}\"\n      ) {localize(\"Instructions.SaveChanges\")}\n\n</template>\n<style lang=\"sass\">\n\n  @use '../../../styles/_mixins' as mixins\n  .inset\n    +mixins.inset(1rem, 0 -3px 20px rgba(165, 131, 99, 1) inset, 0 0 20px 0 )\n  table\n    thead\n      tr\n        background-color: var(--color-scrollbar)\n\n  .hover-disabled\n    &.hover-shine\n      &:hover\n        box-shadow: none\n\n  @keyframes success-glow\n    0%, 100%\n      box-shadow: 0 0 0 rgba(40, 200, 40, 0)\n    50%\n      box-shadow: 0 0 20px rgba(40, 200, 40, 1)\n\n  @keyframes error-shake\n    0%, 100%\n      transform: translateX(0)\n    20%\n      transform: translateX(-4px)\n    40%\n      transform: translateX(4px)\n    60%\n      transform: translateX(-4px)\n    80%\n      transform: translateX(4px)\n\n  .success-glow\n    animation: success-glow 0.6s ease-in-out\n\n  .error-shake\n    animation: error-shake 0.5s ease-in-out\n\n</style>\n","<script>\n  import preventDefault from \"~/src/helpers/svelte-actions/PreventDefault.js\";\n  import { onMount } from 'svelte';\n\n  export let tabs = [];\n\n  // type of sheet\n  export let sheet = void 0;\n  export let activeTab = void 0;\n\n  onMount(() => {\n    activeTab = tabs[0].id;\n    game.system.log.d(\"Tabs\", tabs);\n  });\n  \n</script>\n\n<template lang=\"pug\">\n.tabs\n  .tabs-list\n    +each(\"tabs as tab\")\n      button.short.gold(\n        class=\"{tab.id === activeTab ? 'active' : ''}\"\n        on:click|preventDefault!=\"{() => activeTab = tab.id}\"\n      ) \n        +if(\"!tab.img && !tab.icon\")\n          span {tab.label}\n          +else\n            +if(\"tab.img\")\n              img.tab-icon(src=\"{tab.img}\" alt=\"{tab.label} tab icon\")\n\n  div(class=\"{`tab-content ${$$props?.class?.includes('small') ? 'tab-content--small' : ''} ${$$props?.class?.includes('tall') ? 'tab-content--tall' : ''}`}\")\n    +each(\"tabs as tab\")\n      +if(\"tab.id === activeTab\")\n        svelte:component(this=\"{tab.component}\" sheet=\"{sheet}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../styles/_mixins' as mixins\n  .tab-icon\n    border: none\n    text-align: middle\n    height: 35px\n\n\n  .tabs \n    +mixins.flex-column\n    +mixins.flex-group-top\n    +mixins.border\n    height: 100%\n    width: 100%\n    background: url(/systems/foundryvtt-final-fantasy/assets/parchment4.webp) repeat\n    overflow: hidden\n    .tabs-list \n      +mixins.flex-row\n      +mixins.flex-space-evenly\n      +mixins.border-bottom\n      +mixins.panel-1\n      list-style: none\n      width: 100%\n      margin: 0\n      padding: 0.25rem\n      height: 100%\n      flex: 0\n\n      button \n        --color-shadow-primary: var(--border-shadow)\n        position: relative\n        overflow: hidden\n        clip-path: var(--tjs-icon-button-clip-path, none)\n        transform-style: preserve-3d\n        letter-spacing: 2px\n        height: 100%\n        font-weight: normal\n        font-family: \"Cinzel\", serif\n        margin: 0 2px\n        background: rgba(216, 214, 203, 0.8)\n        width: 100%\n        text-shadow: 0px 0px 1px var(--color-shadow-primary)\n        // background: rgba(0, 0, 0, 0.1)\n        padding: 0.5rem 0\n        -webkit-text-stroke-width: 0.5px\n        -webkit-text-stroke-color: rgba(100, 0, 0, 0.1)\n        border: none\n        // &:not(:first-child) \n        //   border-left: none\n        // color: var(--ff-border-color)\n        opacity: 0.4\n\n        transition: opacity 0.5s ease-out\n\n        &:hover\n          box-shadow: 0 -7px 15px -6px var(--color-shadow-primary)\n          opacity: 1\n        //   // color: var(--ff-border-color)\n        //   box-shadow: none\n        //   &:not(:disabled) \n        //     clip-path: var(--tjs-icon-button-clip-path-hover, var(--tjs-icon-button-clip-path, none))\n\n        &.active\n          box-shadow: 0 -7px 15px -6px var(--color-shadow-primary)\n          // box-shadow: 0 -7px 15px -5px var(--ff-border-color)\n          z-index: 100\n          opacity: 1\n          // text-decoration: underline\n          // border: 4px ridge var(--ff-border-color)\n          // border-bottom: 1px solid transparent !important\n          // box-shadow: none\n\n        img\n          margin-top: -4px\n    .tab-content\n      z-index: 1\n      // background: url(../ui/parchment.jpg) repeat\n      border: 1px solid transparent\n      border-radius: 10px\n      flex: 2\n      width: 100%\n\n      +mixins.flex-column\n      &.tab-content--tall\n        height: calc(100% - 60px)\n      &.tab-content--small\n        height: calc(100% - 20px)\n\n        \n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  import { onMount, getContext } from 'svelte';\n  import { resolveDotpath } from \"~/src/helpers/paths\";\n\n  // The value of the input\n  export let valuePath = \"\";\n  export let document = false;\n  export let preventDefault = false;\n  export let disabled = false;\n  export let label = \"\";\n\n  let inputValue,\n    LABEL = !!label,\n    inputElement,\n    pulseClass = \"\"\n  ;\n\n  // Document reference\n  const doc = document || getContext(\"#doc\");\n\n  const update = async () => {\n    game.system.log.d('DocCheckBox internal default update method')\n    if (preventDefault) return;\n    await $doc.update({[valuePath]: Boolean(inputValue)}); \n    game.system.log.d('valuePath', valuePath)\n    game.system.log.d($doc)\n  }\n\n  onMount(() => {\n    inputValue = resolveDotpath($doc, valuePath);\n  });\n\n  //- NB: the template here can't be pug because it doesn't support dupicate properties, which we need for on:change default\n</script>\n\n<template>\n  <div class={$$props.class}>\n    {#if $$props.label}\n      <label class=\"flex1\" for={inputElement.id}>{$$props.label}</label>\n    {/if}\n    <input\n      id=\"doc-checkbox\"\n      type=\"checkbox\"\n      bind:this={inputElement}\n      bind:checked={inputValue}\n      disabled={disabled || !$doc.isOwner}\n      on:change\n      on:change={update}\n    />\n  </div>\n</template>\n\n\n<style lang=\"sass\" >\n  .small \n    width: 14px\n    height: 14px\n  \n</style>\n","import { isObject, klona } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides a helper class to determine the version of the Foundry platform starting a version `9`.\n *\n * Note: You must use any of these utility methods after the Foundry `init` hook.\n */\nclass FVTTVersion\n{\n   static #regexMajorVersion = /(\\d+)\\./;\n\n   /**\n    * Returns true when Foundry is at least the specific major version number provided.\n    *\n    * Note: `game` must be initialized for correct comparison; use after Foundry `init` hook.\n    *\n    * @param {number}   version - Major version to check against.\n    *\n    * @returns {boolean} Foundry version is at least the major version specified.\n    */\n   static isAtLeast(version)\n   {\n      if (globalThis.game?.version === void 0)\n      {\n         throw new Error(`FVTTVersion.isAtLeast error: Foundry VTT global 'game' object is not initialized.`);\n      }\n\n      if (!Number.isInteger(version) && version < 9)\n      {\n         throw new TypeError(`'version' is not a positive integer greater than or equals '9'.`);\n      }\n\n      return !globalThis.foundry.utils.isNewerVersion(version, globalThis.game.version);\n   }\n\n   /**\n    * Returns true when Foundry is inclusively between the min / max major version numbers provided.\n    *\n    * @param {number}   min - Major minimum version to check against.\n    *\n    * @param {number}   max - Major maximum version to check against.\n    *\n    * @returns {boolean} Foundry version is at least the major version specified.\n    */\n   static isBetween(min, max)\n   {\n      if (globalThis.game?.version === void 0)\n      {\n         throw new Error(`FVTTVersion.isBetween error: Foundry VTT global 'game' object is not initialized.`);\n      }\n\n      if (!Number.isInteger(min) && min < 9)\n      {\n         throw new TypeError(\n          `FVTTVersion.isBetween error: 'min' is not a positive integer greater than or equals '9'.`);\n      }\n\n      if (!Number.isInteger(max) && max < 9)\n      {\n         throw new TypeError(\n          `FVTTVersion.isBetween error: 'max' is not a positive integer greater than or equals '9'.`);\n      }\n\n      if (min > max)\n      {\n         throw new TypeError(`FVTTVersion.isBetween error: 'min' is greater than 'max'.`);\n      }\n\n      const match = this.#regexMajorVersion.exec(globalThis.game.version);\n      if (!match)\n      {\n         throw new Error(`FVTTVersion.isBetween error: Could not parse 'globalThis.game.version'.`);\n      }\n\n      const version = parseInt(match[1], 10);\n\n      return version >= min && version <= max;\n   }\n}\n\n/**\n * Loads FVTT core fonts supporting `FontConfig` on Foundry v10+.\n *\n * Note: This class contains code modified from Foundry VTT core client code. There are only so many ways to process\n * core Foundry data structures correctly.\n */\nclass FontManager\n{\n   /**\n    * Collect all the font definitions and combine them.\n    *\n    * @returns { {[key: string]: globalThis.FontFamilyDefinition}[] } Core font definitions.\n    */\n   static getCoreDefinitions()\n   {\n      /** @type { {[key: string]: globalThis.FontFamilyDefinition}[] } */\n      const fonts = [];\n\n      if (FVTTVersion.isAtLeast(11))\n      {\n         if (isObject(globalThis.CONFIG?.fontDefinitions))\n         {\n            fonts.push(klona(globalThis.CONFIG.fontDefinitions));\n         }\n\n         const coreFonts = globalThis.game?.settings.get('core', 'fonts');\n\n         if (Array.isArray(coreFonts))\n         {\n            fonts.push(klona(coreFonts));\n         }\n      }\n\n      FontManager.removeDuplicateDefinitions(fonts);\n\n      return fonts;\n   }\n\n   /**\n    * Load a font definition.\n    *\n    * @param {string}               fontSpecification - The font specification.\n    *\n    * @param {string}               family - The font family name (case-sensitive).\n    *\n    * @param {globalThis.FontFamilyDefinition} definition - The font family definition.\n    *\n    * @param {Document}             document - Target Document to load font into.\n    *\n    * @returns {Promise<boolean>} Returns true if the font was successfully loaded.\n    */\n   static async #loadFont(fontSpecification, family, definition, document)\n   {\n      try\n      {\n         for (const fontEntry of definition.fonts)\n         {\n            // Collect URLs from FontDefinition.\n            const urls = fontEntry.urls.map((url) => `url(\"${url}\")`).join(', ');\n\n            // Note: 'font' contains 'FontFaceDescriptors' data.\n            const fontFace = new FontFace(family, urls, fontEntry);\n            await fontFace.load();\n\n            document.fonts.add(fontFace);\n         }\n\n         await document.fonts.load(fontSpecification);\n      }\n      catch (err)\n      {\n         console.warn(`Font family \"${family}\" failed to load: `, err);\n         return false;\n      }\n\n      if (!document.fonts.check(fontSpecification))\n      {\n         console.warn(`Font family \"${family}\" failed to load.`);\n         return false;\n      }\n\n      return true;\n   }\n\n   /**\n    * Ensure that fonts have loaded and are ready for use.\n    * Enforce a maximum timeout in milliseconds.\n    * Proceed after that point even if fonts are not yet available.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {number} [opts.ms=4500] - The maximum time to spend loading fonts before proceeding.\n    *\n    * @param {Document} [opts.document] - The target document to load the fonts into.\n    *\n    * @param {boolean} [opts.editor=true] - When true verifies the `editor` field of {@link FontFamilyDefinition}.\n    *\n    * @param {(\n    *    {[key: string]: globalThis.FontFamilyDefinition}[] |\n    *    {[key: string]: globalThis.FontFamilyDefinition}\n    * )} [opts.fonts] - A custom set of font family definitions to load. If not defined the core font family definitions\n    *    are loaded.\n    *\n    * @returns {Promise<void>}\n    */\n   static async loadFonts({ ms = 4500, document = globalThis.document, editor = true, fonts } = {})\n   {\n      // TODO sanity checks\n\n      const allFonts = fonts ? Array.isArray(fonts) ? fonts : [fonts] : this.getCoreDefinitions();\n\n      const promises = [];\n\n      for (const definitions of allFonts)\n      {\n         if (isObject(definitions))\n         {\n            for (const [family, definition] of Object.entries(definitions))\n            {\n               // Don't load a font that is not marked to be used in the editor.\n               if (editor && (typeof definition.editor !== 'boolean' || !definition.editor)) { continue; }\n\n               const fontSpecification = `1rem \"${family}\"`;\n\n               // TODO: If there is a better / reliable way to check if a font is already loaded then implement below.\n               // `document.fonts.check` doesn't quite work for the intended purpose.\n               // Early out if the font is already loaded.\n               // if (document.fonts.check(fontSpecification)) { continue; }\n\n               promises.push(this.#loadFont(fontSpecification, family, definition, document));\n            }\n         }\n      }\n\n      const timeout = new Promise((resolve) => setTimeout(resolve, ms));\n      const ready = Promise.allSettled(promises).then(() => document.fonts.ready);\n\n      return Promise.race([ready, timeout]);\n   }\n\n   /**\n    * Removes duplicate font definitions.\n    *\n    * @param { {[key: string]: globalThis.FontFamilyDefinition}[] }  fonts - An array of FontFamilyDefinition objects\n    *        to process.\n    *\n    * @returns { {[key: string]: globalThis.FontFamilyDefinition}[] } Filtered font definitions.\n    */\n   static removeDuplicateDefinitions(fonts)\n   {\n      if (!Array.isArray(fonts))\n      {\n         throw new TypeError(`FontManager.removeDuplicateDefinitions error: 'fonts' is not an array.`);\n      }\n\n      const familySet = new Set();\n\n      for (const definitions of fonts)\n      {\n         if (!isObject(definitions))\n         {\n            throw new TypeError(`FontManager.removeDuplicateDefinitions error: 'definitions' is not an object.`);\n         }\n\n         for (const family of Object.keys(definitions))\n         {\n            // Remove duplicate from current definitions set.\n            if (familySet.has(family))\n            {\n               delete definitions[family];\n            }\n            else\n            {\n               familySet.add(family);\n            }\n         }\n      }\n\n      return fonts;\n   }\n}\n\n/**\n * Parses the core Foundry style sheet creating an indexed object of properties by selector.\n */\nclass FoundryStyles\n{\n   static #sheet = void 0;\n\n   /** @type {Map<string, {[key: string]: string}>} */\n   static #sheetMap = new Map();\n\n   static #initialized = false;\n\n   /**\n    * Called once on initialization / first usage. Parses the core foundry style sheet.\n    */\n   static #initialize()\n   {\n      this.#initialized = true;\n\n      const styleSheets = Array.from(document.styleSheets).filter((entry) => entry.href !== null);\n\n      let sheet;\n\n      const foundryStyleSheet = globalThis.foundry.utils.getRoute('/css/style.css');\n\n      // Find the core Foundry stylesheet.\n      for (const styleSheet of styleSheets)\n      {\n         let url;\n\n         try\n         {\n            url = new URL(styleSheet.href);\n         }\n         catch (err) { continue; }\n\n         if (typeof url.pathname === 'string' && url.pathname === foundryStyleSheet)\n         {\n            this.#sheet = sheet = styleSheet;\n            break;\n         }\n      }\n\n      // Quit now if the Foundry style sheet was not found.\n      if (!sheet) { return; }\n\n      // Parse each CSSStyleRule and build the map of selectors to parsed properties.\n      for (const rule of sheet.cssRules)\n      {\n         if (!(rule instanceof CSSStyleRule)) { continue; }\n\n         const obj = {};\n\n         // Parse `cssText` into an object of properties & values.\n         for (const entry of rule.style.cssText.split(';'))\n         {\n            const parts = entry.split(':');\n\n            // Sanity check.\n            if (parts.length < 2) { continue; }\n\n            obj[parts[0].trim()] = parts[1].trim();\n         }\n\n         this.#sheetMap.set(rule.selectorText, obj);\n      }\n   }\n\n   /**\n    * Gets the properties object associated with the selector. Try and use a direct match otherwise all keys\n    * are iterated to find a selector string that includes the `selector`.\n    *\n    * @param {string}   selector - Selector to find.\n    *\n    * @returns { {[key: string]: string} } Properties object.\n    */\n   static getProperties(selector)\n   {\n      if (!this.#initialized) { this.#initialize(); }\n\n      // If there is a direct selector match then return a value immediately.\n      if (this.#sheetMap.has(selector))\n      {\n         return this.#sheetMap.get(selector);\n      }\n\n      for (const key of this.#sheetMap.keys())\n      {\n         if (key.includes(selector)) { return this.#sheetMap.get(key); }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Gets a specific property value from the given `selector` and `property` key. Try and use a direct selector\n    * match otherwise all keys are iterated to find a selector string that includes `selector`.\n    *\n    * @param {string}   selector - Selector to find.\n    *\n    * @param {string}   property - Specific property to locate.\n    *\n    * @returns {string|undefined} Property value.\n    */\n   static getProperty(selector, property)\n   {\n      if (!this.#initialized) { this.#initialize(); }\n\n      // If there is a direct selector match then return a value immediately.\n      if (this.#sheetMap.has(selector))\n      {\n         const data = this.#sheetMap.get(selector);\n         return isObject(data) && property in data ? data[property] : void 0;\n      }\n\n      for (const key of this.#sheetMap.keys())\n      {\n         if (key.includes(selector))\n         {\n            const data = this.#sheetMap.get(key);\n            if (isObject(data) && property in data) { return data[property]; }\n         }\n      }\n\n      return void 0;\n   }\n}\n\nexport { FVTTVersion, FontManager, FoundryStyles };\n//# sourceMappingURL=index.js.map\n","import { SvelteApplication }  from '@typhonjs-fvtt/runtime/svelte/application';\nimport { TJSStyleManager }    from '@typhonjs-fvtt/runtime/util/dom/style';\nimport { isObject }           from '@typhonjs-fvtt/runtime/util/object';\n\nimport { FoundryStyles }      from '@typhonjs-fvtt/standard/fvtt';\n\n/**\n * Provides global CSS variable configuration based on Foundry styles loaded.\n */\nclass FVTTConfigure\n{\n   static #initialized = false;\n\n   static initialize()\n   {\n      if (this.#initialized) { return; }\n\n      const cssVariables = new TJSStyleManager({ docKey: '#__tjs-root-styles', version: 1.1 });\n\n      this.#initialized = true;\n\n      // -------------------------------------------------------------------------------------------------------------\n\n      /**\n       * Assign all TyphonJS thematic CSS variables.\n       */\n\n      cssVariables.setProperties({\n         // For components w/ transparent background checkered pattern.\n         '--tjs-checkerboard-background-dark': 'rgb(205, 205, 205)',\n         '--tjs-checkerboard-background-10': `url('data:image/svg+xml;utf8,<svg preserveAspectRatio=\"none\"  viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" y=\"0\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"5\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"0\" width=\"5\" height=\"5\" fill=\"white\" /><rect x=\"0\" y=\"5\" width=\"5\" height=\"5\" fill=\"white\" /></svg>') 0 0 / 10px 10px, var(--tjs-checkerboard-background-dark, rgb(205, 205, 205))`\n      }, false);\n\n      // -------------------------------------------------------------------------------------------------------------\n\n      /**\n       * Assign all TyphonJS CSS variables to Foundry defaults.\n       */\n\n      cssVariables.setProperties({\n         '--tjs-action-ripple-background': 'rgba(0, 0, 0, 0.35)'\n      }, false);\n\n      // -------------------------------------------------------------------------------------------------------------\n\n      cssVariables.setProperties({\n         '--tjs-icon-button-background-hover': 'rgba(0, 0, 0, 0.10)',\n         '--tjs-icon-button-background-selected': 'rgba(0, 0, 0, 0.20)',\n      }, false);\n\n      {\n         /**\n          * All input related components including: TJSSelect,\n          */\n         const props = FoundryStyles.getProperties('input[type=\"text\"], input[type=\"number\"]');\n\n         if (isObject(props))\n         {\n            cssVariables.setProperties({\n               '--tjs-input-background': 'background' in props ? props.background : 'rgba(0, 0, 0, 0.05)',\n               '--tjs-input-border': 'border' in props ? props.border : '1px solid var(--color-border-light-tertiary)',\n               '--tjs-input-border-radius': 'border-radius' in props ? props['border-radius'] : '3px',\n               '--tjs-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\n               '--tjs-input-min-width': 'min-width' in props ? props['min-width'] : '20px',\n               '--tjs-input-padding': 'padding' in props ? props['padding'] : '1px 3px',\n               '--tjs-input-width': 'width' in props ? props.width : 'calc(100% - 2px)',\n\n               // Set default values that are only to be referenced and not set.\n               '--_tjs-default-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\n\n               // Set directly / no lookup:\n               '--tjs-input-border-color': 'var(--color-border-light-tertiary)',\n            }, false);\n         }\n      }\n\n      {\n         /**\n          * Input range specific variables for track and thumb,\n          */\n         const propsTrack = FoundryStyles.getProperties('input[type=\"range\"]::-webkit-slider-runnable-track');\n         const propsTrackFocus = FoundryStyles.getProperties('input[type=\"range\"]:focus::-webkit-slider-runnable-track');\n\n         const propsThumb = FoundryStyles.getProperties('input[type=\"range\"]::-webkit-slider-thumb');\n         const propsThumbFocus = FoundryStyles.getProperties('input[type=\"range\"]:focus::-webkit-slider-thumb');\n\n         if (isObject(propsTrack))\n         {\n            cssVariables.setProperties({\n               '--tjs-input-range-slider-track-box-shadow': 'box-shadow' in propsTrack ? propsTrack['box-shadow'] : '1px 1px 1px #000000, 0px 0px 1px #0d0d0d'\n            }, false);\n         }\n\n         if (isObject(propsTrackFocus))\n         {\n            cssVariables.setProperties({\n               '--tjs-input-range-slider-track-box-shadow-focus': 'box-shadow' in propsTrackFocus ? propsTrackFocus['box-shadow'] : '1px 1px 1px #000000, 0px 0px 1px #0d0d0d'\n            }, false);\n         }\n\n         if (isObject(propsThumb))\n         {\n            cssVariables.setProperties({\n               '--tjs-input-range-slider-thumb-box-shadow': 'box-shadow' in propsThumb ? propsThumb['box-shadow'] : '0 0 5px var(--color-shadow-primary)'\n            }, false);\n         }\n\n         if (isObject(propsThumbFocus))\n         {\n            cssVariables.setProperties({\n               '--tjs-input-range-slider-thumb-box-shadow-focus': 'box-shadow' in propsThumbFocus ? propsThumbFocus['box-shadow'] : '0 0 5px var(--color-shadow-primary)'\n            }, false);\n         }\n      }\n\n      cssVariables.setProperties({\n         // `popup` is for components that are slightly elevated, but connected to an application;\n         // see: TJSMenu / TJSContextMenu / TJSColordPicker\n         '--tjs-default-popup-background': 'var(--color-text-dark-header, #23221d)',\n         '--tjs-default-popup-border': '1px solid var(--color-border-dark, #000)',\n         '--tjs-default-popup-box-shadow': '0 0 2px var(--color-shadow-dark, #000)',\n         '--tjs-default-popup-primary-color': 'var(--color-text-light-primary, #b5b3a4)',\n         '--tjs-default-popup-highlight-color': 'var(--color-text-light-highlight, #f0f0e0)',\n\n         // `popover` is for components that are elevated and independent; see: TJSContextMenu\n         '--tjs-default-popover-border': '1px solid var(--color-border-dark, #000)',\n         '--tjs-default-popover-box-shadow': '0 0 10px var(--color-shadow-dark, #000)',\n      }, false);\n\n      // Handle `PopOut!` module hooks to allow applications to popout to their own browser window -------------------\n\n      Hooks.on('PopOut:loading', (app, popout) =>\n      {\n         if (app instanceof SvelteApplication)\n         {\n            // Clone and load `svelte-standard` CSS variables into new window document.\n            popout.document.addEventListener('DOMContentLoaded', () => cssVariables.clone(popout.document));\n         }\n      });\n   }\n}\n\nFVTTConfigure.initialize();\n","<script>\n   import { localize }  from '@typhonjs-fvtt/runtime/util/i18n';\n\n   /** @type {function} */\n   export let onUpdateRevealButtons = void 0;\n\n   /** @type {HTMLElement} */\n   export let sectionEl = void 0;\n\n   const revealed = sectionEl.classList.contains('revealed');\n</script>\n\n<button type=button\n        class=reveal\n        on:click={() => onUpdateRevealButtons(!revealed, sectionEl.id)}>\n    {localize(`EDITOR.${revealed ? 'Hide' : 'Reveal'}`)}\n</button>\n\n<style>\n    button {\n        user-select: none;\n    }\n</style>\n","/**\n * Processes the given HTML by creating by running a CSS selector query with all matched elements being passed through\n * the provided `process` function.\n *\n * @param {object}                  opts - Options\n *\n * @param {string}                  opts.html - The HTML to process.\n *\n * @param {(HTMLElement) => void}   opts.process - The selected element processing function.\n *\n * @param {string}                  opts.selector - The CSS selector query.\n *\n * @param {string}                  [opts.containerElement='div'] - Use a specific container element.\n *\n * @param {boolean}                 [opts.firstMatchOnly=false] - When true `querySelector` is invoked to process the\n *        first matching element only.\n *\n * @param {string}                  [opts.namespaceURI] - The namespace URI of the elements to select.\n *\n * @returns {string} The processed HTML.\n */\nfunction processHTML({ html, process, selector, containerElement = 'div', firstMatchOnly = false, namespaceURI })\n{\n   if (typeof html !== 'string') { throw new TypeError(`processHTML error: 'html' is not a string.`); }\n   if (typeof process !== 'function') { throw new TypeError(`processHTML error: 'process' is not a function.`); }\n   if (typeof selector !== 'string') { throw new TypeError(`processHTML error: 'selector' is not a string.`); }\n\n   if (typeof containerElement !== 'string')\n   {\n      throw new TypeError(`processHTML error: 'containerElement' is not a string.`);\n   }\n\n   if (typeof firstMatchOnly !== 'boolean')\n   {\n      throw new TypeError(`processHTML error: 'firstMatchOnly' is not a boolean.`);\n   }\n\n   if (namespaceURI !== void 0 && typeof namespaceURI !== 'string')\n   {\n      throw new TypeError(`processHTML error: 'namespaceURI' is not a string.`);\n   }\n\n   const resolveSelector = namespaceURI ? `${namespaceURI}|${selector}` : selector;\n\n   const container = document.createElement(containerElement);\n   container.innerHTML = html;\n\n   if (firstMatchOnly)\n   {\n      const element = container.querySelector(resolveSelector);\n      if (element) { process(element); }\n   }\n   else\n   {\n      const elements = container.querySelectorAll(resolveSelector);\n      if (elements)\n      {\n         for (const element of elements) { process(element); }\n      }\n   }\n\n   return container.innerHTML;\n}\n\nexport { processHTML };\n//# sourceMappingURL=index.js.map\n","import RevealSecretButton     from './RevealSecretButton.svelte';\n\nimport { nextAnimationFrame } from '@typhonjs-fvtt/runtime/util/animate';\nimport { processHTML }        from '@typhonjs-fvtt/runtime/util/html';\nimport { safeAccess }         from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Creates the `mountRevealSecretButtons` action that adds buttons to reveal any secret sections that have a CSS ID.\n *\n * This action only upgrades the content when a document / fieldName is defined.\n *\n * @param {import('@typhonjs-fvtt/runtime/svelte/store/fvtt/document').TJSDocument}   doc - Document wrapper.\n *\n * @param {{fieldName: string}}  options - Options object from the editor containing the `fieldName`\n *\n * @returns {function(*): {update({mountRevealButtons: *}): void, destroy(): void}}\n */\nexport function createMountRevealSecretButtons(doc, options)\n{\n   /**\n    * Provides the callback function that RevealSecretButton invokes when it is clicked to process the current\n    * document field specified adding or removing the `revealed` CSS class to the secret section.\n    *\n    * @param {boolean}  revealed - Secret revealed state.\n    *\n    * @param {string}   id - The CSS ID assigned to the secret section.\n    */\n   function onUpdateRevealButtons(revealed, id)\n   {\n      /** @type {foundry.abstract.Document} */\n      const foundryDoc = doc.get();\n\n      if (foundryDoc && typeof options?.fieldName === 'string')\n      {\n         const html = safeAccess(foundryDoc, options?.fieldName);\n\n         if (typeof html === 'string')\n         {\n            const newContent = processHTML({\n               html,\n               process: (element) => element.classList[`${revealed ? 'add' : 'remove'}`]('revealed'),\n               selector: `section.secret[id=${id}]`,\n               firstMatchOnly: true\n            });\n\n            foundryDoc.update({ [options?.fieldName]: newContent });\n         }\n      }\n   }\n\n   /**\n    * Returns the `mountRevealSecretButtons` action.\n    */\n   return (node) =>\n   {\n      const components = [];\n\n      /**\n       * Destroy any created components.\n       */\n      function destroyComponents()\n      {\n         for (const component of components) { component.$destroy(); }\n         components.length = 0;\n      }\n\n      /**\n       * Mounts new secret reveal buttons.\n       */\n      function mountComponents()\n      {\n         // Must wait until next animation frame so that the node / element is populated with content.\n         nextAnimationFrame().then(() =>\n         {\n            destroyComponents();\n\n            // Collect all secret sections that have a CSS ID.\n            const secretSections = node.querySelectorAll('section.secret[id]');\n\n            // Mount secret reveal buttons with the section element and the `onUpdateRevealButtons` callback.\n            for (const sectionEl of secretSections)\n            {\n               components.push(new RevealSecretButton({\n                  target: sectionEl,\n                  anchor: sectionEl.firstChild,\n                  props: {\n                     onUpdateRevealButtons,\n                     sectionEl\n                  }\n               }));\n            }\n         });\n      }\n\n      return {\n         /**\n          * On update if the external parameter `mountRevealButtons` is true and a document / fieldName is defined\n          * mount the secret reveal buttons otherwise destroy any existing buttons.\n          *\n          * Note: In the editor components `enrichedContent` is also passed, but unused, but it will trigger an update\n          * whenever the content changes.\n          *\n          * @param mountRevealButtons\n          */\n         update({ mountRevealButtons }) {\n            if (mountRevealButtons && doc.get() && typeof options?.fieldName === 'string') { mountComponents(); }\n            else { destroyComponents(); }\n         },\n\n         destroy() {\n            destroyComponents();\n         }\n      };\n   }\n}\n","import { clamp } from '@typhonjs-fvtt/runtime/math/util';\n\n/**\n * Provides helper utilities to manipulate the PM editor view for various options from TJSProseMirror component.\n */\nexport class PMImpl\n{\n   /**\n    * Handles `options.initialSelection`: Sets the initial cursor / selection range to the start, end, or selects\n    * all text.\n    *\n    * @param {globalThis.EditorView}  view - PM editor view.\n    *\n    * @param {object}  options - TJSProseMirror options.\n    */\n   static setInitialSelection(view, options)\n   {\n      const tr = view.state.tr;\n      const doc = tr.doc;\n\n      const initialSelection = options.initialSelection;\n\n      const type = initialSelection === 'all' || initialSelection === 'end' || initialSelection === 'start' ?\n       initialSelection : 'start';\n\n      const minPos = globalThis.ProseMirror.TextSelection.atStart(doc).from;\n      const maxPos = globalThis.ProseMirror.TextSelection.atEnd(doc).to;\n\n      let transaction;\n\n      switch (type)\n      {\n         case 'all':\n         {\n            const resolvedFrom = clamp(0, minPos, maxPos);\n            const resolvedEnd = clamp(doc.content.size, minPos, maxPos);\n            transaction = tr.setSelection(globalThis.ProseMirror.TextSelection.create(doc, resolvedFrom, resolvedEnd));\n            break;\n         }\n\n         case 'end':\n         {\n            const resolvedFrom = clamp(doc.content.size, minPos, maxPos);\n            const resolvedEnd = clamp(doc.content.size, minPos, maxPos);\n            transaction = tr.setSelection(globalThis.ProseMirror.TextSelection.create(doc, resolvedFrom, resolvedEnd));\n            break;\n         }\n\n         case 'start':\n         {\n            const resolvedFrom = clamp(0, minPos, maxPos);\n            const resolvedEnd = clamp(0, minPos, maxPos);\n            transaction = tr.setSelection(globalThis.ProseMirror.TextSelection.create(doc, resolvedFrom, resolvedEnd));\n            break;\n         }\n      }\n\n      if (transaction)\n      {\n         transaction.scrollIntoView();\n\n         view.dispatch(transaction);\n      }\n   }\n}\n","// Protect for absent global `ProseMirror` on Foundry v9.\nconst ProseMirrorKeyMaps = globalThis.ProseMirror ? globalThis.ProseMirror.ProseMirrorKeyMaps : class {};\n\n/**\n * Provides an additional key mapping to `Escape` to destroy / cancel the active editor.\n */\nexport class TJSKeyMaps extends ProseMirrorKeyMaps\n{\n   /** @type {Function} */\n   #onQuit;\n\n   /**\n    * @param {globalThis.Schema}   schema - The ProseMirror schema to build keymaps for.\n    *\n    * @param {object}   [options] - Additional options to configure the plugin's behaviour.\n    *\n    * @param {Function} [options.onSave] - A function to call when Ctrl+S is pressed.\n    *\n    * @param {Function} [options.onQuit] - A function to call when Ctrl+Q is pressed.\n    */\n   constructor(schema, options)\n   {\n      super(schema, options);\n\n      if (typeof options.onQuit === 'function') { this.#onQuit = options.onQuit; }\n   }\n\n   // eslint-disable-next jsdoc/check-types\n   /**\n    * Swaps the Foundry default `Escape` / selectParentNode to `Mod-p` and enables `onQuit` function for `Escape`.\n    *\n    * @returns { {[key: string]: globalThis.ProseMirrorCommand} } ProseMirror keymap data.\n    */\n   buildMapping()\n   {\n      const mapping = super.buildMapping();\n\n      // Add onQuit callback if defined.\n      if (this.#onQuit)\n      {\n         // Swap Foundry core mapping for `Escape` / selectParentNode to `Mod-p`.\n         if (mapping['Escape']) { mapping['Mod-p'] = mapping['Escape']; }\n\n         mapping['Escape'] = () => this.#onQuit();\n      }\n\n      return mapping;\n   }\n}\n","// Protect for absent global `ProseMirror` on Foundry v9.\nconst Plugin = globalThis.ProseMirror ? globalThis.ProseMirror.Plugin : class {};\nconst PluginKey = globalThis.ProseMirror ? globalThis.ProseMirror.PluginKey : class {};\n\n/**\n * A ProseMirror plugin to transform pasted text that is a raw document UUID into a document link suitable for\n * `TextEditor.enrichHTML`.\n */\nexport class TJSPasteUUID\n{\n   /**\n    * Defines a regex to check for the shape of a raw Foundry document UUID.\n    *\n    * @type {RegExp}\n    */\n   static #s_UUID_REGEX = /(\\.).*([a-zA-Z0-9]{16})/;\n\n   /**\n    * @returns {Plugin} PM Plugin.\n    */\n   static build()\n   {\n      const instance = new this();\n      return new Plugin({\n         key: new PluginKey('tjsPasteRawUUID'),\n         props: {\n            transformPastedText: (text) => instance.#transformUUID(text)\n         }\n      });\n   }\n\n   /**\n    * Transforms pasted text. Check if pasted test matches the shape of a raw UUID. If so do a lookup and if a\n    * document is retrieved transform it to a document link.\n    *\n    * @param {string}   text - pasted text to transform.\n    *\n    * @returns {string} Potentially transformed pasted text.\n    */\n   #transformUUID(text)\n   {\n      if (typeof text === 'string')\n      {\n         try\n         {\n            if (TJSPasteUUID.#s_UUID_REGEX.test(text))\n            {\n               const uuidDoc = globalThis.fromUuidSync(text);\n               if (uuidDoc)\n               {\n                  text = `@UUID[${text}]{${typeof uuidDoc.name === 'string' ? uuidDoc.name : 'Unknown'}}`;\n               }\n            }\n         }\n         catch (err) { /* noop */ }\n      }\n\n      return text;\n   }\n}\n","<script>\n   /**\n    * Provides a reactive wrapper for Foundry ProseMirror editor support. Allows editing Foundry document data or\n    * directly from content prop. Automatic HTML enrichment occurs for the content when saved.\n    *\n    * ### Props\n    * There are no required props, but the following are available to set:\n    *\n    * - `content` - Provides an initial content string; you can bind to `content` from a parent component to get reactive\n    *  updates when `content` changes. Two-way binding.\n    *\n    * - `enrichedContent` - Provides the enriched content via {@link TextEditor.enrichHTML} when `content` changes.\n    *  You can bind to `enrichedContent` from a parent component to get reactive updates though it is not\n    *  recommended to change `enrichedContent` externally. One-way binding.\n    *\n    * - `options` - Defines the options object for this component and passed on to the Foundry TinyMCE support.\n    *  Please review all the options defined below {@link TJSProseMirrorOptions}.\n    *\n    * Notable options passed onto Foundry ProseMirror support:\n    *\n    * - `options.collaborate` - [boolean: false] When a `document` and `fieldName` is provided set this to true to\n    *  enable collaborative editing.\n    *\n    * - `options.plugins` - [object] An additional set of ProseMirror plugins to load.\n    *\n    * ### Events\n    *\n    * There are five events fired when the editor is canceled, saved, and started:\n    *\n    * - `editor:cancel` - Fired when editing is canceled by a user action or reactive response to document changes.\n    *\n    * - `editor:document:deleted` - Fired when the edited document is deleted. Access the document from\n    *  `event.detail.document`.\n    *\n    * - `editor:enrichedContent` - Fired when content is enriched. Access enriched content from\n    *  `event.detail.enrichedContent`.\n    *\n    * - `editor:save` - Fired when editing is saved. Access the content from `event.detail.content`.\n    *\n    * - `editor:start` - Fired when editing is started.\n    *\n    * ### CSS Variables\n    *\n    * The following CSS variables control the associated styles with the default values:\n    *\n    * ```\n    * `.editor` HTMLDivElement:\n    * ---------------------------------\n    * --tjs-editor-background - none\n    * --tjs-editor-border - none\n    * --tjs-editor-border-radius - 0\n    * --tjs-editor-height - 100%\n    * --tjs-editor-margin - 0\n    * --tjs-editor-overflow - auto\n    * --tjs-editor-transition\n    * --tjs-editor-width - 100%\n    *\n    * `.editor` HTMLDivElement; properties available when activated:\n    * ---------------------------------\n    * --tjs-editor-active-box-shadow, unset; Foundry default: 0 0 5px var(--color-shadow-primary)\n    * --tjs-editor-active-outline - unset\n    * --tjs-editor-active-overflow - unset; When inactive the editor overflow is auto; when active overflow is unset.\n    *\n    * `.editor` HTMLDivElement; properties available when inactive, but manually focused:\n    * ---------------------------------\n    * --tjs-editor-inactive-box-shadow-focus-visible - fallback: --tjs-default-box-shadow-focus-visible\n    * --tjs-editor-inactive-outline-focus-visible - fallback: --tjs-default-outline-focus-visible; default: revert\n    * --tjs-editor-inactive-transition-focus-visible - fallback: --tjs-default-transition-focus-visible\n    *\n    * `.editor` HTMLDivElement; properties available when inactive, but hovered:\n    * ---------------------------------\n    * --tjs-editor-inactive-cursor-hover - text\n    * --tjs-editor-inactive-box-shadow-hover - unset\n    * --tjs-editor-inactive-outline-hover - unset\n    * --tjs-editor-inactive-user-select-hover - text\n    *\n    * `.editor-content` HTMLDivElement; when editing - the content overflow is set to auto:\n    * ---------------------------------\n    * --tjs-editor-content-overflow - auto\n    * --tjs-editor-content-padding - 0 0 0 0.25em\n    *\n    * `.editor-container` HTMLDivElement; when editing - removes default margins.\n    * ---------------------------------\n    * --tjs-editor-container-margin - 0\n    *\n    * .editor-edit; Defines the position of the edit button from top / right absolute positioning:\n    * ---------------------------------\n    * --tjs-editor-edit-button-right - 5px\n    * --tjs-editor-edit-button-top - 0\n    *\n    * .editor-menu; Defines the toolbar / menu.\n    * ---------------------------------\n    * --tjs-editor-toolbar-background - rgba(0, 0, 0, 0.1)\n    * --tjs-editor-toolbar-border-radius - 6px\n    * --tjs-editor-toolbar-box-shadow - 0 2px 2px -2px rgb(34 47 62 / 10%), 0 8px 8px -4px rgb(34 47 62 / 7%)\n    * --tjs-editor-toolbar-padding - 2px 0\n    * --tjs-editor-toolbar-width - 100%\n    * ```\n    * @componentDocumentation\n    */\n\n   /**\n    * The following options that both {@link TJSTinyMCE} and {@link TJSContentEdit} support likely won't be implemented\n    * for the ProseMirror component as they involve significant effort in modifying ProseMirror which is not trivial at\n    * all without potentially weeks of work or entirely replacing the built-in Foundry ProseMirror toolbar / support.\n    *\n    * // @property {Object<FontFamilyDefinition>}    [fonts] An additional object defining module / custom fonts to\n    * // load specific to this editor.\n    *\n    * // @property {number}    [maxCharacterLength] When defined as an integer greater than 0 this limits the max\n    * // characters that can be entered.\n    *\n    * // @property {boolean}   [preventEnterKey=false] When true this prevents enter key from creating a new line /\n    * // paragraph.\n    *\n    * // @property {boolean}   [preventPaste=false] Prevents pasting content into the editor.\n    *\n    * // @property {boolean}   [saveOnBlur=false] When true any loss of focus / blur from the editor saves the editor\n    * // state.\n    *\n    * // @property {boolean}   [saveOnEnterKey=false] When true saves the editor state when the enter key is pressed.\n    * // This is useful when configuring the editor for single line entry.\n    */\n\n   import {\n      createEventDispatcher,\n      getContext,\n      onDestroy,\n      onMount,\n      tick\n   }                       from 'svelte';\n\n   import { writable }     from 'svelte/store';\n\n   import { applyStyles }  from '@typhonjs-fvtt/runtime/svelte/action/dom/style';\n   import { TJSDocument }  from '@typhonjs-fvtt/runtime/svelte/store/fvtt/document';\n   import { CrossWindow }  from '@typhonjs-fvtt/runtime/util/browser';\n   import { isObject }     from '@typhonjs-fvtt/runtime/util/object';\n\n   import { PMImpl }       from './PMImpl.js';\n   import * as Plugins  \tfrom './plugins';\n\n   import { createMountRevealSecretButtons } from '../common/secrets/createMountRevealSecretButtons.js';\n\n   /** @type {string} */\n   export let content = '';\n\n   /** @type {string} */\n   export let enrichedContent = '';\n\n   /**\n    * Provides the options object that can be reactively updated. See documentation above.\n    *\n    * @type {import('./index').TJSProseMirrorOptions}\n    */\n   export let options = {};\n\n   const application = getContext('#external')?.application;\n\n   const applicationActiveWindow = application?.reactive?.storeUIState?.activeWindow ?? writable(globalThis);\n\n   const dispatch = createEventDispatcher();\n\n   // Provides reactive updates for any associated Foundry document.\n   const doc = new TJSDocument({ delete: onDocumentDeleted });\n\n   // Create the action to mount the secret reveal button when a Foundry document is configured.\n   const mountRevealSecretButtons = createMountRevealSecretButtons(doc, options);\n\n   /** @type {Window} */\n   let activeWindow = $applicationActiveWindow;\n\n   /** @type {boolean} */\n   let clickToEdit;\n\n   /** @type {boolean} */\n   let editable = true;\n\n   /** @type {HTMLDivElement} */\n   let editorContentEl;\n\n   /** @type {ProseMirrorEditor} */\n   let editor;\n\n   /** @type {boolean} */\n   let editorActive = false;\n\n   /** @type {boolean} */\n   let editorButton;\n\n   /** @type {HTMLDivElement} */\n   let editorEl;\n\n   /** @type {string} */\n   let keyCode;\n\n   /** @type {boolean} */\n   let keyFocused = false;\n\n   /**\n    * When the active window changes the editor needs to be saved for better PM / plugin support.\n    */\n   $: if (activeWindow !== $applicationActiveWindow)\n   {\n      if (editorActive) { saveEditor(); }\n      activeWindow = $applicationActiveWindow;\n   }\n\n   /**\n    * Respond to changes in `options.editable`. If `options.editable` is not defined only a GM level user may edit _or_\n    * if a Foundry document is associated any user that is the owner of the document.\n    */\n   $:\n   {\n      if (typeof options?.editable === 'boolean')\n      {\n         editable = options.editable;\n      }\n      else\n      {\n         // Always editable by GM; otherwise document user ownership if defined. `$doc ?? options.document` is used\n         // due to reactive statements resolution so that the first execution always has a potential document reference.\n         editable = game.user.isGM || (($doc ?? options.document)?.isOwner ?? false);\n      }\n\n      if (!editable) { destroyEditor(); }\n   }\n\n   /**\n    * When `editable` & `options.clickToEdit` is true and the editor is not active enable clickToEdit.\n    */\n   $: clickToEdit = !editorActive && editable &&\n    (typeof options?.clickToEdit === 'boolean' ? options.clickToEdit : false);\n\n   /**\n    * When `options.button` & `editable` is true and the editor is not active and `clickToEdit` is false\n    * enable the edit button.\n    */\n   $: editorButton = !editorActive && editable && (typeof options?.button === 'boolean' ? options.button : true) &&\n    !clickToEdit;\n\n   /**\n    * Allows another KeyboardEvent.code to be used to activate the editor.\n    */\n   $: keyCode = typeof options?.keyCode === 'string' ? options.keyCode : 'Enter';\n\n   /**\n    * Respond to changes in `options.document`\n    */\n   $: if (options?.document !== void 0)\n   {\n      if (!(options.document instanceof globalThis.foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSProseMirror error: 'options.document' is not a Foundry document.`);\n      }\n\n      if (typeof options?.fieldName !== 'string')\n      {\n         throw new TypeError(\n          `TJSProseMirror error: 'options.document' is defined, but 'options.fieldName' is not a string.`);\n      }\n\n      if (options.document !== $doc)\n      {\n         // Remove any existing editor if document changes.\n         enrichedContent = '';\n         content = '';\n         destroyEditor();\n\n         doc.set(options.document);\n      }\n   }\n   else\n   {\n      // Remove any existing editor if there was a document set, but now it is removed.\n      if ($doc)\n      {\n         enrichedContent = '';\n         content = '';\n\n         destroyEditor();\n\n         doc.set(void 0);\n      }\n   }\n\n   // If there is a valid document then retrieve content from `fieldName` otherwise use `content` string.\n   $:\n   {\n      content = $doc !== void 0 && typeof options?.fieldName === 'string' ?\n       globalThis.foundry.utils.getProperty($doc, options.fieldName) :\n        typeof content === 'string' ? content : '';\n\n      // Avoid double trigger of reactive statement as enriching content is async.\n      onContentChanged(content, typeof options?.enrichContent === 'boolean' ? options.enrichContent : true);\n   }\n\n   onDestroy(() =>\n   {\n      // Handle the case when the component is destroyed / IE application closed, but the editor isn't saved.\n      if (editorActive)\n      {\n         saveEditor({ remove: typeof options?.button === 'boolean' ? options.button : true });\n      }\n      else\n      {\n         destroyEditor();\n      }\n   });\n\n   /**\n    * If `editable` is true and `options.button` && `options.clickToEdit` is false then start the editor on\n    * mount.\n    */\n   onMount(() =>\n   {\n      if (editable && !editorButton && !clickToEdit) { initEditor(); }\n   });\n\n   /**\n    * Destroys any active editor.\n    */\n   function destroyEditor(fireCancel = true)\n   {\n      if (editor)\n      {\n         editor.destroy();\n         editor = void 0;\n\n         // Post on next micro-task to allow any event propagation for `Escape` key to trigger first.\n         setTimeout(() => { editorActive = false; }, 0);\n\n         // If the editor was initialized by keyboard action then focus it after a short delay to allow the template\n         // to update.\n         if (keyFocused)\n         {\n            keyFocused = false;\n\n            setTimeout(() =>\n            {\n               if (CrossWindow.isHTMLElement(editorEl) && editorEl?.isConnected) { editorEl.focus(); }\n            }, 100);\n         }\n\n         if (fireCancel) { dispatch('editor:cancel'); }\n      }\n   }\n\n   /**\n    * Initializes editor.\n    *\n    * @returns {Promise<void>}\n    */\n   async function initEditor()\n   {\n      // If editor button is enabled then remove the menu / editing interface on save.\n      const remove = typeof options?.button === 'boolean' ? options.button : true;\n\n      const editorOptions = {\n         ...options,\n\n         plugins: {\n            ...ProseMirror.defaultPlugins,\n\n            menu: ProseMirror.ProseMirrorMenu.build(ProseMirror.defaultSchema, {\n               compact: typeof options?.menuCompact === 'boolean' ? options.menuCompact : false,\n               destroyOnSave: remove,\n               onSave: () => saveEditor({ remove })\n            }),\n\n            keyMaps: Plugins.TJSKeyMaps.build(ProseMirror.defaultSchema, {\n               onSave: () => saveEditor({ remove }),\n               onQuit: () => destroyEditor()\n            }),\n\n            tjsPasteRawUUID: Plugins.TJSPasteUUID.build(),\n\n            ...(isObject(options?.plugins) ? options.plugins : {})\n         }\n      };\n\n      editorActive = true;\n\n      // Editor is now active; wait until the template updates w/ new bound `editorContentEl`.\n      await tick();\n\n      editor = await ProseMirrorEditor.create(editorContentEl, content, editorOptions);\n\n      // `.editor-container` div is added automatically; add inline style to set margin to 0.\n      const containerEl = editorEl.querySelector('.editor-container');\n      if (containerEl) { containerEl.style = 'margin: var(--tjs-editor-container-margin, 0)'; }\n\n      editor.view.focus();\n\n      PMImpl.setInitialSelection(editor.view, options);\n\n      dispatch('editor:start');\n   }\n\n   /**\n    * Potentially handles initializing the editor when it is not active and `options.clickToEdit` is true.\n    */\n   function onClick()\n   {\n      if (!editorActive && clickToEdit) { initEditor(); }\n   }\n\n   /**\n    * Separated into a standalone method so applying async value to enriched content doesn't double trigger a reactive\n    * statement twice.\n    *\n    * @param {string}   content - Content prop.\n    *\n    * @param {boolean}  enrichContent - `options.enrichContent` or default of `true.\n    *\n    * @returns {Promise<void>}\n    */\n   async function onContentChanged(content, enrichContent)\n   {\n      if (typeof content === 'string')\n      {\n         if (enrichContent)\n         {\n            // Determine if the document is owned by current user falling back to false if there is no document\n            // assigned.\n            const isOwner = $doc?.isOwner ?? false;\n\n            // Use any current associated document as the relative location for UUID generation.\n            const relativeTo = $doc ?? void 0;\n\n            // Combine any external EnrichmentOptions, but always set `async: true`.\n            const enrichOptions = isObject(options?.enrichOptions) ? {\n               secrets: globalThis.game.user.isGM || isOwner,\n               relativeTo,\n               ...options.enrichOptions,\n               async: true\n            } : { async: true, relativeTo, secrets: globalThis.game.user.isGM || isOwner};\n\n            enrichedContent = await TextEditor.enrichHTML(content, enrichOptions);\n         }\n         else\n         {\n            enrichedContent = content;\n         }\n      }\n      else\n      {\n         enrichedContent = '';\n      }\n\n      dispatch('editor:enrichedContent', { enrichedContent });\n   }\n\n   /**\n    * Handles cleaning up the editor state after any associated document has been deleted.\n    *\n    * @param {foundry.abstract.Document} document - The deleted document.\n    */\n   function onDocumentDeleted(document)\n   {\n      if (isObject(options)) { options.document = void 0; }\n\n      destroyEditor();\n\n      dispatch('editor:document:deleted', { document });\n\n      content = '';\n      enrichedContent = '';\n   }\n\n   /**\n    * Prevents `Escape` key or `Ctrl-s` from propagating when the editor is active preventing the app from being closed.\n    * The `Escape` key is used to close the active editor first. Foundry by default when `Ctrl-s` is pressed as of v10\n    * scrolls the canvas down which is undesired when saving an editor as well.\n    *\n    * @param {KeyboardEvent}    event - A keyboard event from `.editor`.\n    */\n   function onKeydown(event)\n   {\n      if (editorActive)\n      {\n         if (event.code === 'Escape' || (event.code === 'KeyS' && (event.ctrlKey || event.metaKey)))\n         {\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n      else\n      {\n         if (event.code === keyCode)\n         {\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n   }\n\n   /**\n    * Handle activating the editor if key codes match.\n    *\n    * @param {KeyboardEvent}    event - A KeyboardEvent.\n    */\n   function onKeyup(event)\n   {\n      if (event.code === keyCode)\n      {\n         if (!editorActive)\n         {\n            keyFocused = true;\n            initEditor();\n         }\n\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n\n   /**\n    * Saves the editor contents to the associated document or updates content directly.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.remove=true] - Removes the editor.\n    */\n   function saveEditor({ remove = true } = {})\n   {\n      if (editor)\n      {\n         if (editor.isDirty())\n         {\n            let data = ProseMirror.dom.serializeString(editor.view.state.doc);\n\n            // Save to document if available\n            if ($doc && typeof options?.fieldName === 'string')\n            {\n               $doc.update({ [options.fieldName]: data })\n            }\n            else // Otherwise save to content.\n            {\n               content = data;\n            }\n\n            dispatch('editor:save', { content: data });\n         }\n\n         // Remove the editor\n         if (remove) { destroyEditor(false); }\n      }\n   }\n</script>\n\n<!-- Passing enrichedContent to the mount secret buttons action causes it to run when the content changes. -->\n<div bind:this={editorEl}\n     class=\"editor prosemirror tjs-editor {Array.isArray(options?.classes) ? options.classes.join(' ') : ''}\"\n     class:click-to-edit={clickToEdit}\n     class:editor-active={editorActive}\n     use:applyStyles={options?.styles}\n     use:mountRevealSecretButtons={{ mountRevealButtons: !editorActive && editable, enrichedContent }}\n     on:click={onClick}\n     on:keydown={onKeydown}\n     on:keyup={onKeyup}\n     role=textbox\n     tabindex=0>\n    {#if editorButton}\n        <!-- svelte-ignore a11y-missing-attribute a11y-click-events-have-key-events -->\n        <a class=editor-edit on:click={() => initEditor()} role=button tabindex=-1><i class=\"fas fa-edit\"></i></a>\n    {/if}\n    {#if editorActive}\n        <div bind:this={editorContentEl} class=editor-content></div>\n    {:else}\n        <div class=editor-enriched>\n            {@html enrichedContent}\n        </div>\n    {/if}\n</div>\n\n<style>\n    .editor {\n        background: var(--tjs-editor-background, none);\n        border: var(--tjs-editor-border, none);\n        border-radius: var(--tjs-editor-border-radius, 0);\n        height: var(--tjs-editor-height, 100%);\n        margin: var(--tjs-editor-margin, 0);\n        outline-offset: var(--tjs-editor-outline-offset, 0.25em);\n        overflow: var(--tjs-editor-overflow, auto);\n        transition: var(--tjs-editor-transition);\n        width: var(--tjs-editor-width, 100%);\n\n        /* For Firefox. */\n        scrollbar-width: thin;\n    }\n\n    /**\n     * This class is added to editor when `editorActive` is true and unsets overflow allowing content to be scrollable\n     * keeping the menu bar always visible at the top of the component.\n     */\n    .editor-active {\n        box-shadow: var(--tjs-editor-active-box-shadow);\n        outline: var(--tjs-editor-active-outline);\n        overflow: var(--tjs-editor-active-overflow, unset);\n    }\n\n    /**\n     * Defines cursor and box-shadow / outline when the editor is inactive and hovered.\n     */\n    .tjs-editor:not(.editor-active):focus-visible {\n        box-shadow: var(--tjs-editor-inactive-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n        outline: var(--tjs-editor-inactive-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n        transition: var(--tjs-editor-inactive-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n    }\n\n    /**\n     * Defines cursor and box-shadow / outline when the editor is inactive and hovered, but not manually focused.\n     */\n    .tjs-editor:not(.editor-active):not(:focus-visible):hover {\n        box-shadow: var(--tjs-editor-inactive-box-shadow-hover);\n        outline: var(--tjs-editor-inactive-outline-hover);\n    }\n\n    /**\n     * Defines user-select when the editor is inactive and hovered.\n     */\n    .tjs-editor:not(.editor-active):hover {\n        user-select: var(--tjs-editor-inactive-user-select-hover, text);\n    }\n\n    /**\n     * Defines cursor when the editor is not active, but configured for click to edit. Give the user some indication\n     * via showing the text cursor across the whole editor element.\n     */\n    .tjs-editor.click-to-edit:not(.editor-active):hover {\n        cursor: var(--tjs-editor-inactive-cursor-hover, text);\n    }\n\n    .editor-content {\n        overflow: var(--tjs-editor-content-overflow, auto);\n        padding: var(--tjs-editor-content-padding, 0 0 0 0.25em);\n\n        /* For Firefox. */\n        scrollbar-width: thin;\n    }\n\n    .editor-edit {\n        right: var(--tjs-editor-edit-button-right, 5px);\n        top: var(--tjs-editor-edit-button-top, 0);\n    }\n\n    .editor-enriched {\n        padding: var(--tjs-editor-content-padding, 0 0 0 0.25em);\n    }\n\n    /* Controls whether the editor content text is selectable when the editor is inactive. */\n    .tjs-editor:not(.editor-active) .editor-enriched {\n        user-select: var(--tjs-editor-inactive-user-select-hover, text);\n    }\n\n    /* Don't add an initial margin top to first paragraph element in `.editor-content`. */\n    .tjs-editor .editor-container .editor-content :global(p:first-of-type) {\n        margin-top: 0;\n    }\n\n    .tjs-editor .editor-enriched :global(p:first-of-type) {\n        margin-top: 0;\n    }\n\n    /* Do add an initial margin top to first paragraph element in `section.secret`. */\n    .tjs-editor .editor-container .editor-content :global(section.secret p:first-of-type) {\n        margin-top: 0.5em;\n    }\n\n    .tjs-editor .editor-enriched :global(section.secret p:first-of-type) {\n        margin-top: 0.5em;\n    }\n\n    /* Provides global styles scoped to `.tjs-editor` for dynamic `.editor-menu` element */\n    .tjs-editor :global(.editor-menu) {\n        background: var(--tjs-editor-toolbar-background, rgba(0, 0, 0, 0.1));\n        border-radius: var(--tjs-editor-toolbar-border-radius, 6px);\n        box-shadow: var(--tjs-editor-toolbar-box-shadow, 0 2px 2px -2px rgb(34 47 62 / 10%), 0 8px 8px -4px rgb(34 47 62 / 7%));\n        margin-bottom: 0.25em;\n        padding: var(--tjs-editor-toolbar-padding, 2px 0);\n        width: var(--tjs-editor-toolbar-width, 100%);\n\n        transition: box-shadow 500ms ease-in-out;\n    }\n\n    /* Removes the awkward 1rem padding from core */\n    .tjs-editor.prosemirror.editing-source :global(textarea) {\n        padding: 0;\n    }\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n\n  import { TJSProseMirror }     from \"#standard/component/fvtt/editor\";\n  import { getContext } from \"svelte\";\n  // import { TJSContentEdit, TJSTinyMCE } from \"#standard/component/fvtt-internal\";\n\n  // If you are developing ProseMirror plugins import from this path to enable PM debugging tooling.\n  // import { TJSProseMirror }     from '@typhonjs-fvtt/svelte-standard/component/dev';\n\n  // Not always necessary, but you can use DOMPurify to sanitize user input client side.\n  // import { DOMPurify }          from '@typhonjs-fvtt/runtime/dompurify';\n\n  export let content = \"\";\n  export let attr = \"\";\n  export let classes = \"\";\n  export let editable = \"\";\n\n  const doc = getContext(\"#doc\");\n  // // console.log(\"$doc\", $doc);\n\n  function doSomethingWithEnrichedContent(event) {\n    // console.log(`! event - editor:enrichedContent - ${event.detail.enrichedContent}`)\n  }\n\n  /**\n   * You can set a document to load / save content from given a `fieldName` in the format of `a.b.c`.\n   * When you set a document you can also enable collaboration.\n   *\n   * The simplest example is:\n   *\n   * <TJSProseMirror options={{document: <doc>, fieldName: 'some.data.path'}} />\n   *\n   * The following options data is commented out as it is set to a specific document for the DnD5e system.\n   */\n  const options = {\n    document: $doc, // An item to edit description; note: replace w/ valid doc.\n    fieldName: attr, // Path to data in `a.b.c`; note: this is a v10 field name.\n    // collaborate: false,                             // Enables collaboration; requires document.\n    // button: true      // Show edit button to launch editor when hovered; when false editor is open by default.\n    classes,   // Adds additional classes to `.editor` element.\n    // clickToEdit: false,  // Clicking editor content initializes the editor; hides the edit button.\n    // DOMPurify,        // You can pass DOMPurify from `@typhonjs-fvtt/runtime/dompurify though ProseMirror does\n    // essential client side sanitation; IE stripping `<script>` tags, etc.\n    editable,   // Enable / disable editing\n    // enrichContent: true  // The default is true, but if you set it to false content is not enriched.\n    // initialSelection: 'start', // The initial selection / cursor position: 'all', 'end', or 'start'.\n    // styles: { '--tjs-editor-toolbar-background': 'red' } // Apply any inline styles / CSS variables\n  };\n\n  /**\n   * Just an example that you can also bind the content / enrichedContent. You can also bind Svelte stores.\n   */\n  let enrichedContent;\n\n  // $: if (content) {\n  //   console.log(`! bound content changed: ${content}`);\n  // }\n  // $: if (enrichedContent) {\n  //   console.log(`! bound enrichedContent changed: ${enrichedContent}`);\n  // }\n</script>\n<TJSProseMirror\n  {options}\n  {...$$restProps}\n  bind:content\n  bind:enrichedContent\n  on:editor:cancel={() => console.log(\"! event - editor:cancel\")}\n  on:editor:enrichedContent={doSomethingWithEnrichedContent}\n  on:editor:save={(event) => console.log(`! event - editor:save - ${event.detail.content}`)}\n  on:editor:start={() => console.log(\"! event - editor:start\")}\n/>\n\n\n","/**\n * A helper to get a property from an object in a backwards-compatible way.\n *\n * - Foundry V12+ requires using foundry.utils.getProperty.\n * - Older versions need to fall back on globalThis.getProperty.\n *\n * This matches the version-checking logic used elsewhere in your module.\n */\nexport function getPropertyCompat(object, key) {\n  // For example, if you already have a way of parsing or storing the version:\n  const foundryVersion = (game?.version ?? game?.data?.version) || \"0.0\";\n  const [majorVersion] = foundryVersion.split(\".\").map(v => parseInt(v, 10) || 0);\n\n  // Use foundry.utils.getProperty if Foundry is at least version 12\n  if (majorVersion >= 12 && foundry?.utils?.getProperty) {\n    return foundry.utils.getProperty(object, key);\n  }\n\n  // Fallback for older Foundry\n  return globalThis.getProperty(object, key);\n} ","<script>\n  import { getContext, onDestroy, onMount } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import Tag from \"../atoms/Tag.svelte\";\n  import { getPropertyCompat } from \"~/src/helpers/getPropertyCompat\";\n\n  const doc = getContext(\"#doc\");\n\n  export let availableTags = [];\n  export let tagsPath = \"system.tags\";\n  let selectedTag = \"\";\n\n  $: currentTags = (() => {\n    const tags = tagsPath.startsWith('flags') \n      ? ($doc.getFlag(SYSTEM_ID, tagsPath) || [])\n      : getPropertyCompat($doc, tagsPath) || [];\n    return Array.isArray(tags) ? tags : Array.from(tags);\n  })();\n\n  $: availableUnselectedTags = availableTags.filter(tag => !currentTags.includes(tag));\n\n  async function addTag() {\n    if (!selectedTag) return;\n    \n    const tags = new Set(currentTags);\n    if (tags.has(selectedTag)) {\n      ui.notifications.error(localize(\"Errors.DuplicateTag\"));\n      selectedTag = \"\";\n      return;\n    }\n\n    tags.add(selectedTag);\n    const newTags = Array.from(tags);\n    \n    if (tagsPath.startsWith('flags')) {\n      await $doc.setFlag(SYSTEM_ID, tagsPath, newTags);\n    } else {\n      await $doc.update({ [tagsPath]: newTags });\n    }\n    selectedTag = \"\";\n  }\n\n  async function removeTag(tagToRemove) {\n    const tags = new Set(currentTags);\n    tags.delete(tagToRemove);\n    const newTags = Array.from(tags);\n    \n    if (tagsPath.startsWith('flags')) {\n      await $doc.setFlag(SYSTEM_ID, tagsPath, newTags);\n    } else {\n      await $doc.update({ [tagsPath]: newTags });\n    }\n  }\n\n  onMount(() => {\n    if (!currentTags.length) {\n      if (tagsPath.startsWith('flags')) {\n        $doc.setFlag(SYSTEM_ID, tagsPath, []);\n      } else {\n        $doc.update({ [tagsPath]: [] });\n      }\n    }\n  });\n</script>\n\n<template lang=\"pug\">\n.flexcol\n  select.tag-select(bind:value=\"{selectedTag}\" on:change=\"{addTag}\")\n    option(value=\"\") {localize(\"EFFECT.Label.SelectTag\")}\n    +each(\"availableUnselectedTags as tag\")\n      option(value=\"{tag}\") {localize(`statusEffects.${tag}.name`)}\n.flexrow.gap-4.mt-sm.wrap.justify-vertical\n  +each(\"currentTags as tag\")\n    .flex0\n      Tag({tag} path=\"{tagsPath}\")\n</template>\n\n<style lang=\"sass\">\n.tag-select\n  background: var(--color-background)\n  color: var(--color-text)\n  border: 1px solid var(--color-border)\n  border-radius: 3px\n  padding: 4px\n  width: 100%\n  &:focus\n    outline: none\n    box-shadow: 0 0 0 1px var(--color-border-highlight)\n\n.wrap\n  flex-wrap: wrap\n</style> ","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { localize } from \"~/src/helpers/util\";\nimport { SYSTEM_ID } from \"~/src/helpers/constants\";\nimport { getDefaultStatusEffects } from \"~/src/helpers/Conditions\";\nimport DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\nimport DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\nimport DocCheckbox from \"~/src/components/atoms/controls/DocCheckbox.svelte\";\nimport ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\nimport TagSelect from \"~/src/components/molecules/TagSelect.svelte\";\n\nconst doc = getContext(\"#doc\");\n\nconst stackingOptions = [\n  { value: \"differentSource\", label: localize(\"EFFECT.Stackable.Options.differentSource\") },\n  { value: \"anySource\", label: localize(\"EFFECT.Stackable.Options.anySource\") },\n  { value: \"replaces\", label: localize(\"EFFECT.Stackable.Options.replaces\") }\n];\n\n$: statusOptions = getDefaultStatusEffects().map(status => status.id);\n\nonMount(async () => {\n  console.log('ActiveEffectSheet Config', $doc);\n});\n</script>\n<template lang=\"pug\">\n\n.item-sheet.details.overflow.wide.inset.mt-sm.high\n  .flexcol.flex3.left.high.wide.mb-md\n    .flex0\n      .flexrow.justify-vertical\n        .flex4\n          h1.center {localize(\"Config\")}\n      .flexrow.justify-vertical\n        .flex1\n          label.gold(for=\"name\") {localize(\"Name\")}\n        .flex4.right\n          DocInput(name=\"name\" valuePath=\"name\" fullWidth=\"{true}\" placeholder=\"Effect Name\" alwaysEditable=\"{true}\" updateOnBlur=\"{true}\")\n    .flex0.mt-sm\n      .flexrow.justify-vertical\n        .flex4\n          label.gold(for=\"transfer\") {localize(\"EFFECT.TransferEffectToActor.Label\")}\n        .flex0.right\n          DocCheckbox(name=\"transfer\" valuePath=\"transfer\")\n      .flexrow.justify-vertical\n        .flex4\n          p.caption  {localize(\"EFFECT.TransferEffectToActor.Caption\")}\n\n      .flexrow.justify-vertical\n        .flex4\n          label.gold(for=\"overlay\") {localize(\"EFFECT.Overlay.Label\")}\n        .flex0.right\n          DocCheckbox(name=\"overlay\" valuePath=\"{`flags.${SYSTEM_ID}.overlay`}\")\n      .flexrow.justify-vertical\n        .flex4\n          p.caption  {localize(\"EFFECT.Overlay.Caption\")}\n          \n      .flexrow.justify-vertical\n        .flex4\n          label.gold(for=\"stackable\") {localize(\"EFFECT.Stackable.Label\")}\n        .flex4.right\n          DocSelect.wide.right(\n            id=\"stackable\" \n            name=\"stackable\" \n            options=\"{stackingOptions}\" \n            valuePath=\"{`flags.${SYSTEM_ID}.stackable`}\"\n            defaultValue=\"differentSource\"\n          )\n      .flexrow.justify-vertical\n        .flex4\n          p.caption  {localize(\"EFFECT.Stackable.Caption\")}\n\n      .flexrow.justify-vertical\n        .flex4\n          label.gold(for=\"suspended\") {localize(\"EFFECT.Suspended.Label\")}\n        .flex0.right\n          DocCheckbox(name=\"suspended\" valuePath=\"{`disabled`}\")\n      .flexrow.justify-vertical\n        .flex4\n          p.caption  {localize(\"EFFECT.Suspended.Caption\")}\n\n      .flexrow.justify-vertical\n        .flex4\n          label.gold(for=\"statuses\") {localize(\"EFFECT.Label.Statuses\")}\n      .flexcol.sheet-row.justify-vertical\n        .flex2.left\n          TagSelect(availableTags=\"{statusOptions}\" tagsPath=\"statuses\")\n    \n    .flex1.mb-xl\n      .flexrow.justify-vertical\n        .flex4\n          label.gold(for=\"description\") {localize(\"EFFECT.Description.Label\")}\n      .flexcol.sheet-row.justify-vertical.high\n        .flex2.left.prose.high.short\n          ProseMirror( id=\"description\" name=\"description\" attr=\"description\")\n    \n</template>\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n  .inset\n    +mixins.inset(1rem)\n  label\n    font-size: var(--size-md-h)\n</style>","<script>\n  import { getContext } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\n  import { getDurationTypeOptions } from \"~/src/helpers/constants\";\n\n  const doc = getContext(\"#doc\");\n\n  // Reactive bindings for duration fields\n  $: duration = $doc.duration || {};\n  $: durationTypeOptions = getDurationTypeOptions();\n</script>\n\n<template lang=\"pug\">\n  .item-sheet.details.overflow\n    .flexcol.flex3.left.high.wide\n      h3.left {localize(\"EFFECT.Duration.Title\")}\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"durationType\") {localize(\"EFFECT.Duration.Type\")}\n        .flex4.right.wide\n          DocSelect.right(\n            id=\"durationType\"\n            options=\"{durationTypeOptions}\"\n            valuePath=\"duration.type\"\n          )\n\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"startTime\") {localize(\"EFFECT.Duration.StartTime\")}\n        .flex4.right.wide\n          DocInput.wide(id=\"startTime\" valuePath=\"duration.startTime\")\n\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"turns\") {localize(\"EFFECT.Duration.Turns\")}\n        .flex4.right.wide\n          DocInput.wide(id=\"turns\" valuePath=\"duration.turns\")\n\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"rounds\") {localize(\"EFFECT.Duration.Rounds\")}\n        .flex4.right.wide\n          DocInput.wide(id=\"rounds\" valuePath=\"duration.rounds\")\n\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"startRound\") {localize(\"EFFECT.Duration.StartRound\")}\n        .flex4.right.wide\n          DocInput.wide(id=\"startRound\" valuePath=\"duration.startRound\")\n\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"startTurn\") {localize(\"EFFECT.Duration.StartTurn\")}\n        .flex4.right.wide\n          DocInput.wide(id=\"startTurn\" valuePath=\"duration.startTurn\")\n\n</template>\n\n<style lang=\"sass\">\n@use '../../../styles/_mixins' as mixins\n\n.details\n  max-height: calc(100% - 15px) //- prevents the scrolling area's content from being hidden below the fold\n  +mixins.inset(1rem)\n\nlabel\n  color: var(--color-highlight)\n</style> ","<script>\n  import { onMount, getContext, setContext } from \"svelte\";\n  import { ApplicationShell } from \"#runtime/svelte/component/application\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import Changes from \"~/src/components/tabs/activeEffect/Changes.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import Config from \"~/src/components/tabs/activeEffect/Config.svelte\";\n  import Duration from \"~/src/components/tabs/activeEffect/Duration.svelte\";\n  \n  export let elementRoot = void 0;\n  export let doc;\n\n  const application = getContext('#external').application;\n  // setContext(\"#doc\", application.reactive.document);\n  setContext(\"#doc\", doc);\n  \n  let activeTab = \"config\";\n  \n  const tabs = [\n    { \n      label: localize('EFFECT.Config'), \n      id: \"config\", \n      component: Config,\n      img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/cog.webp'\n    },\n    {\n      label: localize('Duration.Title'),\n      id: \"duration\",\n      component: Duration,\n      img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/duration.webp'\n    },\n    { \n      label: localize('EFFECT.Changes'), \n      id: \"changes\", \n      component: Changes,\n      img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/list.webp'\n    },\n  ];\n\n  onMount(() => {\n    // Any initialization if needed\n    // game.system.log.g('FFActiveEffectShell doc', doc);\n    // game.system.log.g('FFActiveEffectShell $doc', $doc);\n    // game.system.log.g('FFActiveEffectShell application', application);\n  });\n</script>\n\n<svelte:options accessors={true}/>\n\n<template lang=\"pug\">\n   ApplicationShell(bind:elementRoot)\n    .flexrow.gap-15.wide.high.no-overflow.nowrap\n      .flex4.wide.mr-sm.high\n        section.mt-sm.high\n          .flex1.portrait-frame\n            PortraitFrame.high.frame.wide\n              Tabs.tabs.small.wide( {tabs} bind:activeTab=\"{activeTab}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../styles/_mixins' as mixins\n\n  .portrait-frame \n    margin-right: -2px\n    z-index: 2\n    height: calc(100% - 10px)\n</style>\n","import { SvelteApplication } from \"#runtime/svelte/application\";\nimport { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\nimport { generateRandomElementId } from \"~/src/helpers/util\";\nimport { SYSTEM_CODE, SYSTEM_ID } from \"~/src/helpers/constants\";\nimport FFActiveEffectShell from './FFActiveEffectShell.svelte';\n\n/**\n * Sheet class for handling Active Effects in the FFXIV system\n * @extends {ActiveEffectConfig}\n */\nexport default class FFActiveEffectSheet extends SvelteApplication {\n   #doc = new TJSDocument(void 0, { delete: this.close.bind(this) });\n   #storeUnsubscribe;\n\n   /**\n    * Initializes the sheet with default options\n    * @param {object} object - The object to initialize with\n    */\n   constructor(object) {\n      super(object);\n  \n      // Define document store property\n      Object.defineProperty(this.reactive, \"document\", {\n        get: () => this.#doc.get(),\n        set: (document) => {\n          this.#doc.set(document);\n        },\n      });\n      this.reactive.document = object;\n  \n      game.system.log.d('isEditing', this.reactive.document.system.isEditing);\n    }\n  \n\n   /**\n    * Default Application options\n    * @return {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions() {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         id: `${SYSTEM_ID}--active-effect-sheet-${generateRandomElementId()}`,\n         width: 594,\n         height: 428,\n         minHeight: 180,\n         minWidth: 282,\n         resizable: true,\n         minimizable: true,\n         classes: [SYSTEM_CODE, 'sheet', 'active-effect-config'],\n         svelte: {\n            class: FFActiveEffectShell,\n            target: document.body,\n            props: {\n               doc: null\n            }\n         }\n      });\n   }\n\n   /**\n    * Gets the document associated with this sheet\n    * @return {TJSDocument} Returns the document instance associated with this sheet\n    */\n   get document() {\n      return this.#doc;\n   }\n\n   /**\n    * Injects HTML content into the application\n    * @param {HTMLElement} html - The HTML content to inject\n    * @return {Promise<void>} Returns a promise that resolves when the HTML has been injected\n    */\n   async _injectHTML(html) {\n      this.options.svelte.props.doc = this.document;\n      return super._injectHTML(html);\n   }\n\n   /**\n    * Renders the application\n    * @param {boolean} force - Whether to force a re-render\n    * @param {object} options - Additional rendering options\n    * @return {Promise<void>} Returns a promise that resolves when the application has been rendered\n    */\n   render(force = false, options = {}) {\n      if (!this.#storeUnsubscribe) {\n         this.#storeUnsubscribe = this.#doc.subscribe(this.#handleDocUpdate.bind(this));\n      }\n      return super.render(force, options);\n   }\n\n   /**\n    * Closes the application and performs cleanup\n    * @param {object} [options={}] - Options which configure the closing behavior\n    * @return {Promise<void>} Returns a promise that resolves when the application has closed\n    */\n   async close(options = {}) {\n      if (this.#storeUnsubscribe) {\n         this.#storeUnsubscribe();\n         this.#storeUnsubscribe = void 0;\n      }\n      return super.close(options);\n   }\n\n   /**\n    * Handles document updates\n    * @param {object} doc - The updated document\n    * @private\n    * @return {void}\n    */\n   #handleDocUpdate(doc) {\n      if (doc) {\n         this.reactive.title = `${game.i18n.localize(\"FFXIV.EFFECT.ConfigTitle\")}: ${doc.name || ''}`;\n      }\n   }\n}","import { get, writable } from 'svelte/store';\nimport { isWritableStore } from \"#runtime/svelte/store/util\";\nimport { Strings } from \"#runtime/util\";\nimport { isIterable } from \"#runtime/util/object\";\nimport { stepwiseResolveDotpath } from '~/src/helpers/paths';\n\n\n/**\n * Creates a filter function to compare objects by a given property key against a regex test.\n * The returned function is also a writable Svelte store that builds a regex from the store's value.\n * This filter function can be used with DynArrayReducer and bound as a store to input elements.\n *\n * @param {string|Iterable<string>} properties - Property key to compare\n * @param {object} [opts] - Optional parameters\n * @param {boolean} [opts.caseSensitive=false] - When true regex test is case-sensitive\n * @return {function} The query string filter function with store capabilities\n */\nexport function createFilterQuery(properties, { caseSensitive = false, store } = {}) {\n  let keyword = '';\n  let regex;\n\n  if (store !== void 0 && !isWritableStore(store)) {\n    throw new TypeError(`createFilterQuery error: 'store' is not a writable store.`);\n  }\n\n  const storeKeyword = store ? store : writable(keyword);\n\n  // If an existing store is provided then set initial values.\n  if (store) {\n    const current = get(store);\n\n    if (typeof current === 'string') {\n      keyword = Strings.normalize(current);\n      game.system.log.d('keyword', keyword);\n      regex = new RegExp(RegExp.escape(keyword), caseSensitive ? '' : 'i');\n      game.system.log.d('keyword', regex);\n    }\n    else {\n      store.set(keyword);\n    }\n  }\n\n  /**\n   * Filter function that tests data against the current regex\n   * @param {object} data - Data object to test against regex\n   * @return {boolean} Whether the data matches the filter\n   */\n  function filterQuery(data) {\n    if (keyword === '' || !regex) { \n      game.system.log.d('No keyword or regex, returning true');\n      return true; \n    }\n    \n\n    if (isIterable(properties)) {\n      // console.log('isIterable')\n      for (const property of properties) {\n        const value = data?.[property];\n        // game.system.log.d('Checking property:', property, 'with value:', value);\n        \n        // Check if value is defined\n        if (value !== undefined) {\n          // Handle boolean values directly\n          if (typeof value === 'boolean') {\n            // game.system.log.d('Boolean value found:', value);\n            if (value.toString() === keyword) {\n              // game.system.log.d('Match found for boolean:', value);\n              return true; \n            }\n          } else {\n            // Normalize string values\n            const normalizedValue = Strings.normalize(value);\n            // game.system.log.d('Normalized value:', normalizedValue);\n            if (regex.test(normalizedValue)) { \n              // game.system.log.d('Match found for normalized value:', normalizedValue);\n              return true; \n            }\n          }\n        } else {\n          // game.system.log.d('Value is undefined for property:', property);\n        }\n      }\n      // game.system.log.d('No matches found in iterable properties');\n      return false;\n    }\n    else {\n      // Handle the single property case\n      const steps = stepwiseResolveDotpath(data, properties);\n      const value = steps[steps.length - 1].val; // Get the final value from the resolved steps\n      // game.system.log.d('Checking single property:', properties, 'with value:', value);\n      \n      // Check if value is defined\n      if (value !== undefined) {\n        // Handle boolean values directly\n        if (typeof value === 'boolean') {\n          // game.system.log.d('Boolean value found in single property:', value);\n          return value.toString() === keyword; // Compare boolean as string\n        }\n        // Normalize string values\n        const normalizedValue = Strings.normalize(value);\n        // game.system.log.d('Normalized value for single property:', normalizedValue);\n        return regex.test(normalizedValue);\n      }\n      // game.system.log.d('Value is undefined for single property:', properties);\n      return false; // Return false if value is undefined\n    }\n  }\n\n  /**\n   * Subscribe to changes in the filter value\n   * @param {function} handler - A callback function that accepts strings\n   * @return {object} Returns an object with a subscribe method\n   */\n  filterQuery.subscribe = (handler) => {\n    return storeKeyword.subscribe(handler);\n  };\n\n  /**\n   * Set a new value for the filter\n   * @param {string|boolean|Array<string>} value - A new value for the keyword/regex test\n   * @return {void} Nothing\n   */\n  filterQuery.set = (value) => {\n    game.system.log.d('value', value)\n\n    if (Array.isArray(value)) {\n      // Join the array into a regex pattern\n      const pattern = value.map(v => RegExp.escape(Strings.normalize(v))).join('|');\n      keyword = value.join(', '); // Store the original values for reference\n      regex = new RegExp(pattern, caseSensitive ? '' : 'i');\n    } else if (typeof value === 'string') {\n      keyword = Strings.normalize(value);\n      game.system.log.d('keyword', keyword)\n      regex = new RegExp(RegExp.escape(keyword), caseSensitive ? '' : 'i');\n    } else if (typeof value === 'boolean') {\n      keyword = value.toString(); // Convert boolean to string\n      regex = new RegExp(keyword, caseSensitive ? '' : 'i'); // Create regex for boolean string\n    }\n    \n    storeKeyword.set(keyword);\n  };\n\n  return filterQuery;\n}\n","<script>\n  export let type = '';\n  \n  $: badgeClasses = type ? `badge-${type}` : '';\n</script>\n\n<template lang=\"pug\">\n.badge(class=\"{badgeClasses}\")\n  slot\n</template>\n\n<style lang=\"sass\">\n@use '../../styles/_mixins' as mixins\n\n\n.badge\n  align-items: center\n  justify-content: center\n  padding: 0.25rem 0.5rem\n  border-radius: 0.25rem\n  font-size: 0.75rem\n  color: #fff\n  font-weight: 600\n  line-height: 1\n  white-space: nowrap\n  background-color: var(--color-text-dark-inactive)\n  &.round\n    display: none\n    padding: 0.25rem\n    min-width: 1.5rem\n    min-height: 1.5rem\n\n.badge-success\n  background-color: var(--color-positive)\n\n.badge-warning\n  background-color: var(--color-warning)\n\n.badge-danger\n  background-color: var(--color-negative)\n\n.badge-primary\n  background-color: rgb(205, 83, 110)\n\n.badge-secondary\n  background-color: rgb(205, 83, 110)\n</style> ","<script>\n  import { getContext, onMount } from \"svelte\";\n  import { rippleFocus } from \"#standard/action/animate/composable\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n  import { TJSInput } from \"#standard/component/form\";\n  import { createFilterQuery } from \"~/src/filters/itemFilterQuery\";\n  import { toggleBookmark, ucfirst } from \"~/src/helpers/util\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import ScrollingContainer from \"~/src/helpers/svelte-components/ScrollingContainer.svelte\";\n  import InventoryRow from \"~/src/components/molecules/InventoryRow.svelte\";\n  import Badge from \"~/src/components/atoms/Badge.svelte\";\n  import Tag from \"~/src/components/atoms/Tag.svelte\";\n\n  // export let sheet;\n  \n  const Actor = getContext(\"#doc\");\n  const doc = new TJSDocument($Actor);\n  const RollCalc = new CONFIG.FFXIV.RollCalcActor({ actor: $Actor });\n  const typeSearch = createFilterQuery(\"type\");\n  typeSearch.set([\"trait\", \"action\"]); // Updated to filter for both types\n  const input = {\n    store: typeSearch,\n    efx: rippleFocus(),\n    placeholder: \"by Name\",\n    type: \"search\",\n    id: \"search\",\n  };\n\n  onMount(() => {\n    // Initial combat state\n  });\n\n  /** @type {import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, Item>} */\n  const wildcard = doc.embedded.create(Item, {\n    name: \"wildcard\",\n    filters: [typeSearch],\n    sort: (a, b) => {\n      //- compare a.type to b.type and then a.system.type to b.system.type and then a.name to b.name\n      //- for b.system.type place secondary before reaction and primary before secondary\n      const typeOrder = [ 'primary', 'secondary', 'reaction'];\n      if (a.type === b.type) {\n        if (a.system.type === b.system.type) {\n          return a.name.localeCompare(b.name)\n        }\n        return typeOrder.indexOf(a.system.type) - typeOrder.indexOf(b.system.type)\n      }\n      return a.type.localeCompare(b.type)\n    }\n  });\n\n  function editItem(item) {\n    item.sheet.render(true);\n  }\n\n  function addQuantity(item) {\n    const quantity = item.system.quantity + 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function removeQuantity(item) {\n    const quantity = item.system.quantity - 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function duplicateItem(item) {\n    const itemData = item.toObject();\n    delete itemData._id;\n    $Actor.sheet._onDropItemCreate(itemData);\n  }\n\n  function deleteItem(index, item) {\n    let okToDelete = true;\n    if (game.settings.get(SYSTEM_ID, \"confirmBeforeDeletingActorItem\")) {\n      okToDelete = confirm(game.i18n.localize(\"Types.Actor.Abilities.confirmDeleteItem\"));\n    }\n    if (okToDelete) {\n      item.delete();\n    }\n  }\n\n  async function removeAllItems() {\n    const okToDelete = await Dialog.confirm({\n      title: localize(\"Types.Actor.Abilities.confirmDeleteAllTitle\"),\n      content: localize(\"Types.Actor.Abilities.confirmDeleteAll\"),\n      yes: async () => {  \n        await $Actor.deleteAllItems([\"trait\", \"action\"]);\n      },\n      no: () => {},\n    });\n  }\n\n  async function resetAllUses() {\n    const items = $Actor.items.filter(item => item.system.hasLimitation);\n    for (const item of items) {\n      await item.update({ 'system.uses': 0 });\n    }\n  }\n\n  function roll(item) {\n    game.system.log.d(\"roll\");\n    game.system.log.d(item);\n  }\n\n  function toggleLock(event) {\n    game.system.log.d(\"a\");\n    event.stopPropagation();\n    event.preventDefault();\n    $doc.update(\n      {\n        [\"system.inventoryLocked\"]: !$doc.system.inventoryLocked,\n      },\n      {\n        diff: true,\n        diffData: true,\n        diffSystem: true,\n      },\n    );\n  }\n\n  function showItemSheet(item) {\n    item.sheet.render(true);\n  }\n\n  async function deleteJob() {\n    if (!$doc.system.job.uuid) {\n      return;\n    }\n\n    const okToDelete = await Dialog.confirm({\n      title: localize(\"Types.Actor.Abilities.confirmDeleteJobTitle\"),\n      content: localize(\"Types.Actor.Abilities.confirmDeleteJob\"),\n      yes: async () => {\n        //- get the job by uuid\n        const job = await fromUuid($doc.system.job.uuid);\n        \n        //- get the grants from the job\n        const grants = job?.system?.grants;\n        if (grants) {\n\n          const grantedItems = [];\n          for (let grant of grants.list) {\n            const item = await fromUuid(grant.uuid);\n            if (item) grantedItems.push(item);\n          }\n          \n          //- find and delete matching items on actor\n          const actorItems = $doc.items.filter(x => ['action', 'trait'].includes(x.type));\n          \n          for (let grantedItem of grantedItems) {\n            // Find matching items by name and type\n            const matchingItems = actorItems.filter(x => \n              x.name === grantedItem.name && \n              x.type === grantedItem.type\n            );\n            \n            // Delete all matching items\n            for (let item of matchingItems) {\n              game.system.log.d(\"Deleting item:\", item);\n              await item.delete();\n            }\n          }\n        }\n\n        //- update the actor to remove the job uuid\n        await $doc.update({ system: { job: { uuid: \"\", name: \"\", grants: [], level: null, img: null, role: '' } } });\n      },\n      no: () => {},\n    });\n  }\n\n  onMount(async () => {\n  });\n\n  $: items = [...$wildcard];\n  $: lockCSS = $doc.system.inventoryLocked ? \"lock\" : \"lock-open\";\n  $: faLockCSS = $doc.system.inventoryLocked ? \"fa-lock negative\" : \"fa-lock-open positive\";\n  $: hasItems = $Actor.items.some(x=> ['action', 'trait'].includes(x.type));\n  \n  const badgeType = (item) => {\n    return item.system.uses >= item.system.limitation ? 'danger' : 'success';\n  }\n  \n\n  const actionTypeClass = (item) => {\n    return item.type === 'action' ? item.system?.type : 'trait';\n  }\n\n</script>\n\n<template lang=\"pug\">\n\n    //- .flexrow.pt-sm.pr-sm\n    //-   .flexcol.flex1.label-container \n    //-     label Search\n    //-   .flex3.left\n    //-     TJSInput({input})\n    //-   .flexcol.flex1.label-container \n    //-     label Type\n    //-   .flex3.right\n    //-     Select.short(options=\"{typeFilterOptions}\" bind:value=\"{typeFilterValue}\")\n\n    .panel.overflow.containerx\n      .padded\n        //- add in the job item if it exists\n        +if(\"$Actor.system.job?.name\")\n          h1.left.gold {localize('Job')}\n          table.borderless\n            tr\n              th.img.shrink(scope=\"col\")\n                img.icon(src=\"{$Actor.system.job?.img}\" alt=\"{$Actor.system.job?.img}\")\n              th.left.expand.gold.larger(scope=\"col\" on:click=\"{showItemSheet($Actor.system.job)}\" role=\"button\") {ucfirst($Actor.system.job?.name)}\n              th.expand.scaleup.kerned.glow.gold.largerer(scope=\"col\") {$Actor.system.job?.level}\n              th.buttons(scope=\"col\")\n                button.stealth(on:click=\"{deleteJob}\")\n                  i.fa-solid.fa-trash\n\n\n        h1.gold {localize('Abilities')}\n        table.borderless.even\n          tr.gold\n            th.img.shrink(scope=\"col\")\n            th.left.expand.ml-sm(scope=\"col\") {localize('Name')}\n            th(scope=\"col\" colspan=\"1\") {localize('Tags')}\n            th.buttons(scope=\"col\" class=\"{lockCSS}\" colspan=\"2\")\n              button.stealth(class=\"{lockCSS}\" on:click=\"{toggleLock}\")\n                i.fa(class=\"{faLockCSS}\")\n          +each(\"items as item, index\")\n            //- pre item.type {item.type}\n            tr(class=\"{actionTypeClass(item)}\")\n              td.img(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{localize('Use')}\" on:click!=\"{RollCalc.ability(item.type, item)}\" role=\"button\")\n                img.icon(src=\"{item.img}\" alt=\"{item.name}\")\n              td.left.text.ellipsis\n                .flexrow\n                  .flex3.left(data-tooltip-class=\"FFXIV-tooltip wordy\" data-tooltip=\"{item.system.description}\")\n                    a.stealth.link(class=\"{item.system.isMagic ? 'pulse' : ''}\" role=\"button\" on:click=\"{showItemSheet(item)}\") {item.name}\n                  +if(\"item.system.hasLimitation && game.combat\")\n                    .flex0.right.ml-sm.pt-s(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{localize('Types.Item.Types.action.UsesRemaining')}\")\n                      Badge(type!=\"{badgeType(item)}\") {item.usesRemaining}\n              //- td.left {ucfirst(item.type)}\n              //- td.left {item.type === 'action' ? ucfirst(item.system?.type || '') : ''}\n              td.right.no-wrap\n                +if(\"item.system.tags\") \n                  +each(\"item.system.tags as tag\")\n                    Tag.badge.small.square({tag}, remover=\"{false}\")\n              td.shrink(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{localize('Bookmark')}\")\n                button.stealth(on:click=\"{toggleBookmark(item)}\") \n                  i.fa-bookmark(class=\"{item.system.favourite === true ? 'fa-solid' : 'fa-regular'}\" role=\"button\")\n              td.min.buttons.right\n                +if(\"!$doc.system.inventoryLocked\")\n                  button.stealth(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{localize('Types.Actor.ActionButtons.Edit')}\" on:click=\"{editItem(item)}\")\n                    i.left.fa.fa-edit(role=\"button\")\n                  button.stealth(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{localize('Types.Actor.ActionButtons.Duplicate')}\" on:click=\"{duplicateItem(index, item)}\")\n                    i.left.fa.fa-copy(role=\"button\")\n                  button.stealth(data-tooltip-class=\"FFXIV-tooltip\" data-tooltip=\"{localize('Types.Actor.ActionButtons.Delete')}\" on:click=\"{deleteItem(index, item)}\")\n                    i.left.fa.fa-trash(role=\"button\")\n            \n      +if(\"hasItems\")\n        button.mt-sm.glossy-button.gold-light.hover-shine(on:click=\"{removeAllItems}\") {localize(\"Instructions.RemoveAll\")}\n        button.glossy-button.gold-light.hover-shine.ml-sm(on:click=\"{resetAllUses}\") {localize(\"Instructions.ResetUses\")}\n\n</template>\n\n<style lang=\"sass\">\n@use '../../../../styles/_mixins' as mixins\n\n.containerx\n  container-type: inline-size\n\n.padded\n  transition: padding 0.2s ease-in-out\n  @container (min-width: 350px)\n    padding: 1rem\n\n.pulse\n  +mixins.pulse\n  +mixins.buttons\n\n.actions\n  margin-left: 0.5rem\n  margin-right: 0\n  justify-content: right\n  :not(:last-child)\n    margin-right: 2px\n\n.clickable\n  max-height: 1.3rem\n  line-height: 1.3rem\n  background: rgba(255, 255, 255, 0.2)\n\ni.disable\n  color: grey\n  cursor: not-allowed\n\n.fa-bookmark\n  cursor: pointer\n  &.row\n    color: rgba(100, 0, 100, 1)\n\n// table tr\n//   td\n//     line-height: 1.5rem\n//   &.reaction\n//     td:nth-child(2)\n//       color: var(--color-reaction)\n//   &.primary\n//     td:nth-child(2)\n//       color: var(--color-primary-action)\n//   &.secondary\n//     td:nth-child(2)\n//       color: var(--color-secondary-action)\n\ntable tr\n  td:first-child\n    border-top-left-radius: var(--border-radius)\n    border-bottom-left-radius: var(--border-radius)\n  td:last-child\n    border-top-right-radius: var(--border-radius)\n    border-bottom-right-radius: var(--border-radius)\n  td\n    vertical-align: middle\n    line-height: 1.7rem\n  &.reaction\n    background-color: var(--color-reaction)\n    color: white\n  &.primary\n    background-color: var(--color-primary-action)\n    color: white\n  &.secondary\n    background-color: var(--color-secondary-action)\n    color: white\n  &.trait\n    background-color: var(--color-trait)\n    color: white\n  &.limit\n    background-color: var(--color-limitbreak-action)\n    color: white\n\n.itemrow\n  height: 1.9rem\n\n.rowimgbezelbutton\n  border-style: solid\n  border-width: 1px\n  border-color: #bbb #aaa #999\n  text-shadow: 0 1px 0 #eee\n  background: #ccc\n  color: #333\n  font-family: \"Lucida Grande\"\n  font-size: 12px\n  font-weight: bold\n  text-decoration: none\n  -webkit-border-radius: 3px\n  -webkit-box-shadow: inset 0 1px 1px #fff, inset 0 -1px 1px #aaa, 0 2px 4px -3px #666\n  &.lock-open\n    background-color: #19762d\n    color: white\n  &.lock\n    background-color: #9c0f0f\n    color: white\n\n.rowimgbezelbutton:active\n  -webkit-box-shadow: inset 0 1px 1px #aaa, inset 0 -1px 1px #aaa\n  border-color: #888 #aaa #eee\n\n.icon\n  cursor: pointer\n  margin-left: -1px\n  &:hover\n    transform: scale(1.1)\n    transition: transform 0.2s ease-in-out\n\n</style>\n","<script>\nimport { onMount, getContext } from 'svelte';\nimport { localize } from \"#runtime/util/i18n\"\nimport { SYSTEM_CODE } from '~/src/helpers/constants'\nimport { ucfirst } from '~/src/helpers/util'\n\nexport let code;\nexport let key;\nexport let abbreviateLabel = false;\nexport let showSign = false;\n\nexport let onclick = () => {\n  console.log('default onclick');\n};\n\nconst actor = getContext('#doc');\nconst application = getContext(\"#external\").application;\nconst { width } = application.position.stores;\n// game.system.log.d('actor', actor);\n// game.system.log.d('$actor', $actor);\n\nconst add = () => {\n  if(!isEditing) return;\n  $actor.update({system: {attributes: {[key]: { [code]: {val: value + 1}}}}})\n}\n\nconst remove = () => {\n  if(!isEditing) return;\n  $actor.update({system: {attributes: {[key]: { [code]: {val: value - 1}}}}})\n}\n\n\n\n$: label = abbreviateLabel ? localize(`${SYSTEM_CODE}.Types.Actor.Types.PC.Attributes.${key}.${code}.Abbreviation`) : localize(`${SYSTEM_CODE}.Types.Actor.Types.PC.Attributes.${key}.${code}.Label`);\n$: value = $actor?.system?.attributes?.[key]?.[code]?.val;\n$: isEditing = $actor?.system?.isEditing;\n$: sign = showSign ? value > 0 ? '+' : value < 0 ? '' : '' : '';\n$: disabled = isEditing ? '' : 'disabled'\n\n$: abbreviateLabel = $width <= 600;\n\nonMount(() => {\n});\n\n</script>\n<template lang='pug'>\n  .attribute\n    .underscore.flexrow.justify-vertical\n      +if(\"!isEditing\")\n        .flex0\n          button.wide.stealth.flex.dice(on:click!=\"{onclick(key, code)}\")\n            i.fas.fa-dice\n      .flex3.left\n        button.left.wide.tall.stealth.flexrow(class=\"{disabled}\" data-tooltip=\"{isEditing ? localize(`${SYSTEM_CODE}.Types.Actor.EditAttribute.Tooltip`) : undefined}\" on:click=\"{add}\" on:contextmenu=\"{remove}\") \n          .flex2.header {label} \n          .flex0.header {sign}{value} \n    \n</template>\n<style lang='sass'>\n  @use '../../../styles/_mixins' as mixins\n  .attribute\n    width: 100%\n    +mixins.white-shadow-header(var(--size-md))\n    +mixins.white-shadow-underscore(3.5px, rgba(255, 255, 255, 0.4), rgba(0,0,0,0.3), 0px, 0.1em, -3px, 103%, 0px)\n    \n    & \n      margin-bottom: 1em\n      transform: scaleY(1.5)\n      transform-origin: top\n      text-align: left\n  .dice\n    z-index: 3\n    max-width: 1.4rem\n    color: white\n    cursor: pointer\n    transform: scaleY(0.75)\n    transform-origin: top\n    text-align: left\n    color: var(--ff-border-color)\n    &:hover\n      color: var(--border-highlight)\n\n  button\n    &.dice\n      margin-bottom: -5px\n      padding: 0\n</style>","<script>\n  import { onMount } from \"svelte\";\n  import Attribute from \"~/src/components/atoms/actor/Attribute.svelte\";\n\n  export let data;\n  export let abbreviateLabel = false;\n  export let key;\n  export let showSign = false;\n\n  export let onclick;\n\n\n  onMount(() => {});\n</script>\n\n<template lang=\"pug\">\n  .component\n    +each(\"data as { code }, index\")\n      Attribute( showSign=\"{showSign}\" abbreviateLabel=\"{abbreviateLabel}\" key=\"{key}\" code=\"{code}\" onclick=\"{onclick}\" )\n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n</style>\n","<script>\nimport { onMount } from 'svelte';\nimport { localize } from '~/src/helpers/util';\nimport AttributeCol from \"~/src/components/molecules/Attributes/AttributeCol.svelte\";\n\nexport let onclick;\n\nlet data = [\n  { code: 'str' },\n  { code: 'dex' },\n  { code: 'vit' },\n  { code: 'int' },\n  { code: 'mnd' }\n]\n</script>\n<template lang='pug'>\n  .molecule\n    .flexrow.header.underscore.mb-md {localize(\"Primary\")} {localize(\"Attributes\")}\n    AttributeCol( key=\"primary\" showSign=\"{true}\" abbreviateLabel=\"{true}\" data=\"{data}\" onclick=\"{onclick}\")\n</template>\n\n<style lang='sass'>\n  @use '../../../styles/_mixins' as mixins\n  \n  /* @vite-ignore */\n  .molecule\n    padding: 1em\n    width: 100%\n    +mixins.white-shadow-header\n    +mixins.white-shadow-underscore\n    \n</style>","<script>\n  import { onMount } from 'svelte';\n  import { localize } from \"~/src/helpers/util\";\n  import AttributeCol from \"~/src/components/molecules/Attributes/AttributeCol.svelte\";\n\n  export let onclick;\n\n  let data = [\n  { code: 'def' },\n  { code: 'mag' },\n  { code: 'vig' },\n  { code: 'spd' }\n]\n  </script>\n  <template lang='pug'>\n    .molecule\n      .flexrow.header.underscore.mb-md {localize(\"Secondary\")} {localize(\"Attributes\")}\n      AttributeCol(key=\"secondary\" data=\"{data}\" onclick=\"{onclick}\")\n      \n  </template>\n\n  <style lang='sass'>\n    @use '../../../styles/_mixins' as mixins\n  \n    .molecule\n      width: 100%\n      padding: 1em\n      +mixins.white-shadow-header\n      +mixins.white-shadow-underscore\n\n  </style>","<script>\nimport { onMount, getContext } from 'svelte';\nimport { SYSTEM_ID } from \"~/src/helpers/constants\";\nimport PrimaryAttributes from \"~/src/components/molecules/Attributes/PrimaryAttributes.svelte\";\nimport SecondaryAttributes from \"~/src/components/molecules/Attributes/SecondaryAttributes.svelte\";\n\n\nconst actor = getContext(\"#doc\");\nconst RollCalc = new CONFIG.FFXIV.RollCalcActor({ actor: $actor });\n\nconst onclick = async (key, code) => {\n  await RollCalc.attribute(key, code);\n}\n\n</script>\n<template lang='pug'>\n  .molecule.flexrow\n    .flex\n      PrimaryAttributes(onclick=\"{onclick}\")\n    .flex\n      SecondaryAttributes(onclick=\"{onclick}\")\n    \n</template>\n<style lang='sass'>\n  @use '../../../styles/_mixins' as mixins\n\n  .molecule\n    height: 100%\n    width: 100%\n    white-space: nowrap\n</style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import { localize } from \"~/src/helpers/util\";\n\n  let levelEnabled = false;\n\n  const actor = getContext(\"#doc\");\n\n  //- truncate everything after and including the first space\n  $: jobName = $actor.system.job?.name.split(' ')[0].toUpperCase();\n  $: roleName = $actor.system.job?.role.toUpperCase();\n  $: level = $actor.system.job?.level || ''\n  $: hasJob = $actor.system.job?.name ? true : false;\n\n  onMount(() => {\n    // console.log('TitleBlock mounted');\n  });\n\n  async function rest(event) {\n    const confirmed = await Dialog.confirm({\n      title: \"\",\n      content: localize(\"TitleBlock.ConfirmRest\"),\n      yes: async () => {\n        await $actor.update({\n          system: {\n            points: {\n              MP: { val: $actor.system.points.MP.max },\n              HP: { val: $actor.system.points.HP.max },\n            },\n            BP: { val: $actor.system.points.BP.max },\n          },\n        });\n        ui.notifications.info(localize(\"TitleBlock.PointsRestored\")); // Use localized string\n      },\n      no: () => {},\n    });\n  }\n</script>\n\n<template lang=\"pug\">\n.px-sm.panel.pt-xs.containerx.wide\n  .flexrow\n    .flex4.no-wrap\n      .flexrow.no-wrap\n        .flex1.rest-button\n          .left.mt-xxs\n            button.stealth(on:click|preventDefault=\"{rest}\" data-tooltip=\"{localize('TitleBlock.Rest')}\" aria-label=\"{localize('TitleBlock.Rest')}\")\n              img.rest-icon(src=\"/systems/foundryvtt-final-fantasy/assets/icons/tabs/tent.webp\" alt=\"{localize('TitleBlock.Rest')}\")\n\n        .flex4.nowrap.font-inter.lvcontainer.glow\n          .scaleup {localize('LV')} \n          .scaleup {level}\n\n    .flex4.no-wrap.font-cinzel.job  {roleName} /  {jobName}\n       \n</template>\n\n<style lang=\"sass\">\n  @use '../../styles/_mixins' as mixins\n  .containerx\n    container-type: inline-size\n    font-size: 2rem\n    color: white\n  .rest-button\n    max-width: 35px\n  .rest-icon\n    min-width: 35px\n    \n  .job\n    text-align: right\n    @container (max-width: 390px)\n      text-align: center\n  .lvcontainer\n    display: flex\n    justify-content: center\n    gap: 3rem\n    min-width: 11rem\n\n</style>\n","<script>\nimport { onMount } from 'svelte';\nimport PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\nimport AttributeBlock from \"~/src/components/molecules/Attributes/AttributeBlock.svelte\";\nimport TitleBlock from \"~/src/components/molecules/TitleBlock.svelte\";\nimport { ASSET_PATH } from '~/src/helpers/constants';\nimport { getContext } from 'svelte';\n\nconst application = getContext(\"#external\").application;\nconst documentStore = getContext(\"#doc\");\nlet _filePickerInstance = {};\n\nfunction _launchStandardProfileEditor(event) {\n    const current = $documentStore.img;\n    if (_filePickerInstance instanceof FilePicker && !_filePickerInstance?.rendered) {\n      _filePickerInstance.render(true);\n      return;\n    }\n    _filePickerInstance = new FilePicker({\n      type: \"image\",\n      current: current,\n      callback: (path) => {\n        $documentStore.update({ img: path });\n      },\n\n      top: application.position.top + 40,\n      left: application.position.left + 10,\n    });\n    return _filePickerInstance.browse();\n  }\n\n  //- provide Tokenizer support\n  function _editToken(event) {\n    if (game.modules.has(\"vtta-tokenizer\") && typeof Tokenizer !== \"undefined\") {\n      _launchTokenizer();\n    } else {\n      _launchStandardProfileEditor(event);\n    }\n  }\n\n  function _launchTokenizer() {\n    if (game.modules.has(\"vtta-tokenizer\") && typeof Tokenizer !== \"undefined\") {\n      Tokenizer.tokenizeActor($documentStore);\n    }\n  }\n</script>\n<template lang='pug'>\n  section.organism\n    .flexcol.background\n      .texture\n      TitleBlock\n      .flexrow.panel.borderless\n        .flex2\n          AttributeBlock\n        .flex1.portrait-frame\n          PortraitFrame(img=\"{true}\" imgSrc=\"{$documentStore?.img}\" onclick=\"{_editToken}\")\n      \n</template>\n<style lang='sass'>\n  @use '../../../styles/_mixins' as mixins\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n\n  +mixins.background\n</style>","<script>\n  import { onMount, getContext } from 'svelte';\n  import { localize } from \"~/src/helpers/util\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n\n  const actor = getContext(\"#doc\");\n  \n  onMount(() => {\n\n  });\n  </script>\n  <template lang='pug'>\n    .hp.flexrow.justify-vertical\n      .flex3\n        .header \n          .header {localize(\"Types.Actor.Points.HP.short\")}\n        .sub-header\n          .header {localize(\"Types.Actor.Points.HP.Label\")}\n\n      .flex2\n        .flex.sub-header \n          .header Max\n        .flex.max.header \n          .header\n            DocInput.wide(clickType=\"click\" pulse=\"{true}\" type=\"number\" name=\"HP\" min=0 valuePath=\"system.points.HP.max\")\n      .flex2.left\n        .header.val\n          .header\n            DocInput.wide(clickType=\"click\" pulse=\"{true}\" type=\"number\" name=\"HP\" min=0 max=\"{$actor.system.points.HP.max}\" valuePath=\"system.points.HP.val\")\n        \n  </template>\n\n  <style lang='sass'>\n    @use '../../../styles/_mixins' as mixins\n    .hp\n      position: relative\n      width: 100%\n      z-index: 100\n    .header\n      +mixins.white-shadow-header(var(--size-md-h))\n      &.val\n        +mixins.white-shadow-header(var(--size-lg-h))\n    .sub-header\n      +mixins.white-shadow-header(var(--size-sm-h))\n  </style>","<script>\n  import { onMount, getContext } from 'svelte';\n  import { localize } from \"~/src/helpers/util\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n\n  const actor = getContext(\"#doc\");\n  \n  onMount(() => {\n\n  });\n  </script>\n  <template lang='pug'>\n    .mp.flexrow.justify-vertical\n      .flex3\n        .header \n          .header {localize(\"Types.Actor.Points.MP.short\")}\n        .sub-header\n          .header {localize(\"Types.Actor.Points.MP.Label\")}\n\n      .flex2\n        .flex.sub-header \n          .header {localize(\"Max\")}\n        .flex.max.header \n          .header\n            DocInput.wide(clickType=\"click\" pulse=\"{true}\" type=\"number\" name=\"MP\" min=0 valuePath=\"system.points.MP.max\")\n      .flex2.left\n        .header.val\n          .header\n            DocInput.wide(clickType=\"click\" pulse=\"{true}\" type=\"number\" name=\"MP\" min=0 max=\"{$actor.system.points.MP.max}\" valuePath=\"system.points.MP.val\")\n        \n  </template>\n\n  <style lang='sass'>\n    @use '../../../styles/_mixins' as mixins\n    .mp\n      position: relative\n      width: 100%\n      z-index: 100\n    .header\n      +mixins.white-shadow-header(var(--size-md-h))\n      &.val\n        +mixins.white-shadow-header(var(--size-lg-h))\n    .sub-header\n      +mixins.white-shadow-header(var(--size-sm-h))\n  </style>","<script>\n  import { onMount, getContext } from 'svelte';\n  import { localize } from '~/src/helpers/util';\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n\n  const actor = getContext(\"#doc\");\n  \n  onMount(() => {\n\n  });\n  </script>\n  <template lang='pug'>\n    .bp.flexrow.justify-vertical\n      .flex3\n        .header \n          .header {localize(\"Types.Actor.Points.BP.short\")}\n        .sub-header\n          .header {localize(\"Types.Actor.Points.BP.Label\")}\n\n      .flex2.left\n        .header.val\n          .header\n            DocInput.wide(clickType=\"click\" pulse=\"{true}\" type=\"number\" name=\"BP\" min=0 max=\"{$actor.system.points.BP.max}\" valuePath=\"system.points.BP.val\")\n        \n  </template>\n\n  <style lang='sass'>\n    @use '../../../styles/_mixins' as mixins\n    .bp\n      position: relative\n      width: 100%\n      z-index: 100\n    .header\n      +mixins.white-shadow-header(var(--size-md-h))\n      &.val\n        +mixins.white-shadow-header(var(--size-lg-h))\n    .sub-header\n      +mixins.white-shadow-header(var(--size-sm-h))\n  </style>","<script>\n  import { onMount } from 'svelte';\n  import HP from \"~/src/components/molecules/Points/HP.svelte\";\n  import MP from \"~/src/components/molecules/Points/MP.svelte\";\n  import BP from \"~/src/components/molecules/Points/BP.svelte\";\n  \n  </script>\n  <template lang='pug'>\n    section.organism\n      .flexrow.section\n        .flex.hp.pa-md\n          HP\n        .flex.mp.pa-md\n          MP\n        .flex.bp.pa-md\n          BP\n        \n  </template>\n  <style lang='sass'>\n    @use '../../../styles/_mixins' as mixins\n  \n    .section\n      width: 100%\n      position: relative\n      overflow: hidden\n      border-bottom: 4px ridge var(--ff-border-color)\n      border-left: 4px ridge var(--ff-border-color)\n      border-right: 4px ridge var(--ff-border-color)\n  \n    .hp\n      position: relative\n      background: linear-gradient(to right, rgb(171, 67, 125), rgb(205, 139, 171))\n      clip-path: polygon(0 0, 100% 0, 100% 50%, 80% 100%, 0 100%)\n  \n    .mp\n      position: relative\n      background: linear-gradient(to right, rgb(58 158 68), rgb(174 206 106))\n      clip-path: polygon(0 0, 100% 0, 100% 50%, 80% 100%, 0 100%)\n  \n    .bp\n      position: relative\n      background: linear-gradient(to right, rgb(177 144 113), rgb(255 212 171))\n      clip-path: polygon(0 0, 100% 0, 100% 50%, 80% 100%, 0 100%)\n  \n  </style>\n  ","<script>\n  import { getContext, onMount } from \"svelte\";\n  import { rippleFocus } from \"#standard/action/animate/composable\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n  import { TJSInput } from \"#standard/component/form\";\n  import { createFilterQuery } from \"~/src/filters/itemFilterQuery\";\n  import { getEffectOrigin } from \"~/src/helpers/util\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import ScrollingContainer from \"~/src/helpers/svelte-components/ScrollingContainer.svelte\";\n  import InventoryRow from \"~/src/components/molecules/InventoryRow.svelte\";\n  import Badge from \"~/src/components/atoms/Badge.svelte\";\n\n  const Actor = getContext(\"#doc\");\n  const doc = new TJSDocument($Actor);\n  const triggerSearch = createFilterQuery(\"trigger\");\n  const nameSearch = createFilterQuery(\"label\");\n  const input = {\n    store: nameSearch,\n    efx: rippleFocus(),\n    placeholder: \"*\",\n    type: \"search\",\n    id: \"search\"\n  };\n\n  /** @type {import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, Item>} */\n  const wildcardConfig = doc.embedded.create(Item, {\n    name: \"wildcard\",\n    filters: [nameSearch, triggerSearch],\n  });\n\n\n  /** @type {import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, Item>} */\n  let wildcard = doc.embedded.create(ActiveEffect, wildcardConfig);\n\n  let combat;\n  \n\n  function debug(val) {\n    game.system.log.d(val);\n    game.system.log.d('sheet', sheet);\n  }\n  function dataTooltip(effect) {\n    return effect.isSuppressed ? \"Disabled because the item granting this is not equipped\" : \"SURGE.ToggleEnabled\";\n  }\n  function toggleLock(event) {\n    $doc.update(\n      {\n        [\"system.effectActionsLocked\"]: !$doc.system.effectActionsLocked,\n      },\n      {\n        diff: true,\n        diffData: true,\n        diffSystem: true,\n      },\n    );\n  }\n  function toggleEffect(effect) {\n    if (effect instanceof ActiveEffect) {\n      const origin = getEffectOrigin(effect);\n      if (origin instanceof Item && effect.isSuppressed) {\n        ui.notifications.warn(\n          \"This effect is currently suppressed, probably because the item that grants it is not equipped.\",\n        );\n        return;\n      }\n    }\n    effect.update({ disabled: !effect.disabled });\n  }\n  function openItem(index, item) {\n    item.sheet.render(true);\n  }\n  // @todo: could convert this to an IconSelect, which provides better state handling (i.e. currently this select will show an incorrect value if the update fails until the Application is reloaded)\n  async function updateTrigger(effect, event) {\n    try {\n      await effect.update({ [`flags.${SYSTEM_ID}.trigger`]: event.target.value });\n    } catch (error) {\n      ui.notifications.notify(error.message, \"error\");\n    }\n  }\n\n  function getAvatarForVersion(source, version) {\n    return version < 12 ? source.icon : source.img;\n  }\n  \n  $: ActiveEffects = [...$wildcard]\n    .filter(effect => !effect.disabled)\n    .map((effect) => {\n      // const originInstance = getEffectOrigin(effect, true);\n      // if(!effect.flags[SYSTEM_ID]) effect.flags[SYSTEM_ID] = {};\n      // effect.flags[SYSTEM_ID].originInstance = originInstance;\n      return effect\n    });\n  $: lockCSS = $doc.system.effectActionsLocked ? \"lock\" : \"lock-open\";\n  $: faLockCSS = $doc.system.effectActionsLocked ? \"fa-lock negative\" : \"fa-lock-open positive\";\n  $: xpUnspent = parseInt($doc.system.xp?.unspent) || 0;\n\n</script>\n\n<template lang=\"pug\">\n.effects&attributes($$restProps)\n  +if(\"ActiveEffects.length > 0\")\n    h2.font-cinzel {localize('Effects')}\n    .px-xs\n      table.borderless.low-contrast\n        +each(\"ActiveEffects as item, index\")\n          tr\n            th.img.shrink(scope=\"col\")\n              img.icon(src=\"{item.img}\" alt=\"{item.name}\")\n            td.left\n              a.ml-sm.stealth.link.no-wrap(\n                role=\"button\"\n                on:click!=\"{() => openItem(index, item)}\"\n                on:keydown!=\"{(e) => e.key === 'Enter' && openItem(index, item)}\"\n                tabindex=\"0\"\n              ) {localize(item.name)}\n  +if(\"!ActiveEffects.length\")\n    p(style=\"margin-top: -2px; margin-bottom: 0px;\") {localize(\"NoEffects\")}\n</template>\n\n<style lang=\"sass\">\n@use '../../../styles/_mixins' as mixins\n\n.effects\n  margin-top: 1em\n  padding: 1em\n  width: 100%\n</style>\n","<script>\n  import { getContext, onMount } from \"svelte\";\n  import { rippleFocus } from \"#standard/action/animate/composable\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n  import { TJSInput } from \"#standard/component/form\";\n  import { createFilterQuery } from \"~/src/filters/itemFilterQuery\";\n  import { toggleBookmark, localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import ScrollingContainer from \"~/src/helpers/svelte-components/ScrollingContainer.svelte\";\n  import InventoryRow from \"~/src/components/molecules/InventoryRow.svelte\";\n  import Badge from \"~/src/components/atoms/Badge.svelte\";\n\n  const Actor = getContext(\"#doc\");\n  const doc = new TJSDocument($Actor);\n  const typeSearch = createFilterQuery(\"system.favourite\");\n  typeSearch.set(true)\n  const input = {\n    store: typeSearch,\n    efx: rippleFocus(),\n    placeholder: \"by Name\",\n    type: \"search\",\n    id: \"search\",\n  };\n\n  /** @type {import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, Item>} */\n  const wildcard = doc.embedded.create(Item, {\n    name: \"wildcard\",\n    filters: [typeSearch],\n    sort: (a, b) => a.name.localeCompare(b.name),\n  });\n\n  let combat;\n  \n  function onCombatUpdate() {\n    combat = game.combat;\n  }\n\n  onMount(() => {\n    // Initial combat state\n    combat = game.combat;\n    \n    // Subscribe to combat updates @why? – \n    Hooks.on('createCombat', onCombatUpdate);\n    Hooks.on('deleteCombat', onCombatUpdate);\n    Hooks.on('updateCombat', onCombatUpdate);\n    \n    return () => {\n      // Cleanup hooks on component destroy\n      Hooks.off('createCombat', onCombatUpdate);\n      Hooks.off('deleteCombat', onCombatUpdate);\n      Hooks.off('updateCombat', onCombatUpdate);\n    };\n  });\n\n  function editItem(item) {\n    item.sheet.render(true);\n\n    game.system.log.d(\"editItem\");\n    game.system.log.d(item);\n  }\n\n  function addQuantity(item) {\n    game.system.log.d(\"addQuantity\");\n    game.system.log.d(item);\n\n    const quantity = item.system.quantity + 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function removeQuantity(item) {\n    const quantity = item.system.quantity - 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function duplicateItem(item) {\n    const itemData = item.toObject();\n    delete itemData._id;\n    $Actor.sheet._onDropItemCreate(itemData);\n  }\n\n  function deleteItem(index, item) {\n    let okToDelete = true;\n    if (game.settings.get(SYSTEM_ID, \"confirmBeforeDeletingActorItem\")) {\n      okToDelete = confirm(localize(\"Types.Actor.Inventory.confirmDeleteItem\"));\n    }\n    if (okToDelete) {\n      item.delete();\n    }\n  }\n\n  function roll(item) {\n    game.system.log.d(\"roll\");\n    game.system.log.d(item);\n  }\n  function useItem(item) {\n    switch (item.type) {\n      case 'action':\n        new CONFIG.FFXIV.RollCalcActor({ actor: $Actor}).ability(item.type, item);\n        break;\n\n      case 'trait':\n        new CONFIG.FFXIV.RollCalcActor({ actor: $Actor}).ability(item.type, item);\n        break;\n\n      case 'equipment':\n        new CONFIG.FFXIV.RollCalcActor({ actor: $Actor }).equipment(item);\n        break;\n\n      case 'effect':\n        ui.notifications.warn(\"Effects cannot be used directly\");\n        break;\n\n      case 'job':\n        ui.notifications.warn(\"Jobs cannot be used directly\");\n        break;\n\n      case 'limitbreak':\n        new CONFIG.FFXIV.RollCalcActor({ actor: $Actor}).ability(item.type, item);\n        break;\n\n      default:\n        console.warn(`Unhandled item type: ${item.type}`);\n        new CONFIG.FFXIV.RollCalcActor({ actor: $Actor }).send();\n    }\n  }\n  function toggleLock(event) {\n    game.system.log.d(\"a\");\n    event.stopPropagation();\n    event.preventDefault();\n    $doc.update(\n      {\n        [\"system.inventoryLocked\"]: !$doc.system.inventoryLocked,\n      },\n      {\n        diff: true,\n        diffData: true,\n        diffSystem: true,\n      },\n    );\n  }\n\n  function showItemSheet(item) {\n    item.sheet.render(true);\n  }\n\n  $: items = [...$wildcard];\n  $: lockCSS = $doc.system.inventoryLocked ? \"lock\" : \"lock-open\";\n  $: faLockCSS = $doc.system.inventoryLocked ? \"fa-lock negative\" : \"fa-lock-open positive\";\n  \n  const badgeType = (item) => {\n    return item.system.uses >= item.system.limitation ? 'danger' : 'success';\n  }\n  \n  const remaining = (item) => {\n    return item.system.hasLimitation ? \n      parseInt(item.system.limitation || 0) - parseInt(item.system.uses || 0) : 10;\n  } \n</script>\n\n<template lang=\"pug\">\n.favourites({...$$restProps})\n  +if(\"$doc.system.hasFavouriteItems()\")\n    h2.font-cinzel {localize(\"Tabs.Favourites\")}\n    div.pa-xs\n      table.borderless.low-contrast\n        tr\n          th.img.shrink(scope=\"col\")\n          th.left.expand(scope=\"col\") {localize(\"Name\")}\n          +if(\"combat\")\n            th\n          th.shrink(scope=\"col\")\n            \n        +each(\"items as item, index\")\n          tr\n            td.img(on:click=\"{useItem(item)}\" role=\"button\")\n              img.icon(src=\"{item.img}\" alt=\"{item.name}\"  )\n            td.left.clip\n              a.ml-sm.stealth.link(on:click=\"{showItemSheet(item)}\" class=\"{item.system.isMagic ? 'pulse' : ''}\" role=\"button\") {item.name}\n            +if(\"combat\")\n              td.left\n                +if(\"item.system.hasLimitation\")\n                  Badge(type!=\"{badgeType(item)}\") {remaining(item)}\n            td\n              button.stealth(on:click=\"{toggleBookmark(item)}\") \n                i.fa-bookmark(class=\"{item.system.favourite === true ? 'fa-solid' : 'fa-regular'}\" )\n</template>\n\n<style lang=\"sass\">\n@use '../../../styles/_mixins' as mixins\n\n.favourites\n  +mixins.inset(0.5rem, 0 0 5px rgba(165,0,0,1) inset)\n  width: 100%\n\n.fa-bookmark\n  color: var(--color-highlight) !important\n  cursor: pointer\n  &.row\n    color: rgba(100, 0, 100, 1)\n\n.pulse\n  +mixins.pulse\n\n.actions\n  margin-left: 0.5rem\n  margin-right: 0\n  justify-content: right\n  :not(:last-child)\n    margin-right: 2px\n\n.clickable\n  max-height: 1.3rem\n  line-height: 1.3rem\n  background: rgba(255, 255, 255, 0.2)\n\n.clip\n  text-overflow: ellipsis\n  overflow: hidden\n  height: 2rem\n  max-height: 2rem\n  display: block\n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import { localize } from \"~/src/helpers/util\";\n  import AttributeSection from \"~/src/components/organisms/actor/AttributeSection.svelte\";\n  import PointsSection from \"~/src/components/organisms/actor/PointsSection.svelte\";\n  import EffectsSection from \"~/src/components/organisms/actor/EffectsSection.svelte\";\n  import Favourites from \"~/src/components/organisms/actor/Favourites.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n\n  // export let sheet;\n  const actor = getContext(\"#doc\");\n</script>\n\n<template lang=\"pug\">\n  .panel.overflow\n    .flexrow.high\n      .flex3\n        AttributeSection\n        +if(\"$actor.system.description.length > 0\")\n          .flexcol.navy\n            .background\n              .texture\n              .flexrow.panel.borderless.wide\n                .flex2.wide\n                  .portrait-frame.pr-xs.wide\n                    PortraitFrame(size=\"40\" style=\"min-width: 182px;\")\n                      .flexcol.wide.gold\n                        .flex1\n                          h2.font-cinzel {localize(\"Description\")}\n                        .flex1\n                          .left.panel.borderless.overflow\n                            ProseMirror( editable=\"{false}\" attr=\"system.description\" )\n      .flex2\n        .flexcol.purple\n          .background\n            .texture\n            .flexrow.panel.borderless.wide\n              .flex2.wide\n                .portrait-frame.pr-xs.wide\n                  PortraitFrame(size=\"40\" style=\"min-width: 182px;\")\n                    .flexcol.wide\n                      .flex1\n                        h2.font-cinzel {localize(\"Points\")}\n                      .flex1\n                        .left.panel.borderless.overflow\n                          PointsSection\n        +if(\"$actor.system.hasFavouriteItems()\")\n          .flexcol.burgundy\n            .background \n              .texture\n              .flexrow.panel.borderless.wide\n              .flex2.gold\n                .portrait-frame.pr-xs\n                  PortraitFrame(size=\"40\" style=\"min-width: 182px;\")\n                    Favourites.high.wide\n        .flexcol.teal\n          .background\n            .texture\n            .flexrow.panel.borderless.wide\n              .flex2.gold\n                .portrait-frame.pr-xs\n                  PortraitFrame(size=\"40\" style=\"min-width: 182px;\")\n                    EffectsSection.high.wide\n                       \n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../styles/_mixins' as mixins\n\n  // .fuscia\n  //   +mixins.background(rgb(76 20 32), 0.05 )\n  .purple\n    +mixins.background(rgb(42 20 76), 0.05 )\n  .navy\n    +mixins.background(rgb(20 45 76), 0.1 )\n  .teal\n    +mixins.background(rgb(20 68 76), 0.05 )\n  .burgundy\n    +mixins.background(rgb(76 35 20), 0.05 )\n\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n  // +mixins.background(rgb(29 29 29))\n  // +mixins.background(rgb(64 47 22), 0.1)\n  // +mixins.background(rgb(20 45 76), 0.05 )\n  // +mixins.background(rgb(48 76 20), 0.05 )\n  // +mixins.background5(rgb(20 68 76), 0.05 )\n  // +mixins.background4(rgb(76 35 20), 0.05 )\n  // +mixins.background3(rgb(42 20 76), 0.05 )\n  // +mixins.background2(rgb(74 20 76), 0.05 )\n  // +mixins.background(rgb(76 20 32), 0.05 )\n \n  .background\n    overflow-y: auto\n  // +mixins.background(rgb(66 76 20), 0.05)\n</style>\n","<script>\nimport { onMount } from 'svelte'\nimport { localize } from \"~/src/helpers/util\";\nimport DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\nimport ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\nimport ScrollingContainer from \"~/src/helpers/svelte-components/ScrollingContainer.svelte\";\n\nconst proseMirrorClasses = ['left', 'small']\nconst proseMirrorClasses2 = ['left']\n\n</script>\n<template lang='pug'>\nh1.gold {localize(\"Details\")}\n.flexrow.justify-vertical\n  .flex2 \n    label.gold(for=\"character-name\") {localize(\"Character\")} {localize(\"Name\")}:\n  .flex2.wide\n    DocInput.wide(id=\"character-name\" name=\"name\" valuePath=\"name\")\n\nh1.gold {localize(\"Description\")}\nProseMirror(classes=\"{proseMirrorClasses}\" attr=\"system.description\")\nh1.gold {localize(\"Notes\")}\nProseMirror(classes=\"{proseMirrorClasses2}\" attr=\"system.biography\")\n\n//- .panel.heightcol\n//-   .flexrow\n//-     h1 Details\n//-   .flexrow\n//-     .flex2.left\n//-       label Character Name:\n//-     .flex2.right\n//-       DocInput(id=\"name\" name=\"name\" valuePath=\"name\")\n//-   hr\n//-   .flexcol\n//-     .flex0\n//-       .flexrow\n//-         h1 Notes\n\n//-   .flexrow.left.heightcol\n//-     ProseMirror( attr=\"system.biography\" )\n\n</template>\n<style lang='sass'>\n  @use '../../../../styles/_mixins' as mixins\n</style>\n","<script>\n  import { getContext, onMount } from \"svelte\";\n  import { rippleFocus } from \"#standard/action/animate/composable\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n  import { TJSInput } from \"#standard/component/form\";\n  import { createFilterQuery } from \"~/src/filters/itemFilterQuery\";\n  import { toggleBookmark, ucfirst } from \"~/src/helpers/util\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import ScrollingContainer from \"~/src/helpers/svelte-components/ScrollingContainer.svelte\";\n  import InventoryRow from \"~/src/components/molecules/InventoryRow.svelte\";\n\n  const Actor = getContext(\"#doc\");\n  const doc = new TJSDocument($Actor);\n  const typeSearch = createFilterQuery(\"type\");\n  typeSearch.set(['equipment']); // Updated to filter for both types\n  const input = {\n    store: typeSearch,\n    efx: rippleFocus(),\n    placeholder: \"by Name\",\n    type: \"search\",\n    id: \"search\",\n  };\n\n  /** @type {import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, Item>} */\n  const wildcard = doc.embedded.create(Item, {\n    name: \"wildcard\",\n    filters: [typeSearch],\n    sort: (a, b) => a.name.localeCompare(b.name),\n  });\n\n  function editItem(item) {\n    item.sheet.render(true);\n\n    game.system.log.d(\"editItem\");\n    game.system.log.d(item);\n  }\n\n  function addQuantity(item) {\n    game.system.log.d(\"addQuantity\");\n    game.system.log.d(item);\n\n    const quantity = item.system.quantity + 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function removeQuantity(item) {\n    const quantity = item.system.quantity - 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function duplicateItem(item) {\n    game.system.log.d(\"duplicateItem\");\n    game.system.log.d(item);\n    const itemData = item.toObject();\n    delete itemData._id;\n    game.system.log.d(\"itemData\", itemData);\n    $Actor.sheet._onDropItemCreate(itemData);\n  }\n\n  async function removeAllItems() {\n    const okToDelete = confirm(localize(\"Types.Actor.Inventory.confirmDeleteAll\"));\n    if (okToDelete) {\n      await $Actor.deleteAllItems('equipment');\n    }\n  }\n\n  function deleteItem(index, item) {\n    let okToDelete = true;\n    if (game.settings.get(SYSTEM_ID, \"confirmBeforeDeletingActorItem\")) {\n      okToDelete = confirm(localize(\"Types.Actor.Inventory.confirmDeleteItem\"));\n    }\n    if (okToDelete) {\n      item.delete();\n    }\n  }\n\n  function roll(item) {\n    game.system.log.d(\"roll\");\n    game.system.log.d(item);\n  }\n\n  function useItem(item) {\n    const result = new CONFIG.FFXIV.RollCalcActor({ actor: $Actor }).equipment(item);\n  }\n  \n  function toggleLock(event) {\n    game.system.log.d(\"a\");\n    event.stopPropagation();\n    event.preventDefault();\n    $doc.update(\n      {\n        [\"system.inventoryLocked\"]: !$doc.system.inventoryLocked,\n      },\n      {\n        diff: true,\n        diffData: true,\n        diffSystem: true,\n      },\n    );\n  }\n\n  function showItemSheet(item) {\n    item.sheet.render(true);\n  }\n\n  onMount(async () => {});\n\n  $: items = [...$wildcard];\n  $: lockCSS = $doc.system.inventoryLocked ? \"lock\" : \"lock-open\";\n  $: faLockCSS = $doc.system.inventoryLocked ? \"fa-lock negative\" : \"fa-lock-open positive\";\n</script>\n\n<template lang=\"pug\">\n\n    //- .flexrow.pt-sm.pr-sm\n    //-   .flexcol.flex1.label-container \n    //-     label Search\n    //-   .flex3.left\n    //-     TJSInput({input})\n    //-   .flexcol.flex1.label-container \n    //-     label Type\n    //-   .flex3.right\n    //-     Select.short(options=\"{typeFilterOptions}\" bind:value=\"{typeFilterValue}\")\n\n    .panel.overflow.containerx\n      .padded\n        h1.gold {localize('Inventory')}\n        table.borderless\n          tr.gold\n            th.img.shrink(scope=\"col\")\n            th.left.expand(scope=\"col\") {localize('Name')}\n            th.fixed(scope=\"col\") {localize('Quantity')}\n            th.shrink(scope=\"col\")\n              i.fa-solid.fa-bookmark\n            th(scope=\"col\" class=\"{lockCSS}\")\n              button.stealth(class=\"{lockCSS}\" on:click=\"{toggleLock}\")\n                i.fa(class=\"{faLockCSS}\" )\n          +each(\"items as item, index\")\n            //- pre item.type {item.type}\n            tr\n              td.img(data-tooltip=\"{localize('Use')}\" on:click=\"{useItem(item)}\" role=\"button\")\n                img.icon(src=\"{item.img}\" alt=\"{item.name}\" )\n              td.left(data-tooltip=\"{localize('View')}\")\n                a.stealth.link(on:click=\"{showItemSheet(item)}\" class=\"{item.system.isMagic ? 'pulse' : ''}\" role=\"button\") {item.name}\n              td \n                button.stealth.clickable.wide(data-tooltip=\"Left click + / Right Click -\" on:click!=\"{addQuantity(item)}\" on:contextmenu!=\"{removeQuantity(item)}\") {item.system.quantity}\n              td( data-tooltip=\"{localize('Bookmark')}\")\n                button.stealth(on:click=\"{toggleBookmark(item)}\") \n                  i.fa-bookmark(class=\"{item.system.favourite === true ? 'fa-solid' : 'fa-regular'}\")\n              td.min.buttons.right\n                +if(\"!$doc.system.inventoryLocked\")\n                  button.stealth( data-tooltip=\"{localize('Types.Actor.ActionButtons.Edit')}\" on:click=\"{editItem(item)}\")\n                    i.left.fa.fa-edit\n                  button.stealth( data-tooltip=\"{localize('Types.Actor.ActionButtons.Duplicate')}\" on:click=\"{duplicateItem(index, item)}\")\n                    i.left.fa.fa-copy\n                  button.stealth( data-tooltip=\"{localize('Types.Actor.ActionButtons.Delete')}\" on:click=\"{deleteItem(index, item)}\")\n                    i.left.fa.fa-trash\n            \n      button.mt-sm.glossy-button.gold-light.hover-shine(on:click=\"{removeAllItems}\") {localize(\"Instructions.RemoveAll\")}\n            \n</template>\n\n<style lang=\"sass\">\n@use '../../../../styles/_mixins' as mixins\n\n.containerx\n  container-type: inline-size\n\n.padded\n  transition: padding 0.2s ease-in-out\n  @container (min-width: 350px)\n    padding: 1rem\n.pulse\n  +mixins.pulse\n\n.actions\n  margin-left: 0.5rem\n  margin-right: 0\n  justify-content: right\n  :not(:last-child)\n    margin-right: 2px\n\n.clickable\n  max-height: 1.3rem\n  line-height: 1.3rem\n  background: rgba(255, 255, 255, 0.2)\n\ni.disable\n  color: grey\n  cursor: not-allowed\n\n.fa-bookmark\n  cursor: pointer\n  &.row\n    color: rgba(100, 0, 100, 1)\n\n.itemrow\n  height: 1.9rem\n\n.rowimgbezelbutton\n  border-style: solid\n  border-width: 1px\n  border-color: #bbb #aaa #999\n  text-shadow: 0 1px 0 #eee\n  background: #ccc\n  color: #333\n  font-family: \"Lucida Grande\"\n  font-size: 12px\n  font-weight: bold\n  text-decoration: none\n  -webkit-border-radius: 3px\n  -webkit-box-shadow: inset 0 1px 1px #fff, inset 0 -1px 1px #aaa, 0 2px 4px -3px #666\n  &.lock-open\n    background-color: #19762d\n    color: white\n  &.lock\n    background-color: #9c0f0f\n    color: white\n\n.rowimgbezelbutton:active\n  -webkit-box-shadow: inset 0 1px 1px #aaa, inset 0 -1px 1px #aaa\n  border-color: #888 #aaa #eee\n\n\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  import { getContext, setContext, onMount, onDestroy } from \"svelte\";\n  import { rippleFocus } from \"#standard/action/animate/composable\";\n  import { TJSInput } from \"#standard/component/form\";\n  import { createFilterQuery } from \"~/src/filters/itemFilterQuery\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n  import { getEffectOrigin } from \"~/src/helpers/util\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { localize, isParentActor } from \"~/src/helpers/util\";\n  import ScrollingContainer from \"~/src/helpers/svelte-components/ScrollingContainer.svelte\";\n\n  export let sheet;\n  export function resetEffectList() {\n    game.system.log.d(\"resetEffectList\");\n    filterDoc = new TJSDocument($doc);\n    wildcard = filterDoc.embedded.create(ActiveEffect, wildcardConfig);\n  }\n\n\n  let key = false,\n    keyUp = true,\n    prevValue,\n    triggerFilterValue,\n    ActiveEffects = [];\n  // const documentStore = getContext(\"#doc\");\n  const doc = getContext(\"#doc\");\n  const app = getContext(\"#external\").application;\n\n  //- @why: some fields are only available on actor sheets\n  $: parentIsActor = isParentActor($doc) || (sheet && sheet.includes('actor'));\n  // Determine if this is an actor sheet\n  $: isActorSheet = sheet === 'actor';\n  // Check if user is GM\n  $: isGM = game.user.isGM;\n  // Show delete buttons only if GM or not an actor sheet\n  $: showDelete = !isActorSheet || isGM;\n  // Show add/remove all buttons only if GM or not an actor sheet\n  $: showAddRemoveButtons = !isActorSheet || isGM;\n\n  const triggerSearch = createFilterQuery(\"trigger\");\n  const nameSearch = createFilterQuery(\"label\");\n  const wildcardConfig = {\n    name: \"wildcard\",\n    filters: [nameSearch, triggerSearch],\n    // filters: [nameSearch],\n  };\n  let filterDoc = new TJSDocument($doc);\n\n  const input = {\n    store: nameSearch,\n    efx: rippleFocus(),\n    placeholder: \"*\",\n    type: \"search\",\n    id: \"search\"\n  };\n\n  /** @type {import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, Item>} */\n  let wildcard = filterDoc.embedded.create(ActiveEffect, wildcardConfig);\n\n  function debug(val) {\n    game.system.log.d(val);\n    game.system.log.d('sheet', sheet);\n  }\n  function dataTooltip(effect) {\n    return effect.isSuppressed ? \"Disabled because the item granting this is not equipped\" : \"SURGE.ToggleEnabled\";\n  }\n  async function deleteItem(index, effect) {\n    if (isPassiveEffectFromItem(effect)) {\n      ui.notifications.warn(\"This effect is granted by an item. To remove the effect, you can remove the item.\");\n      return;\n    }\n    await effect.delete();\n    // reset the data for the filter\n    resetEffectList();\n  }\n  function editItem(index, item) {\n    game.system.log.d(item);\n    item.sheet.render(true);\n  }\n  async function removeAllEffects() {\n    const confirmed = await Dialog.confirm({\n      title: \"Remove All Effects\",\n      content: \"Are you sure you want to remove all effects?\",\n      yes: async () => {\n        for(let effect of $doc.effects) {\n          await effect.delete();\n        }\n      },\n      no: () => {},\n    });\n    \n  }\n  function isPassiveEffectFromItem(item) {\n    game.system.log.d(\"isPassiveEffectFromItem item\", item);\n    if (item instanceof ActiveEffect) {\n      const origin = getEffectOrigin(item, true);\n      const parent = item.parent;\n      if (\n        parent instanceof Actor &&\n        origin instanceof Item &&\n        item.isTransferred\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function toggleLock(event) {\n    $doc.update(\n      {\n        [\"system.effectActionsLocked\"]: !$doc.system.effectActionsLocked,\n      },\n      {\n        diff: true,\n        diffData: true,\n        diffSystem: true,\n      },\n    );\n  }\n  function toggleEffect(effect) {\n    if (effect instanceof ActiveEffect) {\n      const origin = getEffectOrigin(effect);\n      if (origin instanceof Item && effect.isSuppressed) {\n        ui.notifications.warn(\n          \"This effect is currently suppressed, probably because the item that grants it is not equipped.\",\n        );\n        return;\n      }\n    }\n    effect.update({ disabled: !effect.disabled });\n  }\n  async function openActiveEffectEditor() {\n    game.system.log.d(\"openActiveEffectEditor\");\n    const effect = await ActiveEffect.create(\n      {\n        label: $doc.name,\n        icon: $doc.img,  // For pre-v12 compatibility\n        img: $doc.img,   // For v12+\n        origin: $doc.uuid,\n        renderSheet:true,\n        flags: {\n          [SYSTEM_ID]: {},\n        },\n      },\n      { parent: $doc },\n    );\n\n    game.system.log.d(\"effect\", effect);\n\n    //- @deprecated, this opens the Foundry sheet instead of the custom sheet\n    // const effectConfig = new ActiveEffectConfig(effect, { editable: true });\n    // effectConfig.render(true);\n  }\n  // @todo: could convert this to an IconSelect, which provides better state handling (i.e. currently this select will show an incorrect value if the update fails until the Application is reloaded)\n  async function updateTrigger(effect, event) {\n    try {\n      await effect.update({ [`flags.${SYSTEM_ID}.trigger`]: event.target.value });\n    } catch (error) {\n      ui.notifications.notify(error.message, \"error\");\n    }\n  }\n\n  \n  onMount(() => {\n    Hooks.on('createActiveEffect', resetEffectList);\n    Hooks.on('deleteActiveEffect', resetEffectList);\n    Hooks.on('updateActiveEffect', resetEffectList);\n\n    game.system.log.d(\"EffectsTab mounted\");\n    game.system.log.d(ActiveEffects);\n  });\n  onDestroy(() => {\n    Hooks.off('createActiveEffect', resetEffectList);\n    Hooks.off('deleteActiveEffect', resetEffectList);\n    Hooks.off('updateActiveEffect', resetEffectList);\n\n    // game.system.log.d(\"EffectsTab onDestroy\");\n    // game.system.log.d(ActiveEffects);\n  });\n\n  // $: ActiveEffects = $filterDoc.effects;\n  $: ActiveEffects = [...$wildcard].map((effect) => {\n    // const originInstance = getEffectOrigin(effect, true);\n    // if(!effect.flags[SYSTEM_ID]) effect.flags[SYSTEM_ID] = {};\n    // effect.flags[SYSTEM_ID].originInstance = originInstance;\n    return effect\n  });\n  $: lockCSS = $doc.system.effectActionsLocked ? \"lock\" : \"lock-open\";\n  $: faLockCSS = $doc.system.effectActionsLocked ? \"fa-lock negative\" : \"fa-lock-open positive\";\n  $: xpUnspent = parseInt($doc.system.xp?.unspent) || 0;\n</script>\n\n<template lang=\"pug\">\n.panel.overflow.containerx\n  .padded\n    h1.gold {localize('Effects')}\n    table.borderless.even\n      tr.gold\n        th.img.shrink(scope=\"col\")\n        th.left.expand.ml-sm(scope=\"col\") {localize('Name')}\n        +if(\"parentIsActor\")\n          th.left.shrink(scope=\"col\") {localize('Origin')}\n        th.buttons(scope=\"col\" class=\"{lockCSS}\")\n          button.stealth(class=\"{lockCSS}\" on:click=\"{toggleLock}\")\n            i.fa(class=\"{faLockCSS}\")\n      +each(\"ActiveEffects as effect, index\")\n        tr(class=\"{effect.disabled ? 'disabled' : ''}\")\n          td.img\n            img.icon(\n              class=\"{effect.isSuppressed ? 'suspended' : 'active'}\" \n              src=\"{effect.img}\" \n              alt=\"avatar for game version\"\n            )\n          td.left.expand.no-wrap {effect.name}\n          +if(\"parentIsActor\")\n            td.img.left\n              +if(\"effect.getFlag(SYSTEM_ID, 'transferredBy.actor.img')\")\n                img.icon.nopointer(\n                  src=\"{effect.getFlag(SYSTEM_ID, 'transferredBy.actor.img')}\" \n                  alt=\"avatar for effect origin\"\n                  data-tooltip=\"{effect.getFlag(SYSTEM_ID, 'transferredBy.actor.name')}\"\n                  data-tooltip-class=\"FFXIV-tooltip\"\n                )\n                +else\n                  span.no-wrap {localize('Unknown')}\n          td.buttons.right.no-wrap\n            +if(\"!$doc.system.effectActionsLocked && showDelete\")\n              button.stealth(on:click=\"{editItem(index, effect)}\")\n                i.left.fa.fa-edit\n              button.stealth(on:click=\"{deleteItem(index, effect)}\")\n                i.left.fa.fa-trash\n\n    +if(\"showAddRemoveButtons\")\n      .flexrow.mt-sm(style=\"justify-content: space-evenly\")\n        button.glossy-button.gold-light.hover-shine.no-wrap(on:click=\"{openActiveEffectEditor}\") {localize(\"Instructions.AddEffect\")}\n        button.glossy-button.gold-light.hover-shine.no-wrap(on:click=\"{removeAllEffects}\") {localize(\"Instructions.RemoveAllEffects\")}\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../styles/_mixins' as mixins\n\n  .disabled\n    opacity: 0.5\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  import { ApplicationShell } from \"#runtime/svelte/component/application\";\n  import { setContext, getContext, onMount, tick } from \"svelte\";\n  import { getActorOwner, ucfirst } from \"~/src/helpers/util\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { localize } from \"~/src/helpers/util\";\n  import { gameSettings } from '~/src/config/gameSettings';\n\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import Abilities from \"~/src/components/tabs/actor/PC/Abilities.svelte\";\n  import Attributes from \"~/src/components/tabs/actor/PC/Attributes.svelte\";\n  import Profile from \"~/src/components/tabs/actor/PC/Profile.svelte\";\n  import Inventory from \"~/src/components/tabs/actor/PC/Inventory.svelte\";\n  import Effects from \"~/src/components/organisms/item/shared/EffectsTab.svelte\";\n\n  export let elementRoot; //- passed in by SvelteApplication\n  export let documentStore; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n  // export let document; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n\n  //- store a copy of the templates for usage as schemas in other places\n  setContext(\"#doc\", documentStore);\n\n  const application = getContext(\"#external\").application;\n  const applicationWindowHeaderIconsOnly = gameSettings.getStore('applicationWindowHeaderIconsOnly');\n  let headerButtonNoLabel = application.reactive.storeAppOptions.headerButtonNoLabel;\n\n  // Tabs\n  const defaultTabs = [\n    { label: localize(\"Tabs.Attributes\"), id: \"attributes\", component: Attributes, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/tree.webp' },\n    { label: localize(\"Tabs.Abilities\"), id: \"abilities\", component: Abilities, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/sun.webp' },\n    { label: localize(\"Tabs.Inventory\"), id: \"inventory\", component: Inventory, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/backpack.webp'},\n    { label: localize(\"Tabs.Profile\"), id: \"profile\", component: Profile, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/mask.webp' },\n    { label: localize(\"Tabs.Effects\"), id: \"effect\", component: Effects, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/spiral.webp' }\n  ];\n\n  // set the sheet color\n  let stylesApp;\n  let activeTab = \"attributes\";\n  let _filePickerInstance = {};\n\n  // Get the sheet instance\n  const sheet = application;\n\n  // below is just for reference on creating active effects. This is handled in ActorSheet.js\n  async function handleDrop(event) {\n    return;\n\n    if (type === \"Item\") {\n      droppedItem = await game.items.get(split[1]);\n    } else if (type === \"Compendium\") {\n      const compendiumName = `${split[1]}.${split[2]}`;\n      const pack = game.packs.get(compendiumName);\n      droppedItem = await pack.getDocument(split[3]);\n    }\n\n    if (droppedItem.type == \"effect\") {\n      //- get the effects from the item\n      //- add the effect from the item to this item\n      await $documentStore.createEmbeddedDocuments(\"ActiveEffect\", Array.from(droppedItem.effects));\n    }\n  }\n\n  $: tabs = defaultTabs;\n  // Use reactive statements to properly update the headerButtonNoLabel\n  $: $headerButtonNoLabel = $applicationWindowHeaderIconsOnly;\n\n  // Debugging the reactive flow\n\n  onMount(async () => {\n    game.system.log.d($documentStore)\n  });\n</script>\n\n<template lang=\"pug\">\n  ApplicationShell(bind:elementRoot bind:stylesApp)\n    //- @why NB: do not remove this next element; it doesn't have to be `pre` can be any element, but without it the button animations defined in styles below will not work. I don't know why. It's magic.\n    Tabs.tabs.tall(tabs=\"{tabs}\" activeTab=\"{activeTab}\" sheet=\"['actor', 'PC']\")\n</template>\n\n<style lang=\"sass\">\n:global(.edit-sheet)\n  color: var(--ff-border-color)\n  display: flex\n  align-items: center\n:global(.edit-sheet i)\n  font-size: larger\n:global(.edit-sheet.active)\n  color: var(--border-highlight)\n  animation: pulse 1.2s infinite ease-out\n  \n@keyframes pulse\n  0%\n    opacity: 1\n  25%\n    opacity: 0.5\n  100%\n    opacity: 1\n\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  import { ApplicationShell } from \"#runtime/svelte/component/application\";\n\n  export let elementRoot;\n</script>\n\n<ApplicationShell bind:elementRoot />\n","import { SvelteApplication } from \"#runtime/svelte/application\";\nimport { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\nimport DocumentShell from \"./DocumentShell.svelte\";\n\n/**\n * Base class for Svelte-powered document sheets\n * @extends {SvelteApplication}\n */\nexport default class SvelteDocumentSheet extends SvelteApplication {\n  /**\n   * Document store that monitors updates to any assigned document.\n   * @type {TJSDocument<foundry.abstract.Document>}\n   */\n  #documentStore = new TJSDocument(void 0, { delete: this.close.bind(this) });\n\n  /**\n   * Holds the document unsubscription function.\n   * @type {Function}\n   */\n  #storeUnsubscribe;\n\n  /**\n   * Creates a new instance of the document sheet\n   * @param {object} object - The object to initialize with\n   */\n  constructor(object) {\n    super(object);\n\n    // Define document store property\n    Object.defineProperty(this.reactive, \"document\", {\n      get: () => this.#documentStore.get(),\n      set: (document) => {\n        this.#documentStore.set(document);\n      },\n    });\n    this.reactive.document = object;\n\n    game.system.log.d('isEditing', this.reactive.document.system.isEditing);\n  }\n\n  /**\n   * Default Application options\n   * @return {object} options - Application options.\n   * @see https://foundryvtt.com/api/Application.html#options\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      title: \"No Document Assigned\",\n      width: 800,\n      height: 600,\n      resizable: true,\n      minimizable: true,\n      dragDrop: [{ dragSelector: \".directory-list .item\", dropSelector: null }],\n      svelte: {\n        class: DocumentShell,\n        target: document.body,\n        // You can assign a function that is invoked with MyItemApp instance as `this`.\n        props: function () {\n          return { documentStore: this.#documentStore, /* document: this.reactive.document */ /* @deprecated: useful to know about but confusing to use in the template */ };\n        },\n      },\n    });\n  }\n\n  /**\n   * Gets the header buttons for the sheet\n   * @return {Array<object>} Returns an array of button configurations for the sheet header\n   */\n  _getHeaderButtons() {\n    const buttons = super._getHeaderButtons();\n    buttons.unshift({\n      class: \"configure-sheet\",\n      icon: \"fas fa-cog\",\n      title: \"open sheet configurator\",\n      onclick: (ev) => this._onConfigureSheet(ev),\n    });\n    return buttons;\n  }\n\n  /**\n   * Handles sheet configuration\n   * @param {Event} event - The triggering event\n   * @return {void} Nothing\n   */\n  _onConfigureSheet(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    // eslint-disable-next-line no-undef\n    new DocumentSheetConfig(this.reactive.document, {\n      top: this.position.top + 40,\n      left: this.position.left + (this.position.width - SvelteDocumentSheet.defaultOptions.width) / 2,\n    }).render(true);\n  }\n\n  /**\n   * Closes the sheet\n   * @param {object} options - Options for closing\n   * @return {Promise<void>} Returns a promise that resolves when the sheet is closed\n   */\n  async close(options = {}) {\n    await super.close(options);\n\n    if (this.#storeUnsubscribe) {\n      this.#storeUnsubscribe();\n      this.#storeUnsubscribe = void 0;\n    }\n  }\n\n  /**\n   * Handles document updates\n   * @param {foundry.abstract.Document} doc - The document being updated\n   * @param {object} options - Update options\n   * @return {Promise<void>} Returns a promise that resolves when the document is updated\n   */\n  async #handleDocUpdate(doc, options) {\n    const { action } = options;\n\n    // I need to add a 'subscribe' action to TJSDocument so must check void.\n    if ((action === void 0 || action === \"update\" || action === \"subscribe\") && doc) {\n      this.reactive.title = doc?.isToken ? `[Token] ${doc?.name}` : doc?.name ?? \"No Document Assigned\";\n    }\n  }\n\n  /**\n   * Prepares base data for the sheet\n   * @return {Promise<void>} Returns a promise that resolves when the base data is prepared\n   */\n  async prepareBaseData() {\n\n  }\n\n  /**\n   * Renders the sheet\n   * @param {boolean} force - Whether to force render\n   * @param {object} options - Render options\n   * @return {this} Returns the sheet instance for method chaining\n   */\n  render(force = false, options = {}) {\n    if (!this.#storeUnsubscribe) {\n      this.#storeUnsubscribe = this.#documentStore.subscribe(this.#handleDocUpdate.bind(this));\n    }\n    super.render(force, options);\n    return this;\n  }\n}\n\n","import PCSheetShell from \"./PCSheetShell.svelte\";\nimport SvelteDocumentSheet from \"~/src/documents/DocumentSheet\";\nimport { SYSTEM_CODE, SYSTEM_ID } from \"~/src/helpers/constants\";\nimport { localize } from \"~/src/helpers/util\";\nimport { generateRandomElementId } from \"~/src/helpers/util\";\n\n/**\n * Actor sheet implementation for Player Characters\n * @extends {SvelteDocumentSheet}\n */\nexport default class FFXIVActorSheet extends SvelteDocumentSheet {\n\n  /**\n   * Default Application options\n   * @return {object} The default options for configuring the application window - Application options.\n   * @see https://foundryvtt.com/api/Application.html#options\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: `${SYSTEM_ID}--actor-sheet-${generateRandomElementId()}`,\n\n      width: 440,\n      height: 828,\n      minHeight: 180,\n      minWidth: 282,\n      // id: `${SYSTEM_ID}--actor-sheet`, // @deprecated: I don't know why we need an ID for this? And having a non-unique ID causes https://github.com/geoidesic/foundryvtt-final-fantasy/issues/8\n      classes: [SYSTEM_CODE],\n      headerButtonNoLabel: game.settings.get(SYSTEM_ID, 'applicationWindowHeaderIconsOnly') || false, //- @why: without this the initial value on first load of this app after a page refresh will be wrong, despite a reactive setting in the .svelte template; I don't really know why\n      dragDrop: [{ dragSelector: \".directory-list .item\", dropSelector: null }],\n      svelte: {\n        class: PCSheetShell,\n        target: document.body,\n      },\n    });\n  }\n\n  /**\n   * Closes the actor sheet and updates editing state\n   * @param {object} options - Options which affect how the window is closed\n   * @return {Promise<void>} Returns a promise that resolves when the sheet is closed\n   */\n  async close(options = {}) {\n    this.reactive.document?.update({system: {isEditing: false}});\n    await super.close(options);\n  }\n\n  /**\n   * Gets the header buttons configuration for the sheet\n   * @return {Array<object>} Returns an array of button configurations for the sheet header\n   */\n  _getHeaderButtons() {\n    const buttons = super._getHeaderButtons();\n    const canConfigure = game.user.isGM || (this.reactive.document.isOwner && game.user.can(\"TOKEN_CONFIGURE\"));\n    if (this.reactive.document.documentName === \"Actor\") {\n      if (canConfigure) {\n        buttons.unshift({\n          label: this.token ? \"Token\" : \"TOKEN.TitlePrototype\",\n          class: \"configure-token\",\n          icon: \"fas fa-user-circle\",\n          onclick: (ev) => this._onConfigureToken(ev),\n        });\n      }\n    }\n    const canEdit = game.user.isGM || (this.reactive.document.isOwner);\n    if (canEdit) {\n      buttons.unshift({\n        label: localize(\"Types.Actor.HeaderButtons.Edit\"),\n        class: \"edit-sheet\" + (this.reactive.document.system.isEditing ? \" active\" : \"\"),\n        icon: \"fas \" + (this.reactive.document.system.isEditing ? \"fa-toggle-on\" : \"fa-toggle-off\"),\n        // onclick: (ev) => this._onToggleEdit(ev),\n        onPress: (ev) => {\n          this._onToggleEdit(ev)\n        }\n      })\n    }\n    return buttons;\n  }\n\n  /**\n   * Handles toggling the edit mode of the sheet\n   * @param {Event} event - The triggering event\n   * @return {Promise<void>} Returns a promise that resolves when the edit mode is toggled\n   */\n  async _onToggleEdit(event) {\n    game.system.log.p(\"[TOGGLE EDIT] _onToggleEdit event\", event);\n\n    if (event?.event) {\n      event.event.preventDefault();\n    }\n    await this.reactive.document.update({system: {isEditing: !this.reactive.document.system.isEditing}});\n    this.render();\n  }\n\n  /**\n   * Opens the token configuration application\n   * @param {Event} event - The triggering event\n   * @return {void}\n   */\n  _onConfigureToken(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const actor = this.reactive.document;\n    const token = actor.isToken ? actor.token : actor.prototypeToken;\n    new CONFIG.Token.prototypeSheetClass(token, {\n      left: Math.max(this.position.left - 560 - 10, 10),\n      top: this.position.top,\n    }).render(true);\n  }\n\n  /**\n   * Determines if dragging can start from the given selector\n   * @param {string} selector - The selector to check\n   * @return {boolean} Whether dragging can start\n   */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /**\n   * Determines if drag and drop is allowed\n   * @param {string} selector - The selector to check\n   * @return {boolean} Whether drag and drop is allowed\n   */\n  _canDragDrop(selector) {\n    return this.reactive.document.isOwner || game.user.isGM;\n  }\n\n  /**\n   * Handles drag over events\n   * @param {DragEvent} event - The drag event\n   * @return {void}\n   */\n  _onDragOver(event) { }\n\n  /**\n   * Handles the start of a drag operation\n   * @param {DragEvent} event - The drag event\n   * @return {void}\n   */\n  _onDragStart(event) {\n    {\n      const li = event.currentTarget;\n      if (event.target.classList.contains(\"content-link\")) {\n        return;\n      }\n\n      // Create drag data\n      let dragData;\n\n      // Owned Items\n      if (li.dataset.itemId) {\n        const item = this.actor.items.get(li.dataset.itemId);\n        dragData = item.toDragData();\n      }\n\n      // Active Effect\n      if (li.dataset.effectId) {\n        const effect = this.actor.effects.get(li.dataset.effectId);\n        dragData = effect.toDragData();\n      }\n\n      if (!dragData) {\n        return;\n      }\n\n      // Set data transfer\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    }\n  }\n\n  /**\n   * Handles dropping content onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @return {Promise<void|boolean|ActiveEffect|Item>} The result of the drop operation\n   */\n  async _onDrop(event) {\n    const data = TextEditor.getDragEventData(event);\n    const actor = this.reactive.document;\n    if (actor.documentName !== \"Actor\") {\n      return;\n    }\n    /**\n     * A hook event that fires when some useful data is dropped onto an ActorSheet.\n     * @function dropActorSheetData\n     * @memberof hookEvents\n     * @param {Actor} actor      The Actor\n     * @param {ActorSheet} sheet The ActorSheet application\n     * @param {object} data      The data that has been dropped onto the sheet\n     */\n    const allowed = Hooks.call(\"dropActorSheetData\", actor, this, data);\n    if (allowed === false) {\n      return;\n    }\n\n    // Handle different data types\n    switch (data.type) {\n      case \"ActiveEffect\": {\n        return await this._onDropActiveEffect(event, data);\n      }\n      case \"Actor\": {\n        return await this._onDropActor(event, data);\n      }\n      case \"Item\": {\n        return await this._onDropItem(event, data);\n      }\n\n      case \"Folder\": {\n        return await this._onDropFolder(event, data);\n      }\n      default: {\n        log.e(`Impossible type \"${data.type}\" in _onDrop.`);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles dropping an active effect onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<boolean|ActiveEffect>} The created effect or false if failed\n   */\n  async _onDropActiveEffect(event, data) {\n    const actor = this.reactive.document;\n    const effect = await ActiveEffect.implementation.fromDropData(data);\n\n    if (!actor.isOwner || !effect) {\n      return false;\n    }\n    if (actor.uuid === effect.parent.uuid) {\n      return false;\n    }\n    return ActiveEffect.create(effect.toObject(), { parent: actor });\n  }\n\n  /**\n   * Handles dropping an actor onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<boolean>} Whether the drop was successful\n   */\n  async _onDropActor(event, data) {\n    const actor = this.reactive.document;\n\n    if (!actor.isOwner) {\n      return false;\n    }\n  }\n\n  /**\n   * Handles dropping an item onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @param {boolean} ignoreValidation - Whether to ignore validation\n   * @return {Promise<boolean|Item>} The created item or false if the operation failed\n   */\n  async _onDropItem(event, data, ignoreValidation = false) {\n    // console.log('_onDropItem', data);\n    const actor = this.reactive.document;\n\n    if (!actor.isOwner) {\n      ui.notifications.error(localize(`${SYSTEM_CODE}.Errors.NotOwner`))\n      return false;\n    }\n\n    const droppedItem = await fromUuid(data.uuid);\n\n    //- job items are complicated and have their own logic\n    if(droppedItem.type === \"job\") {\n      return this._onDropJob(event, data);\n    }\n\n    /**\n     * Effect items are not to be dropped directly on the actor\n     * @why: because Effect Items are not ActiveEffects, \n     * dropping them directly on the actor will have no effect,\n     * other than to break the Actor sheet because it will accumulate\n     * invisible Effect items that cannot be removed, for there is no\n     * mechanism to remove them and no use for them. Effect items are only \n     * to be dropped onto other items, not actors.\n     */\n    if (droppedItem.type === \"effect\") {\n      ui.notifications.error(localize(`${SYSTEM_CODE}.Errors.EffectItemsNotAllowed`))\n      return false;\n    }\n    \n    //- if equipment duplicate, increment quantity and return\n    const duplicate = actor.items.find(x => x.name == droppedItem.name && x.type == droppedItem.type);\n    if(duplicate) {\n      await duplicate.update({system: {quantity: duplicate.system.quantity + 1}})\n      ui.notifications.info(`Found matching item \"${duplicate.name}\" and incremented quantity.`)\n      return\n    }\n\n    const item = await Item.implementation.fromDropData(data);\n    const itemData = item.toObject();\n\n    // Handle item sorting within the same Actor\n    if (actor.uuid === item.parent?.uuid) {\n      return this._onSortItem(event, itemData);\n    }\n\n    // Create the owned item\n    return this._onDropItemCreate(itemData);\n  }\n\n  /**\n   * Handles dropping a folder onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<Array>} Array of created items\n   */\n  async _onDropFolder(event, data) {\n    game.system.log.o('[DROP FOLDER] Starting folder drop:', {\n      event,\n      data\n    });\n\n    const actor = this.reactive.document;\n    if (!actor.isOwner) {\n      game.system.log.w('[DROP FOLDER] Not owner, exiting');\n      return [];\n    }\n\n    /* eslint-disable-next-line new-cap */\n    const folder = await Folder.implementation.fromDropData(data);\n    game.system.log.o('[DROP FOLDER] Retrieved folder:', {\n      folder,\n      name: folder?.name,\n      contents: folder?.contents,\n      children: folder?.children\n    });\n\n    if (!folder) {\n      game.system.log.w('[DROP FOLDER] No folder found');\n      return [];\n    }\n\n    // Process folder contents\n    const items = [];\n    let foundJob = false;\n\n    // Helper function to process items in a folder\n    const processItems = async (contents) => {\n      game.system.log.o('[DROP FOLDER] Processing contents:', {\n        count: contents?.length,\n        items: contents?.map(i => ({ name: i.name, type: i.type }))\n      });\n\n      if (!contents?.length) return;\n\n      // First pass - look for jobs\n      if (!foundJob) {\n        for (const item of contents) {\n          if (item.type === 'job') {\n            game.system.log.o('[DROP FOLDER] Found job:', item.name);\n            await this._onDropJob(event, { uuid: item.uuid });\n            foundJob = true;\n            break;\n          }\n        }\n      }\n\n      // Second pass - handle non-job items\n      for (const item of contents) {\n        if (item.type !== 'job') {\n          game.system.log.o('[DROP FOLDER] Processing non-job item:', {\n            name: item.name,\n            type: item.type\n          });\n          items.push(item);\n        }\n      }\n    };\n\n    // Process main folder contents\n    if (folder.contents?.length) {\n      game.system.log.o('[DROP FOLDER] Processing main folder contents');\n      await processItems(folder.contents);\n    }\n\n    // Process any subfolders\n    if (folder.children?.length) {\n      game.system.log.o('[DROP FOLDER] Found subfolders:', folder.children.length);\n      for (const child of folder.children) {\n        game.system.log.o('[DROP FOLDER] Processing subfolder:', {\n          name: child.name,\n          entries: child.entries?.length\n        });\n        if (child.entries?.length) {\n          await processItems(child.entries);\n        }\n      }\n    }\n\n    // Create all non-job items\n    if (items.length) {\n      game.system.log.o('[DROP FOLDER] Creating items:', {\n        count: items.length,\n        items: items.map(i => ({ name: i.name, type: i.type }))\n      });\n      for (const item of items) {\n        await this._onDropItem(event, item, true);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Handles dropping a job onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<boolean|void>} Whether the drop was successful\n   */\n  async _onDropJob(event, data) {\n    const actor = this.reactive.document;\n\n    if (!actor.isOwner) {\n      return false;\n    }\n    \n    const job = await fromUuid(data.uuid);\n    const grants = job.system.grants;\n    const grantItems = [];\n    const failedUuids = [];\n    const existingUuids = new Set(actor.items.map(item => item.uuid));\n    \n    game.system.log.d('_onDropJob: Job grants:', grants);\n    \n    for (const grantObject of grants.list) {\n      game.system.log.d('_onDropJob: Processing grant:', grantObject);\n      \n      // Try to get item, handling both short and full UUID formats\n      let grantItem;\n      if (grantObject.uuid.startsWith('Item.')) {\n        grantItem = game.items.get(grantObject.uuid.replace('Item.', ''));\n        game.system.log.d('_onDropJob: Attempting to find world item:', grantItem);\n      } else {\n        grantItem = await fromUuid(grantObject.uuid);\n        game.system.log.d('_onDropJob: Attempting to find compendium item:', grantItem);\n      }\n      \n      if (!grantItem) {\n        game.system.log.w(`_onDropJob: Failed to find item with UUID: ${grantObject.uuid}`);\n        failedUuids.push(grantObject.uuid);\n        continue;\n      }\n      \n      // Only add if we don't already have this item\n      if(!existingUuids.has(grantItem.uuid)) {\n        grantItems.push(grantItem);\n        existingUuids.add(grantItem.uuid); // Add to set to prevent duplicates within the same job\n      }\n    }\n\n    if (failedUuids.length > 0) {\n      game.system.log.g('ItemBucket:_onDropJob: Failed Uuids:', failedUuids);\n      const confirmed = await Dialog.confirm({\n        title: \"Missing Items Found\",\n        content: `\n          <p>The following items could not be found:</p>\n          <p>${failedUuids.join('<br>')}</p>\n          <p>Would you like to remove these invalid references from the job?</p>\n        `,\n        yes: () => true,\n        no: () => false\n      });\n      \n      if (confirmed) {\n        // Get fresh copy of job\n        const jobToUpdate = await fromUuid(data.uuid);\n        \n        // Filter out failed UUIDs\n        const updatedGrants = {\n          ...jobToUpdate.system.grants,\n          list: jobToUpdate.system.grants.list.filter(g => !failedUuids.includes(g.uuid))\n        };\n        \n        // Update the job\n        await jobToUpdate.update({\n          'system.grants': updatedGrants\n        });\n        \n        ui.notifications.info(`Removed ${failedUuids.length} invalid references from job.`);\n      } else {\n        ui.notifications.error(`Job import cancelled due to missing items.`);\n        return false;\n      }\n    }\n\n    if (grantItems.length > 0) {\n      await actor.createEmbeddedDocuments(\"Item\", grantItems);\n    }\n\n    await actor.update({\n      system: {\n        job: {\n          uuid: job.uuid,\n          name: job.name,\n          grants: grants.list,\n          level: job.system.level,\n          role: job.system.role,\n          img: job.img\n        }\n      }\n    });\n  }\n\n  /**\n   * Creates new items from dropped data\n   * @param {object|Array} itemData - The item data to create\n   * @return {Promise<void>} Returns a promise that resolves when the items have been created\n   */\n  async _onDropItemCreate(itemData) {\n    itemData = itemData instanceof Array ? itemData : [itemData];\n    const actor = this.reactive.document;\n    for (const v of itemData) {\n      await actor.createEmbeddedDocuments(\"Item\", [v]);\n    }\n  }\n\n  /**\n   * Handles sorting items within the actor's inventory\n   * @param {Event} event - The triggering event\n   * @param {object} itemData - The item data being sorted\n   * @return {Promise<Item[]>} The updated array of sorted items\n   */\n  _onSortItem(event, itemData) {\n    const actor = this.reactive.document;\n\n    // Get the drag source and drop target\n    const items = actor.items;\n    const source = items.get(itemData._id);\n    const dropTarget = event.target.closest(\"[data-item-id]\");\n    const target = items.get(dropTarget.dataset.itemId);\n\n    // Don't sort on yourself\n    if (source.id === target.id) {\n      return;\n    }\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings = [];\n    for (const el of dropTarget.parentElement.children) {\n      const siblingId = el.dataset.itemId;\n      if (siblingId && siblingId !== source.id) {\n        siblings.push(items.get(el.dataset.itemId));\n      }\n    }\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort(source, { target, siblings });\n    const updateData = sortUpdates.map((u) => {\n      const update = u.update;\n      update._id = u.target.data._id;\n      return update;\n    });\n\n    // Perform the update\n    return actor.updateEmbeddedDocuments(\"Item\", updateData);\n  }\n}\n\n","<script>\n  import { getContext, onMount } from \"svelte\";\n  import { rippleFocus } from \"#standard/action/animate/composable\";\n  import { TJSDocument } from \"#runtime/svelte/store/fvtt/document\";\n\n  import { TJSInput } from \"#standard/component/form\";\n  import { createFilterQuery } from \"~/src/filters/itemFilterQuery\";\n  import { toggleBookmark, ucfirst } from \"~/src/helpers/util\";\n  import { localize } from \"~/src/helpers/util\";\n  import { SYSTEM_ID, SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import ScrollingContainer from \"~/src/helpers/svelte-components/ScrollingContainer.svelte\";\n  import InventoryRow from \"~/src/components/molecules/InventoryRow.svelte\";\n  import Badge from \"~/src/components/atoms/Badge.svelte\";\n\n  const Actor = getContext(\"#doc\");\n  const doc = new TJSDocument($Actor);\n  const RollCalc = new CONFIG.FFXIV.RollCalcActor({ actor: $Actor });\n  const typeSearch = createFilterQuery(\"type\");\n  typeSearch.set([\"trait\", \"action\"]); // Updated to filter for both types\n  const input = {\n    store: typeSearch,\n    efx: rippleFocus(),\n    placeholder: \"by Name\",\n    type: \"search\",\n    id: \"search\",\n  };\n\n  let combat;\n  \n  function onCombatUpdate() {\n    combat = game.combat;\n  }\n\n  onMount(() => {\n    // Initial combat state\n    combat = game.combat;\n    \n    // Subscribe to combat updates\n    Hooks.on('createCombat', onCombatUpdate);\n    Hooks.on('deleteCombat', onCombatUpdate);\n    Hooks.on('updateCombat', onCombatUpdate);\n    \n    return () => {\n      // Cleanup hooks on component destroy\n      Hooks.off('createCombat', onCombatUpdate);\n      Hooks.off('deleteCombat', onCombatUpdate);\n      Hooks.off('updateCombat', onCombatUpdate);\n    };\n  });\n\n  /** @type {import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, Item>} */\n  const wildcard = doc.embedded.create(Item, {\n    name: \"wildcard\",\n    filters: [typeSearch],\n    sort: (a, b) => a.name.localeCompare(b.name),\n  });\n\n  function editItem(item) {\n    item.sheet.render(true);\n\n    game.system.log.d(\"editItem\");\n    game.system.log.d(item);\n  }\n\n  function addQuantity(item) {\n    game.system.log.d(\"addQuantity\");\n    game.system.log.d(item);\n\n    const quantity = item.system.quantity + 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function removeQuantity(item) {\n    const quantity = item.system.quantity - 1;\n    item.update({ system: { quantity: quantity } });\n  }\n\n  function duplicateItem(item) {\n    game.system.log.d(\"duplicateItem\");\n    game.system.log.d(item);\n    const itemData = item.toObject();\n    delete itemData._id;\n    game.system.log.d(\"itemData\", itemData);\n    $Actor.sheet._onDropItemCreate(itemData);\n  }\n\n  function deleteItem(index, item) {\n    let okToDelete = true;\n    if (game.settings.get(SYSTEM_ID, \"confirmBeforeDeletingActorItem\")) {\n      okToDelete = confirm(localize(\"Types.Actor.Abilities.confirmDeleteItem\"));\n    }\n    if (okToDelete) {\n      item.delete();\n    }\n  }\n\n  async function removeAllItems() {\n    const okToDelete = await Dialog.confirm({\n      title: localize(\"Types.Actor.Abilities.confirmDeleteAllTitle\"),\n      content: localize(\"Types.Actor.Abilities.confirmDeleteAll\"),\n      yes: async () => {  \n        await $Actor.deleteAllItems([\"trait\", \"action\"]);\n      },\n      no: () => {},\n    });\n  }\n\n  function roll(item) {\n    game.system.log.d(\"roll\");\n    game.system.log.d(item);\n  }\n  function useItem(item) {\n    const result = new CONFIG.FFXIV.RollCalcActor({ actor: $Actor, item: item, rollType: \"equipment\" }).send();\n\n    game.system.log.d(\"useItem\");\n    game.system.log.d(item);\n  }\n  function toggleLock(event) {\n    game.system.log.d(\"a\");\n    event.stopPropagation();\n    event.preventDefault();\n    $doc.update(\n      {\n        [\"system.inventoryLocked\"]: !$doc.system.inventoryLocked,\n      },\n      {\n        diff: true,\n        diffData: true,\n        diffSystem: true,\n      },\n    );\n  }\n\n  function showItemSheet(item) {\n    item.sheet.render(true);\n  }\n\n  async function deleteJob() {\n    if (!$doc.system.job.uuid) {\n      return;\n    }\n\n    //- confirm by Dialog\n    const okToDelete = await Dialog.confirm({\n      title: localize(\"Types.Actor.Abilities.confirmDeleteJobTitle\"),\n      content: localize(\"Types.Actor.Abilities.confirmDeleteJob\"),\n      yes: async () => {\n        //- get the job by uuid\n        const job = await fromUuid($doc.system.job.uuid);\n        //- get the grants from the job\n        const grants = job.system.grants;\n        //- iterate over the grant (which are uuids) and get the item by uuid\n        for (let grant of grants.list) {\n          const item = await fromUuid(grant.uuid);\n          //- find the corresponding item in the actor by name\n          const actorItem = $doc.items.find((x) => x.name === item.name);\n          if (actorItem) {\n            actorItem.delete();\n          }\n        }\n        //- update the actor to remove the job uuid\n        $doc.update({ system: { job: { uuid: \"\", name: \"\", grants: [], level: null, img: null, role: '' } } });\n      },\n      no: () => {},\n    });\n  }\n\n  onMount(async () => {\n    game.system.log.d(\"items\", $doc.items);\n  });\n\n  $: items = [...$wildcard];\n  $: lockCSS = $doc.system.inventoryLocked ? \"lock\" : \"lock-open\";\n  $: faLockCSS = $doc.system.inventoryLocked ? \"fa-lock negative\" : \"fa-lock-open positive\";\n  $: hasItems = $Actor.items.some(x=> ['action', 'trait'].includes(x.type));\n  \n  const badgeType = (item) => {\n    return item.system.uses >= item.system.limitation ? 'danger' : 'success';\n  }\n  \n  const remaining = (item) => {\n    return item.system.hasLimitation ? \n      parseInt(item.system.limitation || 0) - parseInt(item.system.uses || 0) : 10;\n  } \n\n</script>\n\n<template lang=\"pug\">\n\n    .panel.overflow.containerx\n      .padded\n        //- add in the job item if it exists\n        +if(\"$Actor.system.job?.name\")\n          h1.left.gold {localize('Job')}\n          table.borderless\n            tr\n              th.img.shrink(scope=\"col\")\n                img.icon(src=\"{$Actor.system.job?.img}\" alt=\"{$Actor.system.job?.img}\")\n              th.left.expand(scope=\"col\" on:click=\"{showItemSheet($Actor.system.job)}\" role=\"button\") {ucfirst($Actor.system.job?.name)}\n              th.buttons(scope=\"col\")\n                button.stealth(on:click=\"{deleteJob}\")\n                  i.fa-solid.fa-trash\n\n\n        h1.gold Abilities\n        table.borderless\n          tr\n            th.img.shrink(scope=\"col\")\n            th.left.expand.ml-sm(scope=\"col\") {localize('Name')}\n            th.fixed(scope=\"col\") {localize('Type')}\n            th.shrink(scope=\"col\")\n              i.fa-solid.fa-bookmark\n            th.buttons(scope=\"col\" class=\"{lockCSS}\")\n              button.stealth(class=\"{lockCSS}\" on:click=\"{toggleLock}\")\n                i.fa(class=\"{faLockCSS}\")\n          +each(\"items as item, index\")\n            //- pre item.type {item.type}\n            tr\n              td.img\n                img.icon(src=\"{item.img}\" alt=\"{item.name}\")\n              td.left\n                a.stealth.link(on:click=\"{showItemSheet(item)}\" class=\"{item.system.isMagic ? 'pulse' : ''}\" role=\"button\") {item.name}\n                +if(\"item.system.hasLimitation && combat\")\n                  span.ml-sm\n                    Badge(type!=\"{badgeType(item)}\") {remaining(item)}\n              td {ucfirst(item.type)}\n              td\n                button.stealth(on:click=\"{toggleBookmark(item)}\") \n                  i.fa-bookmark(class=\"{item.system.favourite === true ? 'fa-solid' : 'fa-regular'}\" )\n              td.min.buttons.right\n                +if(\"!$doc.system.inventoryLocked\")\n                  button.stealth( data-tooltip=\"{localize('Types.Actor.ActionButtons.Edit')}\" on:click=\"{editItem(item)}\")\n                    i.left.fa.fa-edit\n                  button.stealth( data-tooltip=\"{localize('Types.Actor.ActionButtons.Duplicate')}\" on:click=\"{duplicateItem(index, item)}\")\n                    i.left.fa.fa-copy\n                  button.stealth( data-tooltip=\"{localize('Types.Actor.ActionButtons.Delete')}\" on:click=\"{deleteItem(index, item)}\")\n                    i.left.fa.fa-trash\n            \n      +if(\"hasItems\")\n        button.mt-sm.glossy-button.gold-light.hover-shine(on:click=\"{removeAllItems}\") {localize(\"Instructions.RemoveAll\")}\n\n</template>\n\n<style lang=\"sass\">\n@use '../../../../styles/_mixins' as mixins\n\n.containerx\n  container-type: inline-size\n\n.padded\n  transition: padding 0.2s ease-in-out\n  @container (min-width: 350px)\n    padding: 1rem\n\n.pulse\n  +mixins.pulse\n  +mixins.buttons\n\n.actions\n  margin-left: 0.5rem\n  margin-right: 0\n  justify-content: right\n  :not(:last-child)\n    margin-right: 2px\n\n.clickable\n  max-height: 1.3rem\n  line-height: 1.3rem\n  background: rgba(255, 255, 255, 0.2)\n\ni.disable\n  color: grey\n  cursor: not-allowed\n\n.fa-bookmark\n  cursor: pointer\n  &.row\n    color: rgba(100, 0, 100, 1)\n\n.itemrow\n  height: 1.9rem\n\n.rowimgbezelbutton\n  border-style: solid\n  border-width: 1px\n  border-color: #bbb #aaa #999\n  text-shadow: 0 1px 0 #eee\n  background: #ccc\n  color: #333\n  font-family: \"Lucida Grande\"\n  font-size: 12px\n  font-weight: bold\n  text-decoration: none\n  -webkit-border-radius: 3px\n  -webkit-box-shadow: inset 0 1px 1px #fff, inset 0 -1px 1px #aaa, 0 2px 4px -3px #666\n  &.lock-open\n    background-color: #19762d\n    color: white\n  &.lock\n    background-color: #9c0f0f\n    color: white\n\n.rowimgbezelbutton:active\n  -webkit-box-shadow: inset 0 1px 1px #aaa, inset 0 -1px 1px #aaa\n  border-color: #888 #aaa #eee\n\n\n</style>\n","<script>\n  import { onMount } from \"svelte\";\n  import Attribute from \"~/src/components/atoms/actor/Attribute.svelte\";\n\n  export let data;\n  export let abbreviateLabel;\n  export let key;\n  export let showSign;\n  export let onclick;\n\n  onMount(() => {});\n</script>\n\n<template lang=\"pug\">\n  .component\n    +each(\"data as { code }, index\")\n      Attribute( showSign=\"{showSign}\" abbreviateLabel=\"{abbreviateLabel}\" key=\"{key}\" code=\"{code}\" onclick=\"{onclick}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../styles/_mixins' as mixins\n</style>\n","<script>\nimport { onMount } from 'svelte';\nimport AttributeCol from \"~/src/components/molecules/Attributes/NPC/AttributeCol.svelte\";\n\nexport let onclick;\n\nlet data = [\n  { code: 'str' },\n  { code: 'dex' },\n  { code: 'vit' },\n  { code: 'int' },\n  { code: 'mnd' }\n]\n</script>\n<template lang='pug'>\n  .molecule\n    .flexrow.mb-md\n      AttributeCol( key=\"primary\" showSign=\"{true}\" abbreviateLabel=\"{true}\" data=\"{data}\" onclick=\"{onclick}\")\n</template>\n<style lang='sass'>\n  @use '../../../../styles/_mixins' as mixins\n\n  .molecule\n    padding: 1em\n    width: 100%\n    \n</style>","<script>\n  import { onMount } from 'svelte';\n  import AttributeCol from \"~/src/components/molecules/Attributes/AttributeCol.svelte\";\n\n  export let onclick;\n\n  let data = [\n  { code: 'def' },\n  { code: 'mag' },\n  { code: 'vig' },\n  { code: 'spd' }\n]\n  </script>\n  <template lang='pug'>\n    .molecule\n      .flexrow.mb-md \n        AttributeCol(data=\"{data}\" key=\"secondary\" onclick=\"{onclick}\")\n      \n  </template>\n\n  <style lang='sass'>\n    @use '../../../../styles/_mixins' as mixins\n  \n    .molecule\n      width: 100%\n      padding: 1em\n\n  </style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { getSizeOptions } from \"~/src/helpers/constants\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { localize } from \"~/src/helpers/util\";\n  import PrimaryAttributes from \"~/src/components/molecules/Attributes/NPC/PrimaryAttributes.svelte\";\n  import SecondaryAttributes from \"~/src/components/molecules/Attributes/NPC/SecondaryAttributes.svelte\";\n  import DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\n\n  const sizeOptions = getSizeOptions();\n\n  const actor = getContext(\"#doc\");\n\n  // Add size-to-grid mapping\n  const sizeToGrid = {\n    tiny: 0.5,\n    small: 1,\n    medium: 1,\n    large: 2,\n    huge: 3,\n    gargantuan: 4\n  };\n\n  // Handle size changes\n  const onSizeChange = async (newSize) => {\n    const gridSize = sizeToGrid[newSize.toLowerCase()] || 1;\n    \n    // Update the prototype token dimensions\n    await $actor.update({\n      \"prototypeToken.width\": gridSize,\n      \"prototypeToken.height\": gridSize\n    });\n  };\n\n  const onclick = async (key, code) => {\n    game.system.log.d('actor', $actor);\n    const attributeValue = $actor.system.attributes[key][code].val;\n    const rollFormula = `1d20 + ${attributeValue}`;\n    const attributeName = code.toUpperCase();\n    \n    const roll = await new Roll(rollFormula).evaluate({async: true});\n    \n    const messageData = {\n      speaker: ChatMessage.getSpeaker({ actor: $actor }),\n      flavor: `${attributeName} Check`,\n      type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n      roll,\n      flags: {\n        [SYSTEM_ID]: {\n          data: {\n            chatTemplate: \"AttributeRollChat\",\n            actor: {\n              _id: $actor._id,\n              name: $actor.name,\n              img: $actor.img\n            }\n          }\n        }\n      }\n    };\n    \n    await roll.toMessage(messageData);\n  }\n\n\n</script>\n\n<template lang=\"pug\">\n.molecule\n  .flexrow.sheet-row.justify-vertical\n    .flex1.ml-md.mt-md.left.white\n      label(for=\"size\") {localize(\"Size\")}\n    .flex1.mt-md.mr-md.right\n      DocSelect.right.white(\n        name=\"size\" \n        valuePath=\"system.size\" \n        options=\"{sizeOptions}\"\n        callback=\"{onSizeChange}\"\n      )\n  .flexrow\n\n    .flex\n      PrimaryAttributes(onclick=\"{onclick}\")\n    .flex\n      SecondaryAttributes(onclick=\"{onclick}\")\n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../styles/_mixins' as mixins\n\n  .molecule\n    height: 100%\n    width: 100%\n    white-space: nowrap\n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import AttributeBlock from \"~/src/components/molecules/Attributes/NPC/AttributeBlock.svelte\";\n  import TitleBlock from \"~/src/components/molecules/TitleBlock.svelte\";\n  import { ASSET_PATH } from \"~/src/helpers/constants\";\n\n  const application = getContext(\"#external\").application;\n  const documentStore = getContext(\"#doc\");\n  let _filePickerInstance = {};\n\n  function _launchStandardProfileEditor(event) {\n    const current = $documentStore.img;\n    if (_filePickerInstance instanceof FilePicker && !_filePickerInstance?.rendered) {\n      _filePickerInstance.render(true);\n      return;\n    }\n    _filePickerInstance = new FilePicker({\n      type: \"image\",\n      current: current,\n      callback: (path) => {\n        $documentStore.update({ img: path });\n      },\n\n      top: application.position.top + 40,\n      left: application.position.left + 10,\n    });\n    return _filePickerInstance.browse();\n  }\n\n  //- provide Tokenizer support\n  function _editToken(event) {\n    if (game.modules.has(\"vtta-tokenizer\") && typeof Tokenizer !== \"undefined\") {\n      _launchTokenizer();\n    } else {\n      _launchStandardProfileEditor(event);\n    }\n  }\n\n  function _launchTokenizer() {\n    if (game.modules.has(\"vtta-tokenizer\") && typeof Tokenizer !== \"undefined\") {\n      Tokenizer.tokenizeActor($documentStore);\n    }\n  }\n</script>\n\n<template lang=\"pug\">\n  section.organism\n    .flexcol.background\n      .texture\n      .flexrow.panel.borderless\n        .flex2\n          AttributeBlock\n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../styles/_mixins' as mixins\n\n  +mixins.background(rgb(93 47 47), 0.05 )\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  import HP from \"~/src/components/molecules/Points/HP.svelte\";\n  \n  </script>\n  <template lang='pug'>\n    section.organism\n      .flexrow.section\n        .flex.hp.pa-md\n          HP\n        \n  </template>\n  <style lang='sass'>\n    @use '../../../styles/_mixins' as mixins\n  \n    .section\n      width: 100%\n      position: relative\n      overflow: hidden\n      border-bottom: 4px ridge var(--ff-border-color)\n      border-left: 4px ridge var(--ff-border-color)\n      border-right: 4px ridge var(--ff-border-color)\n  \n    .hp\n      position: relative\n      background: linear-gradient(to right, rgb(171, 67, 125), rgb(205, 139, 171))\n      clip-path: polygon(0 0, 100% 0, 100% 50%, 80% 100%, 0 100%)\n  \n  </style>\n  ","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { ASSET_PATH } from \"~/src/helpers/constants\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n\n  const application = getContext(\"#external\").application;\n  const documentStore = getContext(\"#doc\");\n  let _filePickerInstance = {};\n\n  function _launchStandardProfileEditor(event) {\n    const current = $documentStore.img;\n    if (_filePickerInstance instanceof FilePicker && !_filePickerInstance?.rendered) {\n      _filePickerInstance.render(true);\n      return;\n    }\n    _filePickerInstance = new FilePicker({\n      type: \"image\",\n      current: current,\n      callback: (path) => {\n        $documentStore.update({ img: path });\n      },\n\n      top: application.position.top + 40,\n      left: application.position.left + 10,\n    });\n    return _filePickerInstance.browse();\n  }\n\n  //- provide Tokenizer support\n  function _editToken(event) {\n    if (game.modules.has(\"vtta-tokenizer\") && typeof Tokenizer !== \"undefined\") {\n      _launchTokenizer();\n    } else {\n      _launchStandardProfileEditor(event);\n    }\n  }\n\n  function _launchTokenizer() {\n    if (game.modules.has(\"vtta-tokenizer\") && typeof Tokenizer !== \"undefined\") {\n      Tokenizer.tokenizeActor($documentStore);\n    }\n  }\n</script>\n\n<template lang=\"pug\">\n\n.portrait-frame\n  pre bo\n  PortraitFrame(img=\"{true}\" imgSrc=\"{$documentStore?.img}\" onclick=\"{_editToken}\")\n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n  \n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { localize } from \"#runtime/util/i18n\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n\n</script>\n\n<template lang=\"pug\">\n\n.navy\n  .background\n    .texture\n    .flexrow.panel.borderless.wide\n      .flex2.wide\n        .portrait-frame.pr-xs.wide\n          PortraitFrame(style=\"min-width: 182px;\")\n            .flexcol.wide.gold\n              .flex1\n                h2.font-cinzel {localize(`${SYSTEM_CODE}.Description`)}\n              .flex1\n                .flexrow.justify-vertical\n                  .flex2.left.pl-md\n                    label.gold(for=\"name\") {localize(`${SYSTEM_CODE}.Name`)}\n                  .flex2.wide\n                    DocInput.wide(id=\"name\" name=\"name\" valuePath=\"name\")\n              hr\n              .flex3\n                .left.panel.borderless.overflow.prose\n                  ProseMirror( editable=\"{true}\" attr=\"system.description\" )\n</template>\n\n\n<style lang=\"sass\">\n  @use '../../styles/_mixins' as mixins\n\n  .navy\n    +mixins.background(rgb(20 45 76), 0.05 )\n  \n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n  .background\n    overflow-y: auto\n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import { localize } from \"#runtime/util/i18n\";\n  import AttributeSection from \"~/src/components/organisms/actor/NPC/AttributeSection.svelte\";\n  import PointsSection from \"~/src/components/organisms/actor/PointsSectionNPC.svelte\";\n  import EffectsSection from \"~/src/components/organisms/actor/EffectsSection.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n  import Portrait from \"~/src/components/organisms/actor/Portrait.svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import DescriptionBlockNPC from \"~/src/components/molecules/DescriptionBlockNPC.svelte\";\n\n  // export let sheet;\n  const documentStore = getContext(\"#doc\");\n\n  const application = getContext(\"#external\").application;\n  const { width } = application.position.stores;\n\n  $: smallwindow = $width <= 750\n  $: largewindow = $width > 750\n</script>\n\n<template lang=\"pug\">\n  .panel.overflow\n    .flexrow\n      div(class=\"{smallwindow ? 'flex2' : 'flex3'}\")\n        .flexcol\n          .purple\n            .background\n              .texture\n              .flexrow.panel.borderless.wide\n                .flex1(style=\"{smallwindow ? 'min-width: 120px;' : ''}\")\n                  Portrait\n                .flex2.wide\n                  .portrait-frame.pr-xs.wide\n                    PortraitFrame(style=\"min-width: 182px;\")\n                      .flexcol.wide\n                        .flex1\n                          h2.font-cinzel {localize(`${SYSTEM_CODE}.Points`)}\n                        .flex1\n                          .left.panel.borderless.overflow\n                            PointsSection\n        +if(\"largewindow\")\n          .flexcol\n            DescriptionBlockNPC \n\n\n      div(class=\"{largewindow ? 'flex2' : 'flex3'}\" style=\"min-width: 250px;\")\n        AttributeSection\n\n    +if(\"smallwindow\")\n      .flexcol\n        DescriptionBlockNPC\n    \n    .flexcol.teal\n      .background\n        .texture\n        .flexrow.panel.borderless.wide\n          .flex2.gold\n            .portrait-frame.pr-xs\n              PortraitFrame(size=\"40\" style=\"min-width: 182px;\")\n                EffectsSection.high.wide\n                       \n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../styles/_mixins' as mixins\n\n  // .fuscia\n  //   +mixins.background(rgb(76 20 32), 0.05 )\n  .purple\n    +mixins.background(rgb(42 20 76), 0.05 )\n  // .navy\n  //   +mixins.background(rgb(20 45 76), 0.05 )\n  .teal\n    +mixins.background(rgb(20 68 76), 0.05 )\n  // .burgundy\n  //   +mixins.background(rgb(76 35 20), 0.05 )\n\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n  // +mixins.background(rgb(29 29 29))\n  // +mixins.background(rgb(64 47 22), 0.1)\n  // +mixins.background(rgb(20 45 76), 0.05 )\n  // +mixins.background(rgb(48 76 20), 0.05 )\n  // +mixins.background5(rgb(20 68 76), 0.05 )\n  // +mixins.background4(rgb(76 35 20), 0.05 )\n  // +mixins.background3(rgb(42 20 76), 0.05 )\n  // +mixins.background2(rgb(74 20 76), 0.05 )\n  // +mixins.background(rgb(76 20 32), 0.05 )\n \n  .background\n    overflow-y: auto\n  // +mixins.background(rgb(66 76 20), 0.05)\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  import { ApplicationShell } from \"#runtime/svelte/component/application\";\n\n  import { setContext, getContext, onMount, tick } from \"svelte\";\n  import { getActorOwner, ucfirst } from \"~/src/helpers/util\";\n  import { SYSTEM_ID } from \"~/src/helpers/constants\";\n  import { localize } from \"~/src/helpers/util\";\n  import { gameSettings } from '~/src/config/gameSettings';\n\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import Abilities from \"~/src/components/tabs/actor/NPC/Abilities.svelte\";\n  import Attributes from \"~/src/components/tabs/actor/NPC/Attributes.svelte\";\n  import Profile from \"~/src/components/tabs/actor/NPC/Profile.svelte\";\n  import Inventory from \"~/src/components/tabs/actor/NPC/Inventory.svelte\";\n  import Effects from \"~/src/components/organisms/item/shared/EffectsTab.svelte\";\n\n  export let elementRoot; //- passed in by SvelteApplication\n  export let documentStore; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n  // export let document; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n\n  //- store a copy of the templates for usage as schemas in other places\n  setContext(\"#doc\", documentStore);\n\n  const application = getContext(\"#external\").application;\n  const applicationWindowHeaderIconsOnly = gameSettings.getStore('applicationWindowHeaderIconsOnly');\n  let headerButtonNoLabel = application.reactive.storeAppOptions.headerButtonNoLabel;\n\n  // Tabs\n  const defaultTabs = [\n    { label: localize(\"Tabs.Attributes\"), id: \"attributes\", component: Attributes, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/tree.webp' },\n    { label: localize(\"Tabs.Abilities\"), id: \"abilities\", component: Abilities, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/sun.webp' },\n    // { label: localize(\"Tabs.Inventory\"), id: \"inventory\", component: Inventory, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/backpack.webp'},\n    // { label: localize(\"Tabs.Profile\"), id: \"profile\", component: Profile, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/mask.webp' },\n    { label: localize(\"Tabs.Effects\"), id: \"effect\", component: Effects, img: '/systems/foundryvtt-final-fantasy/assets/icons/tabs/spiral.webp' }\n  ];\n\n  // set the sheet color\n  let stylesApp;\n  let activeTab = \"attributes\";\n  let _filePickerInstance = {};\n\n\n  // below is just for reference on creating active effects. This is handled in ActorSheet.js\n  async function handleDrop(event) {\n    return;\n\n    if (type === \"Item\") {\n      droppedItem = await game.items.get(split[1]);\n    } else if (type === \"Compendium\") {\n      const compendiumName = `${split[1]}.${split[2]}`;\n      const pack = game.packs.get(compendiumName);\n      droppedItem = await pack.getDocument(split[3]);\n    }\n\n    if (droppedItem.type == \"effect\") {\n      //- get the effects from the item\n      //- add the effect from the item to this item\n      await $documentStore.createEmbeddedDocuments(\"ActiveEffect\", Array.from(droppedItem.effects));\n    }\n  }\n\n  $: tabs = defaultTabs;\n  // Use reactive statements to properly update the headerButtonNoLabel\n  $: $headerButtonNoLabel = $applicationWindowHeaderIconsOnly;\n\n  // Debugging the reactive flow\n\n  onMount(async () => {\n    game.system.log.d($documentStore)\n  });\n</script>\n\n<template lang=\"pug\">\n  ApplicationShell(bind:elementRoot bind:stylesApp)\n    //- @why NB: do not remove this next element; it doesn't have to be `pre` can be any element, but without it the button animations defined in styles below will not work. I don't know why. It's magic.\n    Tabs.tabs.tall(tabs=\"{tabs}\" activeTab=\"{activeTab}\" sheet=\"['actor', 'NPC']\")\n</template>\n\n<style lang=\"sass\">\n:global(.edit-sheet)\n  color: var(--ff-border-color)\n  display: flex\n  align-items: center\n:global(.edit-sheet i)\n  font-size: larger\n:global(.edit-sheet.active)\n  color: var(--border-highlight)\n  animation: pulse 1.2s infinite ease-out\n  \n@keyframes pulse\n  0%\n    opacity: 1\n  25%\n    opacity: 0.5\n  100%\n    opacity: 1\n\n</style>\n","import NPCSheetShell from \"./NPCSheetShell.svelte\";\nimport SvelteDocumentSheet from \"~/src/documents/DocumentSheet\";\nimport { SYSTEM_CODE, SYSTEM_ID } from \"~/src/helpers/constants\";\nimport { localize } from \"~/src/helpers/util\";\nimport { generateRandomElementId } from \"~/src/helpers/util\";\n\n/**\n * Actor sheet implementation for Non-Player Characters\n * @extends {SvelteDocumentSheet}\n */\nexport default class FFXIVActorSheet extends SvelteDocumentSheet {\n\n  /**\n   * Default Application options\n   * @return {object} The default options for configuring the application window - Application options.\n   * @see https://foundryvtt.com/api/Application.html#options\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: `${SYSTEM_ID}--actor-sheet-${generateRandomElementId()}`,\n\n      width: 342,\n      height: 533,\n      minHeight: 180,\n      minWidth: 282,\n      // id: `${SYSTEM_ID}--actor-sheet`, // @deprecated: I don't know why we need an ID for this? And having a non-unique ID causes https://github.com/geoidesic/foundryvtt-final-fantasy/issues/8\n      classes: [SYSTEM_CODE],\n      headerButtonNoLabel: game.settings.get(SYSTEM_ID, 'applicationWindowHeaderIconsOnly') || false, //- @why: without this the initial value on first load of this app after a page refresh will be wrong, despite a reactive setting in the .svelte template; I don't really know why\n      dragDrop: [{ dragSelector: \".directory-list .item\", dropSelector: null }],\n      svelte: {\n        class: NPCSheetShell,\n        target: document.body,\n      },\n    });\n  }\n\n\n  /**\n   * Closes the actor sheet and updates editing state\n   * @param {object} options - Options which affect how the window is closed\n   * @return {Promise<void>} Returns a promise that resolves when the sheet is closed\n   */\n  async close(options = {}) {\n    this.reactive.document?.update({system: {isEditing: false}});\n    await super.close(options);\n  }\n\n  /**\n   * Gets the header buttons configuration for the sheet\n   * @return {Array<object>} Returns an array of button configurations for the sheet header\n   */\n  _getHeaderButtons() {\n    const buttons = super._getHeaderButtons();\n    const canConfigure = game.user.isGM || (this.reactive.document.isOwner && game.user.can(\"TOKEN_CONFIGURE\"));\n    if (this.reactive.document.documentName === \"Actor\") {\n      if (canConfigure) {\n        buttons.unshift({\n          label: this.token ? \"Token\" : \"TOKEN.TitlePrototype\",\n          class: \"configure-token\",\n          icon: \"fas fa-user-circle\",\n          onclick: (ev) => this._onConfigureToken(ev),\n        });\n      }\n    }\n    const canEdit = game.user.isGM || (this.reactive.document.isOwner);\n    if (canEdit) {\n      buttons.unshift({\n        label: localize(\"Types.Actor.HeaderButtons.Edit\"),\n        class: \"edit-sheet\" + (this.reactive.document.system.isEditing ? \" active\" : \"\"),\n        icon: \"fas \" + (this.reactive.document.system.isEditing ? \"fa-toggle-on\" : \"fa-toggle-off\"),\n        // onclick: (ev) => this._onToggleEdit(ev),\n        onPress: (ev) => {\n          this._onToggleEdit(ev)\n        }\n      })\n    }\n    return buttons;\n  }\n\n  /**\n   * Handles toggling the edit mode of the sheet\n   * @param {Event} event - The triggering event\n   * @return {Promise<void>} Returns a promise that resolves when the edit mode is toggled\n   */\n  async _onToggleEdit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    await this.reactive.document.update({system: {isEditing: !this.reactive.document.system.isEditing}});\n    this.render();\n  }\n\n  /**\n   * Opens the token configuration application\n   * @param {Event} event - The triggering event\n   * @return {void}\n   */\n  _onConfigureToken(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const actor = this.reactive.document;\n    const token = actor.isToken ? actor.token : actor.prototypeToken;\n    new CONFIG.Token.prototypeSheetClass(token, {\n      left: Math.max(this.position.left - 560 - 10, 10),\n      top: this.position.top,\n    }).render(true);\n  }\n\n  /**\n   * Determines if dragging can start from the given selector\n   * @param {string} selector - The selector to check\n   * @return {boolean} Whether dragging can start\n   */\n  _canDragStart(selector) {\n    return true;\n  }\n  /**\n   * Determines if drag and drop is allowed\n   * @param {string} selector - The selector to check\n   * @return {boolean} Whether drag and drop is allowed\n   */\n  _canDragDrop(selector) {\n    return this.reactive.document.isOwner || game.user.isGM;\n  }\n  /**\n   * Handles drag over events\n   * @param {DragEvent} event - The drag event\n   * @return {void}\n   */\n  _onDragOver(event) { }\n\n  /**\n   * Handles the start of a drag operation\n   * @param {DragEvent} event - The drag event\n   * @return {void}\n   */\n  _onDragStart(event) {\n    {\n      const li = event.currentTarget;\n      if (event.target.classList.contains(\"content-link\")) {\n        return;\n      }\n\n      // Create drag data\n      let dragData;\n\n      // Owned Items\n      if (li.dataset.itemId) {\n        const item = this.actor.items.get(li.dataset.itemId);\n        dragData = item.toDragData();\n      }\n\n      // Active Effect\n      if (li.dataset.effectId) {\n        const effect = this.actor.effects.get(li.dataset.effectId);\n        dragData = effect.toDragData();\n      }\n\n      if (!dragData) {\n        return;\n      }\n\n      // Set data transfer\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    }\n  }\n\n  /**\n   * Handles dropping content onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @return {Promise<void|boolean|ActiveEffect|Item>} The result of the drop operation\n   */\n  async _onDrop(event) {\n    const data = TextEditor.getDragEventData(event);\n    const actor = this.reactive.document;\n    if (actor.documentName !== \"Actor\") {\n      return;\n    }\n    /**\n     * A hook event that fires when some useful data is dropped onto an ActorSheet.\n     * @function dropActorSheetData\n     * @memberof hookEvents\n     * @param {Actor} actor      The Actor\n     * @param {ActorSheet} sheet The ActorSheet application\n     * @param {object} data      The data that has been dropped onto the sheet\n     */\n    const allowed = Hooks.call(\"dropActorSheetData\", actor, this, data);\n    if (allowed === false) {\n      return;\n    }\n\n    // Handle different data types\n    switch (data.type) {\n      case \"ActiveEffect\": {\n        return await this._onDropActiveEffect(event, data);\n      }\n      case \"Actor\": {\n        return await this._onDropActor(event, data);\n      }\n      case \"Item\": {\n        return await this._onDropItem(event, data);\n      }\n\n      case \"Folder\": {\n        return await this._onDropFolder(event, data);\n      }\n      default: {\n        log.e(`Impossible type \"${data.type}\" in _onDrop.`);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles dropping an active effect onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<boolean|ActiveEffect>} The created effect or false if failed\n   */\n  async _onDropActiveEffect(event, data) {\n    const actor = this.reactive.document;\n    /* eslint-disable-next-line new-cap */\n    const effect = await ActiveEffect.implementation.fromDropData(data);\n\n    if (!actor.isOwner || !effect) {\n      return false;\n    }\n    if (actor.uuid === effect.parent.uuid) {\n      return false;\n    }\n    return ActiveEffect.create(effect.toObject(), { parent: actor });\n  }\n\n  /**\n   * Handles dropping an actor onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<boolean>} Whether the drop was successful\n   */\n  async _onDropActor(event, data) {\n    const actor = this.reactive.document;\n\n    if (!actor.isOwner) {\n      return false;\n    }\n  }\n\n  /**\n   * Handles dropping an item onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @param {boolean} ignoreValidation - Whether to ignore validation\n   * @return {Promise<boolean|Item>} The created item or false if the operation failed\n   */\n  async _onDropItem(event, data, ignoreValidation = false) {\n    const actor = this.reactive.document;\n\n    if (!actor.isOwner) {\n      ui.notifications.error(localize(\"Errors.NotOwner\"))\n      return false;\n    }\n\n    const droppedItem = await fromUuid(data.uuid);\n\n    //- job items are complicated and have their own logic\n    if(droppedItem.type === \"job\") {\n      return this._onDropJob(event, data);\n    }\n\n    //- effect items are not to be dropped directly on the actor\n    if (droppedItem.type === \"effect\") {\n      ui.notifications.error(localize(\"Errors.EffectItemsNotAllowed\"))\n      return false;\n    }\n    \n    //- if equipment duplicate, increment quantity and return\n    const duplicate = actor.items.find(x => x.name == droppedItem.name);\n    if(duplicate) {\n      await duplicate.update({system: {quantity: duplicate.system.quantity + 1}})\n      ui.notifications.info(`Found matching item \"${duplicate.name}\" and incremented quantity.`)\n      return\n    }\n\n    const item = await Item.implementation.fromDropData(data);\n    const itemData = item.toObject();\n\n    // Handle item sorting within the same Actor\n    if (actor.uuid === item.parent?.uuid) {\n      return this._onSortItem(event, itemData);\n    }\n\n    // Create the owned item\n    return this._onDropItemCreate(itemData);\n  }\n\n  /**\n   * Handles dropping a folder onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<Array>} Array of created items\n   */\n  async _onDropFolder(event, data) {\n    const actor = this.reactive.document;\n\n    const folder = await Folder.implementation.fromDropData(data);\n    if (!folder && data.documentName !== \"Item\" && !actor.isOwner) {\n      return [];\n    }\n\n    if (folder.contents.length) {\n      for (const item of folder.contents) {\n        await this._onDropItem(event, item, true);\n      }\n    }\n  }\n\n  /**\n   * Handles dropping a job onto the sheet\n   * @param {DragEvent} event - The drop event\n   * @param {object} data - The dropped data\n   * @return {Promise<boolean|void>} Whether the drop was successful\n   */\n  async _onDropJob(event, data) {\n    const actor = this.reactive.document;\n\n    if (!actor.isOwner) {\n      return false;\n    }\n    \n    const job = await fromUuid(data.uuid);\n    const grants = job.system.grants;\n    const grantItems = [];\n    for (const grantObject of grants.list) {\n      const grantItem = await fromUuid(grantObject.uuid);\n      if(!actor.items.some(x => x.name === grantItem.name)) {\n        grantItems.push(grantItem);\n      }\n    }\n    await actor.createEmbeddedDocuments(\"Item\", grantItems);\n    await actor.update({\n      system: {\n        job: {\n          uuid: job.uuid,\n          name: job.name,\n          grants: grants.list,\n          level: job.system.level,\n          role: job.system.role,\n          img: job.img\n        }\n      }\n    });\n  }\n\n  /**\n   * Creates new items from dropped data\n   * @param {object|Array} itemData - The item data to create\n   * @return {Promise<void>} Returns a promise that resolves when the items have been created\n   */\n  async _onDropItemCreate(itemData) {\n    itemData = itemData instanceof Array ? itemData : [itemData];\n    const actor = this.reactive.document;\n    for (const v of itemData) {\n      await actor.createEmbeddedDocuments(\"Item\", [v]);\n    }\n  }\n\n  /**\n   * Handles sorting items within the actor's inventory\n   * @param {Event} event - The triggering event\n   * @param {object} itemData - The item data being sorted\n   * @return {Promise<Item[]>} The updated items\n   */\n  _onSortItem(event, itemData) {\n    const actor = this.reactive.document;\n\n    // Get the drag source and drop target\n    const items = actor.items;\n    const source = items.get(itemData._id);\n    const dropTarget = event.target.closest(\"[data-item-id]\");\n    const target = items.get(dropTarget.dataset.itemId);\n\n    // Don't sort on yourself\n    if (source.id === target.id) {\n      return;\n    }\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings = [];\n    for (const el of dropTarget.parentElement.children) {\n      const siblingId = el.dataset.itemId;\n      if (siblingId && siblingId !== source.id) {\n        siblings.push(items.get(el.dataset.itemId));\n      }\n    }\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort(source, { target, siblings });\n    const updateData = sortUpdates.map((u) => {\n      const update = u.update;\n      update._id = u.target.data._id;\n      return update;\n    });\n\n    // Perform the update\n    return actor.updateEmbeddedDocuments(\"Item\", updateData);\n  }\n}\n\n","<script>\nimport { onMount } from 'svelte';\nimport ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n\nexport let sheet; //- avoid's build errors\nsheet; //- avoid's build errors\n\n</script>\n<template lang=\"pug\">\n\n.item-sheet.details.overflow.high\n  .flexcol.flex3.left.high\n      ProseMirror( attr=\"system.description\" )\n</template>\n<style lang='sass'>\n  @use '../../../../styles/_mixins' as mixins\n\n  .details\n    height: calc(100% - 0px)\n\n    +mixins.inset\n\n</style>","<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let options = void 0;\n  export let value = null;\n  export let disabled = false;\n\n  function handleChange(event) {\n    dispatch('change', { value: event.target.value });\n  }\n</script>\n\n<select {...$$restProps} on:change={handleChange} {disabled}>\n  <!-- Placeholder option when nothing is selected -->\n  <option value=\"\" disabled selected={!value}>Please select an option</option>\n  \n  {#if options && options.length}\n    {#each options as option}\n      <option value={option.value}>\n        {option.label}\n      </option>\n    {/each}\n  {/if}\n  <slot />\n</select>\n\n<style lang=\"sass\">\n  @use '../../../styles/_mixins' as mixins\n\n  select \n    +mixins.input\n\n    &:disabled \n      +mixins.input-disabled\n\n    &.short\n      height: inherit\n</style> ","<script>\nimport { localize } from \"~/src/helpers/util\";\nimport { getContext } from \"svelte\";\nimport { getDurationQualifierOptions, getDurationTypeOptions, getDurationOptions, getDurationUnits } from \"~/src/helpers/constants\"\nimport ArraySelect from \"~/src/components/atoms/controls/ArraySelect.svelte\";\nimport DocCheckbox from \"~/src/components/atoms/controls/DocCheckbox.svelte\";\n\nconst item = getContext(\"#doc\");\n\nconst durationTypeOptions = getDurationTypeOptions();\nconst durationQualifierOptions = getDurationQualifierOptions();\nconst durationOptions = getDurationOptions();\nconst durationUnitsOptions = getDurationUnits();\n\nasync function addDuration() {\n  const existingDurations = [...$item.system.durations || []];\n  existingDurations.push({\n    type: null,\n    amount: null,\n    units: \"rounds\",\n    qualifier: \"\"\n  });\n  await $item.update({ system: { durations: existingDurations } });\n  game.system.log.pink(`Added duration: ${existingDurations}`, $item);\n}\n\nfunction removeDuration(index) {\n  const existingDurations = [...$item.system.durations];\n  existingDurations.splice(index, 1);\n  $item.update({ system: { durations: existingDurations } });\n}\n\n$: durations = $item.system.durations;\n\nasync function updateDuration(index, field, value) {\n  const updatedDurations = [...durations];\n  updatedDurations[index] = { ...updatedDurations[index], [field]: value };\n  await $item.update({ \"system.durations\": updatedDurations });\n}\n</script>\n\n<template lang=\"pug\">\n.duration\n  .flexrow.justify-vertical\n    .flex4\n      h2.left Duration\n    .flex0.right\n      button.small.gold(on:click=\"{addDuration}\")\n        i.fas.fa-plus\n\n  +if('durations && durations.length > 0')\n    +each('durations as duration, i')\n      .subsection\n        .flexrow.justify-vertical.wide\n          .flex4\n            h3.left {localize(\"EFFECT.Duration.Title\")} {i + 1}\n          .flex0.right\n            button.small.gold(on:click!=\"{() => removeDuration(i)}\")\n              i.fas.fa-times\n        .flexrow.sheet-row.justify-vertical.wide.px-sm\n          .flex1\n            label(for=\"{`durationType${i}`}\") {localize('Types.Item.Types.Options.DurationType.label')}\n          .flex1\n            ArraySelect.left(\n              id=\"{`durationType${i}`}\" \n              options=\"{durationTypeOptions}\" \n              value=\"{duration.type}\"\n              on:change!=\"{(e) => updateDuration(i, 'type', e.detail.value)}\"\n            )\n        +if('duration.type === \"hasAmount\" || duration.type === \"hasQualifier\"')\n          .flexrow.sheet-row.justify-vertical.wide.px-sm.bg-black.pa-sm\n            .flex3.left\n              +if('duration.type === \"hasAmount\"')\n                label(for=\"{`durationAmount${i}`}\") {localize('Types.Item.Types.Options.DurationAmount.label')}\n              +if('duration.type === \"hasQualifier\"')\n                label(for=\"{`durationQualifier${i}`}\") {localize('Types.Item.Types.Options.DurationQualifier.label')}\n            .flex1.right Units\n          .flexrow.sheet-row.justify-vertical.wide.px-sm.border\n            +if('duration.type === \"hasAmount\"')\n              .flex3.left.nowrap\n                ArraySelect.left.wide(\n                  id=\"{`durationAmount${i}`}\"\n                  options=\"{durationOptions}\"\n                  value=\"{duration.amount}\"\n                  on:change!=\"{(e) => updateDuration(i, 'amount', e.detail.value)}\"\n                )\n            +if('duration.type === \"hasQualifier\"')\n              .flex2.left.nowrap\n                ArraySelect.left.wide(\n                  id=\"{`durationQualifier${i}`}\"\n                  options=\"{durationQualifierOptions}\"\n                  value=\"{duration.qualifier}\"\n                  on:change!=\"{(e) => updateDuration(i, 'qualifier', e.detail.value)}\"\n                )\n            +if('duration.type === \"hasAmount\" || (duration.qualifier && (duration.type === \"hasQualifier\" && duration.qualifier !== \"untilDamage\" && duration.qualifier !== \"nextAbility\"))')\n              .flex2.right\n                ArraySelect.right.wide(\n                  id=\"{`durationUnits${i}`}\"\n                  options=\"{durationUnitsOptions}\"\n                  value=\"{duration.units}\"\n                  on:change!=\"{(e) => updateDuration(i, 'units', e.detail.value)}\"\n                )\n\n</template>\n\n<style lang=\"sass\">\n@use '../../../styles/_mixins' as mixins\nlabel\n  color: var(--color-gold)\n.subsection\n  +mixins.inset(0.5rem)\n  margin-bottom: 0.5rem\nbutton.small\n  padding: 0 3px 0 5px\n  line-height: 1.7\n  min-height: 1.5rem\n  min-width: 1.5rem\n  display: flex\n  align-items: center\n  justify-content: center\n  i\n    font-size: 0.8rem\n</style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\n  import { \n    getRangeOptions, getDurationOptions, getDurationTypeOptions, getDurationUnits, getDurationQualifierOptions,\n    getLimitationOptions, getLimitationUnits, getAspectedOptions, \n    getTargetOptions, getHeavyshotOptions, getTriggerOptions, \n    getDirectHitOptions, getTypeOptions, getBaseEffectHealingTypeOptions\n  } from \"~/src/helpers/constants.js\";\n  import { getCROptions } from \"~/src/helpers/constants.js\";\n  import { PCModel } from \"~/src/models/actors/PC.js\";\n  import { getDefaultStatusEffects } from \"~/src/helpers/Conditions.js\";\n\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\n  import DocCheckbox from \"~/src/components/atoms/controls/DocCheckbox.svelte\";\n  import DurationComponent from \"~/src/components/molecules/Item/Duration.svelte\";\n  \n  const item = getContext(\"#doc\");\n\n  game.system.log.d(\"Details\", item.system);\n  game.system.log.d(\"PCModel\", PCModel.schema.fields.attributes.fields.primary.fields);\n  const { HTMLField, SchemaField, NumberField, StringField, FilePathField, ArrayField, BooleanField } =\n    foundry.data.fields;\n\n  const schemaFields = PCModel.schema.fields.attributes.fields.primary.fields;\n  const schemaFieldEntries = Object.entries(schemaFields);\n  const schemaFieldKeys = Object.keys(schemaFields).filter((key) => schemaFields[key] instanceof SchemaField);\n  const schemaFieldObjects = schemaFieldEntries\n    .filter(([key, value]) => value instanceof SchemaField)\n    .map(([key, value]) => ({ key, value }));\n\n  const CROptions = getCROptions();\n  const limitationOptions = getLimitationOptions();\n  const limitationUnitsOptions = getLimitationUnits();\n  const durationOptions = getDurationOptions();\n  const durationUnitsOptions = getDurationUnits();\n  const rangeOptions = getRangeOptions();\n  const heavyshotOptions = getHeavyshotOptions();\n  const triggerOptions = getTriggerOptions();\n  const targetOptions = getTargetOptions();\n  const aspectedOptions = getAspectedOptions();\n  const typeOptions = getTypeOptions();\n  const directHitConditionOptions = getDefaultStatusEffects().map((effect) => ({ value: effect.id, label: effect.name }));\n  const baseEffectHealingTypeOptions = getBaseEffectHealingTypeOptions();\n  const durationQualifierOptions = getDurationQualifierOptions();\n  const durationTypeOptions = getDurationTypeOptions();\n  const directHitOptions = getDirectHitOptions();\n\n  const costOptions = [\n    { value: 1, label: localize(\"Types.Item.Types.Options.Cost.1\") },\n    { value: 2, label: localize(\"Types.Item.Types.Options.Cost.2\") },\n    { value: 3, label: localize(\"Types.Item.Types.Options.Cost.3\") },\n    { value: 4, label: localize(\"Types.Item.Types.Options.Cost.4\") },\n  ];\n\n  console.log(schemaFieldObjects);\n\n  $: checkOptions = [\n    ...schemaFieldKeys.map((key) => ({ value: key, label: key.toUpperCase() })),\n    { value: \"critical\", label: localize(\"Types.Item.Types.Options.Check.critical\") }\n  ];\n  $: if(!$item.system.hasTrigger) {\n    $item.update({system: {trigger: null}})\n  }\n\n</script>\n\n<template lang=\"pug\">\n  .item-sheet.details.overflow.wide\n    .flexcol.flex3.left.high.wide\n      h3.left {localize(\"General\")}\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"type\") {localize(\"Type\")}\n        .flex4.right.wide\n          DocSelect.wide.right(id=\"type\" name=\"type\" type=\"number\" options=\"{typeOptions}\" valuePath=\"system.type\")\n      \n\n      .flexrow.justify-vertical\n        .flex4 \n          +if(\"$item.system.hasBaseEffect\")\n            h2.left {localize(\"Types.Item.Types.action.BaseEffect\")}\n            +else\n              h3.left {localize(\"Types.Item.Types.action.BaseEffect\")}\n        \n        .flex0.right\n          DocCheckbox( name=\"hasBaseEffect\" valuePath=\"system.hasBaseEffect\")\n      +if(\"$item.system.hasBaseEffect\")\n        .subsection\n          .flexrow.justify-vertical\n            .flex4\n              h3.left {localize(\"Types.Item.Types.action.BaseEffectBarrier\")}\n            .flex0.right\n              DocCheckbox( name=\"hasBaseEffectBarrier\" valuePath=\"system.hasBaseEffectBarrier\")\n          +if(\"$item.system.hasBaseEffectBarrier\")\n            .flexrow.sheet-row.justify-vertical.px-sm\n              .flex3\n                label(for=\"baseEffectBP\") {localize(\"Types.Actor.Points.BP.Label\")}\n              .flex2.right\n                DocInput(id=\"baseEffectBP\" name=\"baseEffectBP\" valuePath=\"system.baseEffectBP\")\n          .flexrow.justify-vertical\n            .flex4\n              h3.left {localize(\"Types.Item.Types.action.BaseEffectDamage\")}\n            .flex0.right\n              DocCheckbox( name=\"hasBaseEffectDamage\" valuePath=\"system.hasBaseEffectDamage\")\n          +if(\"$item.system.hasBaseEffectDamage\")\n            .flexrow.sheet-row.justify-vertical.px-sm\n              .flex3\n                label(for=\"baseEffectDamage\") {localize(\"Damage\")}\n              .flex2.right\n                DocInput(id=\"baseEffectDamage\" name=\"baseEffectDamage\" valuePath=\"system.baseEffectDamage\")\n\n          .flexrow.justify-vertical\n            .flex4\n              h3.left {localize(\"Types.Item.Types.action.BaseEffectHealing\")}\n            .flex0.right\n              DocCheckbox( name=\"hasBaseEffectHealing\" valuePath=\"system.hasBaseEffectHealing\")\n          +if(\"$item.system.hasBaseEffectHealing\")\n            .flexrow.sheet-row.justify-vertical.px-sm\n              .flex3\n                label(for=\"baseEffectHealing\") {localize(\"Type\")}\n              .flex4.right\n                DocSelect.wide.right(id=\"baseEffectHealingType\" name=\"baseEffectHealingType\" options=\"{baseEffectHealingTypeOptions}\" valuePath=\"system.baseEffectHealingType\")\n            .flexrow.sheet-row.justify-vertical.px-sm\n              .flex3\n                label(for=\"baseEffectHealing\") {localize(\"Amount\")}\n              .flex4.right\n                DocInput(id=\"baseEffectHealing\" name=\"baseEffectHealing\" valuePath=\"system.baseEffectHealing\")\n          \n\n          .flexrow.justify-vertical\n            .flex4\n              h3.left {localize(\"Types.Item.Types.action.BaseEffectRestoreMP\")}\n            .flex0.right\n              DocCheckbox( name=\"hasBaseEffectRestoreMP\" valuePath=\"system.hasBaseEffectRestoreMP\")\n          +if(\"$item.system.hasBaseEffectRestoreMP\")\n            .flexrow.sheet-row.justify-vertical.px-sm\n              .flex3\n                label(for=\"baseEffectRestoreMP\") {localize(\"Types.Item.Types.action.BaseEffectRestoreMP\")}\n              .flex2.right\n                DocInput(id=\"baseEffectRestoreMP\" name=\"baseEffectRestoreMP\" valuePath=\"system.baseEffectRestoreMP\")\n\n\n\n      \n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Types.Item.Target\")}\n        .flex0.right\n          DocCheckbox(id=\"hasTarget\" name=\"hasTarget\" valuePath=\"system.hasTarget\")\n\n      +if(\"$item.system.hasTarget\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex1\n            label(for=\"target\") {localize(\"Type\")}\n          .flex4.right.wide\n            DocSelect.wide.right(id=\"target\" name=\"target\" options=\"{targetOptions}\" valuePath=\"system.target\")\n      \n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Types.Item.Range\")}\n        .flex0.right\n          DocCheckbox( name=\"hasRanged\" valuePath=\"system.hasRanged\")\n      +if(\"$item.system.hasRanged\")\n\n        .flexrow.sheet-row.justify-vertical.wide\n            .flex1\n              label(for=\"rangeType\") {localize(\"Type\")}\n            .flex4.right.wide\n              DocSelect.wide.right.wide(id=\"rangeType\" name=\"rangeType\" options=\"{rangeOptions}\" valuePath=\"system.rangeType\")\n      .flexrow.justify-vertical\n        .flex4\n          h3.left Checks\n        .flex0.right\n          DocCheckbox( name=\"hasCheck\" valuePath=\"system.hasCheck\")\n\n      +if(\"$item.system.hasCheck\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex2\n            label(for=\"checkAttribute\") {localize(\"Check\")} {localize(\"Attribute\")}\n          .flex4.right.wide\n            DocSelect.wide.right(id=\"checkAttribute\" name=\"checkAttribute\" options=\"{checkOptions}\" valuePath=\"system.checkAttribute\")\n\n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"CR\")}\n        .flex0.right\n          DocCheckbox( name=\"hasCR\" valuePath=\"system.hasCR\")\n\n      +if(\"$item.system.hasCR\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex1\n            label(for=\"CR\") {localize(\"Type\")}\n          .flex4.right.wide\n            DocSelect.wide.right(id=\"CR\" name=\"CR\" options=\"{CROptions}\" valuePath=\"system.CR\")\n      \n\n\n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Limitation\")}\n        .flex0.right\n          DocCheckbox( name=\"hasLimitation\" valuePath=\"system.hasLimitation\")\n\n      +if(\"$item.system.hasLimitation\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex2.left\n            DocSelect.left(id=\"limitation\" name=\"limitation\" type=\"number\" options=\"{limitationOptions}\" valuePath=\"system.limitation\")\n          .flex2.right\n            DocSelect.right(id=\"limitationUnits\" name=\"limitationUnits\" options=\"{limitationUnitsOptions}\" valuePath=\"system.limitationUnits\")\n\n      DurationComponent\n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Aspected\")}\n        .flex0.right\n          DocCheckbox( name=\"hasAspected\" valuePath=\"system.hasAspected\")\n      +if(\"$item.system.hasAspected\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex1\n            label(for=\"aspected\") {localize(\"Aspected\")}\n          .flex4.right.wide\n            DocSelect.wide.right(id=\"aspected\" name=\"aspected\" type=\"number\" options=\"{aspectedOptions}\" valuePath=\"system.aspected\")\n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Types.Item.Trigger\")}\n        .flex0.right\n          DocCheckbox( name=\"hasTrigger\" valuePath=\"system.hasTrigger\")\n\n      +if(\"$item.system.hasTrigger\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex1\n            label(for=\"trigger\") {localize(\"Type\")}\n          .flex4.right.wide\n            DocSelect.wide.right(id=\"trigger\" name=\"trigger\" type=\"number\" options=\"{triggerOptions}\" valuePath=\"system.trigger\")\n    \n      \n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Cost\")}\n        .flex0.right\n          DocCheckbox( name=\"hasCostMP\" valuePath=\"system.hasCostMP\")\n\n      +if(\"$item.system.hasCostMP\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex1\n            label(for=\"cost\") {localize(\"Types.Actor.Points.MP.short\")}\n          .flex4.right.wide\n            DocSelect.wide.right(id=\"cost\" name=\"cost\" type=\"number\" options=\"{costOptions}\" valuePath=\"system.costMP\")\n      \n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"HeavierShot\")}\n        .flex0.right\n          DocCheckbox( name=\"hasHeavierShot\" valuePath=\"system.hasHeavierShot\")\n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Types.Item.Types.action.SplitDamage\")}\n        .flex0.right\n          DocCheckbox(name=\"hasSplitDamage\" valuePath=\"system.hasSplitDamage\")\n\n      .flexrow.justify-vertical\n        .flex4\n          h3.left {localize(\"Types.Item.Types.action.DirectHit\")}\n        .flex0.right\n          DocCheckbox( name=\"hasDirectHit\" valuePath=\"system.hasDirectHit\")\n\n      +if(\"$item.system.hasDirectHit\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex1\n            label(for=\"directHitType\") {localize(\"Type\")}\n          .flex4.right.wide\n            DocSelect.wide.right(id=\"directHitType\" name=\"directHitType\" options=\"{directHitOptions}\" valuePath=\"system.directHitType\")\n\n      +if(\"$item.system.directHitType === 'damage'\")\n        .flexrow.sheet-row.justify-vertical\n          .flex2\n            label(for=\"directHitDamage\") {localize(\"Damage\")}\n          .flex2.right\n            DocInput(id=\"directHitDamage\" name=\"directHitDamage\" valuePath=\"system.directHitDamage\")\n\n      +if(\"$item.system.directHitType === 'condition'\")\n        .flexrow.sheet-row.justify-vertical.wide\n          .flex2\n            label(for=\"directHitCondition\") {localize(\"Condition\")}\n          .flex2.right.wide\n            DocSelect.wide.right(id=\"directHitCondition\" name=\"directHitCondition\" options=\"{directHitConditionOptions}\" valuePath=\"system.directHitCondition\")\n\n      +if(\"$item.system.hasDirectHit\")\n        .flexcol.sheet-row.justify-vertical.high\n          .flex2\n            h3.left {localize(\"Types.Item.Types.action.DirectHit\")} {localize(\"Text\")} \n          .flex2.left.prose.high\n            ProseMirror( id=\"directHitText\" name=\"directHitText\" attr=\"system.directHitText\")\n\n\n</template>\n\n<style lang=\"sass\">\n    @use '../../../../../../styles/_mixins' as mixins\n    label\n      color: var(--color-highlight)\n    .details\n      max-height: calc(100% - 15px) //- prevents the scrolling area's content from being hidden below the fold\n\n      +mixins.inset(1rem)\n\n    .subsection\n      +mixins.inset(0.5rem)\n      margin-bottom: 0.5rem\n</style>\n","/**\n * Helper class for processing folder drops in the system\n */\nexport default class FolderProcessor {\n  /**\n   * Process a single item\n   * @param {Item} item - The item to process\n   * @param {Array} list - The list to add the item to\n   * @param {boolean} isJob - Whether this is being processed for a job\n   * @param {Object} options - Additional options\n   * @param {boolean} options.preventDuplicates - Whether to prevent duplicate items\n   * @param {boolean} options.warnOnCompendiumDrops - Whether to warn on non-compendium drops\n   * @param {Object} sourceContext - Context about where the item came from\n   * @return {Promise<boolean>} Whether the item was processed successfully\n   */\n  static async processItem(item, list, isJob, options = {}, sourceContext = {}) {\n    if (!item) return false;\n\n    const { preventDuplicates = true, warnOnCompendiumDrops = true } = options;\n\n    game.system.log.o(\"[FOLDER PROCESSOR] Processing item:\", { \n      item, \n      uuid: item.uuid,\n      type: item.type,\n      list: list.map(x => x.uuid),\n      sourceContext\n    });\n\n    // Skip if item already exists in list\n    const existingInList = list.some(existing => existing.uuid === item.uuid);\n    \n    if (preventDuplicates && existingInList) {\n      game.system.log.w(`${item.name} is already in the list.`);\n      return false;\n    }\n\n    // Check if it's a non-compendium item and warning is enabled\n    if (warnOnCompendiumDrops && !item.uuid.startsWith('Compendium.')) {\n      const confirmed = await Dialog.confirm({\n        title: \"Non-Compendium Item\",\n        content: `<p>Warning: You are adding an item from the game world rather than from a compendium. If this item is deleted from the game, it could cause inconsistencies.</p><p>Are you sure you want to add this item?</p>`,\n        yes: () => true,\n        no: () => false,\n        defaultYes: false\n      });\n      \n      if (!confirmed) return false;\n    }\n\n    // Check for shared limitation\n    game.system.log.o(\"[FOLDER PROCESSOR] Checking for shared limitation:\", { item, type: item.type, sharedLimitation: item.system.sharedLimitation });\n    if (item.type === 'action' && item.system.sharedLimitation?.value) {\n      if(!item.system.hasLimitation) {\n        ui.notifications.notify(`The dropped action item, ${item.name}, does not have a limitation.`, 'error');\n        return false;\n      }\n      if (item.system.limitation !== sourceContext.system.limitation || item.system.limitationUnits !== sourceContext.system.limitationUnits) {\n        ui.notifications.notify(`Dropped item, ${item.name}, has a limitation of \"${item.system.limitation} per ${item.system.limitationUnits}\", but ${sourceContext.name} has a limitation of \"${sourceContext.system.limitation} per ${sourceContext.system.limitationUnits}\". These do not match and thus cannot be shared.`, 'error');\n        game.system.log.w(\"[FOLDER PROCESSOR] Shared limitation mismatch:\", item.uuid);\n        return false;\n      }\n    }\n\n    // Add item to list\n    game.system.log.o(\"[FOLDER PROCESSOR] Adding item to list:\", { uuid: item.uuid });\n    list.push({ uuid: item.uuid });\n\n    // If this is a job and we're dropping an action with enabled traits\n    if (isJob && item.type === 'action' && item.system.enables?.value) {\n      // Get all enabled traits from the action\n      const enabledTraits = item.system.enables.list || [];\n      \n      game.system.log.o(\"[FOLDER PROCESSOR] Processing enabled traits:\", enabledTraits);\n      \n      // Add each enabled trait that isn't already in the list\n      for (const trait of enabledTraits) {\n        const traitExists = list.some(existing => existing.uuid === trait.uuid);\n        game.system.log.o(\"[FOLDER PROCESSOR] Checking trait:\", { trait, exists: traitExists });\n        \n        if (!traitExists) {\n          // Verify the trait exists before adding it\n          const traitItem = await fromUuid(trait.uuid);\n          if (traitItem) {\n            game.system.log.o(\"[FOLDER PROCESSOR] Adding verified trait to list:\", trait.uuid);\n            list.push({ uuid: trait.uuid });\n          } else {\n            game.system.log.w(\"[FOLDER PROCESSOR] Failed to find trait with UUID:\", {\n              uuid: trait.uuid,\n              sourceAction: {\n                name: item.name,\n                id: item._id,\n                uuid: item.uuid\n              },\n              sourceFolder: sourceContext,\n              invalidTrait: trait\n            });\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Process a folder and all its contents\n   * @param {Folder} folder - The folder to process\n   * @param {Array} list - The list to add items to\n   * @param {boolean} isJob - Whether this is being processed for a job\n   * @param {Object} options - Additional options\n   * @return {Promise<void>}\n   */\n  static async processFolder(folder, list, isJob, options = {}) {\n    const folderContext = {\n      name: folder.name,\n      id: folder._id,\n      uuid: folder.uuid\n    };\n\n    game.system.log.o(\"[FOLDER PROCESSOR] Processing folder:\", {\n      folder: folderContext,\n      contents: folder?.contents,\n      children: folder?.children,\n      entries: folder?.children?.[0]?.entries\n    });\n\n    if (!folder) return;\n\n    // Process each child folder\n    if (folder.children?.length) {\n      game.system.log.o(\"[FOLDER PROCESSOR] Processing child folders:\", folder.children);\n      for (const child of folder.children) {\n        game.system.log.o(\"[FOLDER PROCESSOR] Processing child:\", child);\n        \n        // Process entries in this child folder\n        if (child.entries?.length) {\n          game.system.log.o(\"[FOLDER PROCESSOR] Processing entries:\", child.entries);\n          for (const entry of child.entries) {\n            game.system.log.o(\"[FOLDER PROCESSOR] Processing entry:\", entry);\n            const item = await fromUuid(entry.uuid);\n            await this.processItem(item, list, isJob, options, folderContext);\n          }\n        }\n\n        // If this child has nested folders, process them\n        if (child.children?.length) {\n          const subFolder = await fromUuid(child.folder.uuid);\n          await this.processFolder(subFolder, list, isJob, options);\n        }\n      }\n    }\n\n    // Process any direct contents (for non-compendium folders)\n    if (folder.contents?.length) {\n      game.system.log.o(\"[FOLDER PROCESSOR] Processing folder contents:\", folder.contents);\n      for (const content of folder.contents) {\n        if (content.type === \"Folder\") {\n          game.system.log.o(\"[FOLDER PROCESSOR] Found nested folder:\", content);\n          const subFolder = await fromUuid(content.uuid);\n          await this.processFolder(subFolder, list, isJob, options);\n        } else {\n          game.system.log.o(\"[FOLDER PROCESSOR] Processing item from folder:\", content);\n          const item = await fromUuid(content.uuid);\n          await this.processItem(item, list, isJob, options, folderContext);\n        }\n      }\n    }\n  }\n\n  /**\n   * Groups items in a folder by type\n   * @param {Folder} folder - The folder to process\n   * @return {Promise<Object>} Object containing grouped items\n   */\n  static async groupFolderContentsByType(folder) {\n    const groups = {\n      job: [],\n      other: []\n    };\n\n    if (!folder?.contents) return groups;\n\n    for (const item of folder.contents) {\n      const resolvedItem = await fromUuid(item.uuid);\n      if (!resolvedItem) continue;\n\n      if (resolvedItem.type === 'job') {\n        groups.job.push(resolvedItem);\n      } else {\n        groups.other.push(resolvedItem);\n      }\n    }\n\n    game.system.log.o(\"[FOLDER PROCESSOR] Grouped items:\", {\n      jobs: groups.job.length,\n      other: groups.other.length\n    });\n\n    return groups;\n  }\n} ","<script>\nimport { onMount, getContext } from 'svelte';\nimport { SYSTEM_ID } from '~/src/helpers/constants';\nimport { ucfirst, localize } from '~/src/helpers/util';\nimport FolderProcessor from '~/src/helpers/FolderProcessor';\nimport DocCheckbox from '~/src/components/atoms/controls/DocCheckbox.svelte'\nimport Tag from \"~/src/components/atoms/Tag.svelte\";\n\nexport let title\nexport let key\nexport let valuePath = `system.${key}.value`;\nexport let additionalColumns = []; // Array of {header: string, path: string} objects\nexport let warnOnCompendiumDrops = true;\nexport let preventDuplicates = true;\n\nconst item = getContext(\"#doc\");\nlet localList = []\n\n$: checkboxValue = $item.system[key]?.value;\n$: if ($item.system[key]?.list) {\n  updateLocalList();\n}\n\nasync function updateLocalList() {\n  localList = [];\n  for (let listItem of $item.system[key].list) {\n    try {\n      const item = await fromUuid(listItem.uuid);\n      if (item) {\n        localList = [...localList, item];\n      } else {\n        // Add a placeholder for invalid items\n        localList = [...localList, {\n          name: \"Missing Item\",\n          type: \"unknown\",\n          img: \"icons/svg/hazard.svg\",\n          uuid: '',\n          isMissing: true\n        }];\n      }\n    } catch (error) {\n      console.error(error);\n      // Add a placeholder for errored items\n      localList = [...localList, {\n        name: \"Invalid Item\",\n        type: \"error\",\n        img: \"icons/svg/hazard.svg\",\n        uuid: listItem.uuid,\n        isMissing: true\n      }];\n    }\n  }\n}\n\nasync function onDrop(event) {\n  event.preventDefault();\n  const data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n  game.system.log.o(\"ItemBucket:onDrop\", \"Drop data:\", data);\n  \n  // Get current lists\n  const list = [...$item.system[key].list];\n  const isJob = $item.type === 'job';\n\n  game.system.log.o(\"ItemBucket:onDrop\", \"Current state:\", {\n    key,\n    list: list.map(x => x.uuid),\n    isJob\n  });\n\n  // Handle folder drops\n  if (data.type === \"Folder\") {\n    game.system.log.o(\"ItemBucket:onDrop\", \"Handling folder drop\");\n    const folder = await fromUuid(data.uuid);\n    game.system.log.o(\"ItemBucket:onDrop\", \"Retrieved folder:\", folder);\n\n    await FolderProcessor.processFolder(folder, list, isJob, {\n      preventDuplicates,\n      warnOnCompendiumDrops\n    }, $item);\n\n    game.system.log.o(\"ItemBucket:onDrop\", \"Final list after folder processing:\", list.map(x => x.uuid));\n    await $item.update({ [`system.${key}.list`]: list });\n    return;\n  }\n\n  // Handle single item drops\n  const droppedItem = await Item.implementation.fromDropData(data);\n  await FolderProcessor.processItem(droppedItem, list, isJob, {\n    preventDuplicates,\n    warnOnCompendiumDrops\n  }, $item);\n  \n  game.system.log.o(\"ItemBucket:onDrop\", \"Final list after item processing:\", list.map(x => x.uuid));\n  await $item.update({ [`system.${key}.list`]: list });\n}\n\nasync function deleteLink(index) {\n  const list = [...$item.system[key].list];\n  list.splice(index, 1);\n  await $item.update({ [`system.${key}.list`]: list });\n}\n\nasync function removeAllItems() {\n  const okToDelete = await Dialog.confirm({\n    title: localize(\"Types.Actor.Abilities.confirmDeleteAllTitle\"),\n    content: localize(\"Types.Actor.Abilities.confirmDeleteAll\"),\n    yes: async () => {  \n      await $item.update({ [`system.${key}.list`]: [] });\n    },\n    no: () => {},\n  });\n}\n\nfunction showItemSheet(item) {\n  item.sheet.render(true);\n}\n\n$: activeClass = checkboxValue ? 'active' : '';\n$: hasItems = localList.length > 0;\n\n</script>\n\n<template lang=\"pug\">\n  .item-bucket(class=\"{activeClass}\" role=\"application\" aria-dropeffect=\"link\" on:drop|preventDefault|stopPropagation=\"{onDrop}\")\n    .flexrow.sheet-row.justify-vertical\n      .flex3\n          h2.wide {title}\n      .flex0.right\n        DocCheckbox.right.wide(\n        {...$$restProps}\n        valuePath=\"{valuePath}\"\n      )\n    slot\n    +if(\"checkboxValue\")\n      table.standard-list.small-text.borderless\n        tr\n          th.img.expand(scope=\"col\")\n          th.left.expand.no-wrap(scope=\"col\") {localize(\"Name\")}\n          th.left.shrink(scope=\"col\") {localize(\"Type\")}\n          +each(\"additionalColumns as col\")\n            th.left.fixed(scope=\"col\") {col.header}\n          th.buttons\n            button.stealth\n        +each(\"localList as item, index\")\n          tr(class=\"{item.isMissing ? 'missing-item' : ''}\")\n            td.img\n              img.icon.nopointer(src=\"{item.img}\" alt=\"{item.name}\")\n            td.left.pointer.no-wrap(class=\"{item.isMissing ? 'missing-text' : ''}\" on:click!=\"{() => !item.isMissing && showItemSheet(item)}\")\n              span {item.isMissing ? `${item.name} (${item.uuid})` : item?.name}\n            td.left {ucfirst(item?.type)}\n            +each(\"additionalColumns as col\")\n              td.left {item.type === col.itemType ? ucfirst(item.system?.[col.path] || '') : ''}\n            td.buttons.right\n              button.stealth(on:click!=\"{() => deleteLink(index)}\")\n                i.left.fa.fa-trash.pointer\n    +if(\"checkboxValue && hasItems\")\n      button.mt-sm.glossy-button.gold-light.hover-shine(on:click=\"{removeAllItems}\") {localize(\"Instructions.RemoveAll\")}\n    +if(\"checkboxValue && localList.length === 0\")\n      .empty-list\n        p.empty-list-text {localize(\"Instructions.DropItemList\")}\n\n</template>\n\n<style lang=\"sass\">\n@use '../../styles/_mixins' as mixins\n\n.item-bucket\n  padding: 0.5em\n  margin-bottom: 1.5em\n  &.active\n    transition: background-color 0.3s ease\n    border: 1px solid rgba(0, 0, 0, 0.1)\n    border-radius: 3px\n    background-color: var(--color-lowlight)\n\n.missing-item\n  opacity: 0.6\n  background-color: rgba(255, 0, 0, 0.1) !important\n\n.missing-text\n  color: #ff6b6b\n  font-style: italic\n  cursor: not-allowed\n\n.empty-list\n  padding: 0.5em\n  margin-bottom: 1em\n  border: 3px dotted var(--ff-border-color)\n  border-radius: 10px\n  text-align: center\n  color: silver\n\ntable.standard-list\n  width: 100%\n  margin-top: 0.5em\n  color: white\n  tr\n    position: relative\n    td:first-child\n      border-bottom-left-radius: 7px\n      border-top-left-radius: 7px\n    &:nth-child(even)\n      background-color: var(--color-lowlight-dark)\n    &:not(:first-child):nth-child(odd)\n      background-color: var(--color-lowlight-dark)\n      td\n        border-top: 2px solid transparent\n        border-bottom: 2px solid transparent\n\n  th\n    color: wheat\n  th, td\n    padding: 0 0.3em\n    &.img\n      img\n        position: absolute\n        left: 0\n        top: -5px\n        width: 36px\n        height: 36px\n        object-fit: cover\n        border: none\n    &.buttons\n      width: 40px\n      text-align: right\n    &:not(:first-child)\n      border-bottom: 2px solid transparent\n\n.icon\n  width: 36px\n  height: 36px\n  object-fit: cover\n  border: none\n\n.buttons\n  button\n    opacity: 0.7\n    &:hover\n      opacity: 1\n</style>\n","<script>\n  import { getContext, onDestroy, onMount } from \"svelte\";\n  import { Timing } from \"#runtime/util\";\n  import { localize } from \"#runtime/util/i18n\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import Tag from \"../atoms/Tag.svelte\";\n  const doc = getContext(\"#doc\");\n\n  let newTag = \"\";\n  const addTagDebounce = Timing.debounce(addTag, 600);\n\n  async function addTag() {\n    const tags = [...$doc.system.tags];\n    \n    // Check for duplicate tag\n    if (tags.includes(newTag)) {\n      ui.notifications.error(localize(`${SYSTEM_CODE}.Errors.DuplicateTag`));\n      newTag = \"\"; // Clear the input if the tag already exists\n      return; // Exit the function to prevent adding the duplicate tag\n    }\n    if (!newTag.length) {\n      return; // Exit the function to prevent adding the duplicate tag\n    }\n\n    tags.push(newTag);\n    await $doc.update({ system: { tags } });\n    newTag = \"\";\n  }\n\n  $: newTag = newTag.toLowerCase().trim();\n\n  onMount(() => {\n  });\n  onDestroy(() => {\n  });\n\n</script>\n\n<template lang=\"pug\">\n.flexcol\n  input(bind:value=\"{newTag}\" on:input=\"{addTagDebounce}\" placeholder=\"Enter new tag\")\n.flexrow.gap-4.mt-sm.justify-vertical\n  +each(\"$doc.system.tags as tag\")\n    .flex0\n      Tag.badge.round({tag})\n</template>\n\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\n  import DocCheckbox from \"~/src/components/atoms/controls/DocCheckbox.svelte\";\n  import ItemBucket from \"~/src/components/molecules/ItemBucket.svelte\";\n  import TagInput from \"~/src/components/molecules/TagInput.svelte\";\n\n  const item = getContext(\"#doc\");\n\n</script>\n\n<template lang=\"pug\">\n\n.item-sheet.details.overflow.high\n  .flexcol\n    .flex3.left.high\n      ItemBucket(\n        title=\"{localize('Requires')}\"\n        key=\"requires\",\n      )\n      ItemBucket(\n        title=\"{localize('Removes')}\"\n        key=\"removes\",\n      )\n      ItemBucket(\n        title=\"{localize('Target')} {localize('Effects')}\",\n        key=\"grants\",\n      )\n      ItemBucket(\n        title=\"{localize('Source')} {localize('Effects')}\",\n        key=\"sourceGrants\",\n      )\n      +if(\"$item.system.hasLimitation && $item.system.limitation && $item.system.limitationUnits\")\n        ItemBucket(\n          title=\"{localize('Types.Item.SharedLimitation')}\",\n          key=\"sharedLimitation\",\n        )\n      ItemBucket(\n        title=\"{localize('Enabled')} {localize('Traits')}\",\n        key=\"enables\",\n      )\n      ItemBucket(\n        title=\"{localize('ProcTriggers')}\",\n        key=\"procs\",\n      )\n        +if(\"$item.system.procs.value\")\n          .flexrow.sheet-row.justify-vertical.wide.gold.px-sm\n            .flex1\n              label(for=\"procTrigger\") {localize(\"Threshold\")}\n            .flex4.right.wide\n              DocInput.wide.right(id=\"procTrigger\" name=\"procTrigger\" type=\"number\" valuePath=\"system.procTrigger\")\n      \n\n\n  .flexrow.sheet-row.justify-vertical.px-sm\n    .flex4\n      h2.left {localize(\"Tags\")}\n    .flex0.right\n      DocCheckbox( name=\"hasTags\" valuePath=\"system.hasTags\")\n  +if(\"$item.system.hasTags\")\n    .px-sm\n      TagInput\n    //- allow breathing space at the bottom of the scroll area\n  .pb-lg \n</template>\n\n\n<style lang=\"sass\">\n  @use '../../../../../../styles/_mixins' as mixins\n  :global(.item-bucket)\n    min-height: 30%\n  .details\n    max-height: calc(100% - 0px) //- prevents the scrolling area's content from being hidden below the fold\n    +mixins.inset\n</style>","<script>\n  import { localize } from \"#runtime/util/i18n\";\n  import { onMount, getContext } from \"svelte\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants.js\";\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  // import Effects from \"~/src/components/organisms/item/shared/EffectsTab.svelte\";\n  import Description from \"~/src/components/organisms/item/shared/DescriptionTab.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n  import Details from \"~/src/components/organisms/item/type/action/tabs/Details.svelte\";\n  import Links from \"~/src/components/organisms/item/type/action/tabs/Links.svelte\";\n\n  export let activeTab = \"description\";\n  // Tabs\n  const tabs = [\n    { label: localize(`${SYSTEM_CODE}.ChatText`), id: \"description\", component: Description },\n    { label: localize(`${SYSTEM_CODE}.Details`), id: \"details\", component: Details },\n    { label: localize(`${SYSTEM_CODE}.Links`), id: \"links\", component: Links },\n    // { label: localize(`${SYSTEM_CODE}.Effects`), id: \"effects\", component: Effects },\n  ];\n</script>\n\n<template lang=\"pug\">\n.flex1.portrait-frame\n  PortraitFrame.high.frame.wide\n    Tabs.tabs.small.wide( {tabs} bind:activeTab=\"{activeTab}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../styles/_mixins' as mixins\n\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n    height: calc(100% - 40px) //- prevents the frame from overlapping the bottom of the item application \n</style>\n","<script>\nimport { onMount } from 'svelte';\n</script>\n<template lang='pug'>\n  .item-header\n    \n</template>\n<style lang='sass'>\n  @use '../../../../../styles/_mixins' as mixins\n</style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\n  import { isParentActor} from \"~/src/helpers/util\";\n  import { getTypeOptions } from \"~/src/helpers/constants.js\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\n  import DocCheckbox from \"~/src/components/atoms/controls/DocCheckbox.svelte\";\n\n  import { PCModel } from \"~/src/models/actors/PC.js\";\n\n  const item = getContext(\"#doc\");\n  const typeOptions = getTypeOptions();\n\n\n  $: parentIsActor = isParentActor($item);\n\n</script>\n\n<template lang=\"pug\">\n  .item-sheet.details\n    .flexcol.flex3.left.high.wide\n      h3.left {localize(\"General\")}\n      .flexrow.sheet-row.justify-vertical.wide\n        .flex1\n          label(for=\"type\") {localize(\"Action\")} {localize(\"Type\")}\n        .flex4.right.wide\n          DocSelect.wide.right(id=\"type\" name=\"type\" type=\"number\" options=\"{typeOptions}\" valuePath=\"system.type\")\n      \n      +if(\"parentIsActor\")\n        .flexrow.sheet-row\n          .flex2\n            label(for=\"quantity\") {localize(\"Quantity\")}\n          .flex2.right\n            DocInput(id=\"quantity\" name=\"quantity\" valuePath=\"system.quantity\")\n\n\n\n</template>\n\n<style lang=\"sass\">\n    @use '../../../../../../styles/_mixins' as mixins\n    .details\n      +mixins.inset\n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { isParentActor} from \"~/src/helpers/util\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants.js\";\n  import { localize } from \"#runtime/util/i18n\";\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import Effects from \"~/src/components/organisms/item/shared/EffectsTab.svelte\";\n  import Description from \"~/src/components/organisms/item/shared/DescriptionTab.svelte\";\n  import Details from \"~/src/components/organisms/item/type/equipment/tabs/Details.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n\n  let activeTab = \"description\";\n  // Tabs\n  let tabs = [\n    { label: localize(`${SYSTEM_CODE}.Description`), id: \"description\", component: Description },\n    { label: localize(`${SYSTEM_CODE}.Details`), id: \"details\", component: Details },\n    { label: localize(`${SYSTEM_CODE}.Effects`), id: \"effects\", component: Effects }\n  ];\n\n  const item = getContext(\"#doc\");\n\n  onMount(async () => {\n    game.system.log.d(\"EquipmentTabs item\", item);\n  });\n\n  $: parentIsActor = isParentActor($item);\n  $: if (parentIsActor) {\n     tabs = [\n    { label: localize(`${SYSTEM_CODE}.Description`), id: \"description\", component: Description },\n    // { label: localize(`${SYSTEM_CODE}.Details`), id: \"details\", component: Details },\n    // { label: localize(`${SYSTEM_CODE}.Effects`), id: \"effects\", component: Effects },\n  ];\n  }\n</script>\n\n\n<template lang=\"pug\">\n\n.flex1.portrait-frame\n  PortraitFrame\n    Tabs( {tabs} bind:activeTab=\"{activeTab}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../styles/_mixins' as mixins\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n    height: calc(100% - 40px)\n\n</style>\n  ","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\nconst item = getContext(\"#doc\");\n\n</script>\n<template lang='pug'>\n\n.item-header\n  .flexcol.description-tab\n    .flexrow\n      .flexcol.flex1.left\n        ol.properties-list\n          li {localize(\"Role\")}: {$item?.system?.role?.capitalize()}\n          li {localize(\"Level\")}: {$item?.system?.level}\n    \n</template>\n<style lang='sass'>\n  @use '../../../../../styles/_mixins' as mixins\n\n  .description-tab\n    +mixins.itemSheetDescriptionTab\n</style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { localize } from \"#runtime/util/i18n\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\n  import DocCheckbox from \"~/src/components/atoms/controls/DocCheckbox.svelte\";\n  import ItemBucket from \"~/src/components/molecules/ItemBucket.svelte\";\n\n  const item = getContext(\"#doc\");\n  \n  const grantColumns = [{\n    header: \"\",\n    path: \"type\",\n    itemType: \"action\"\n  }];\n\n  const levelLabel = localize(`${SYSTEM_CODE}.Types.Item.Types.job.Level`);\n  const roleLabel = localize(`${SYSTEM_CODE}.Types.Item.Types.job.Role`);\n\n</script>\n\n<template lang=\"pug\">\n.item-sheet.details.overflow.high\n  .flexcol\n    .flex0.pa-sm\n      .flexrow\n        .flex1.left\n          label(for=\"level\")=levelLabel\n        .flex1\n          DocInput.wide(type=\"text\" name=\"level\" valuePath=\"system.level\")\n      .flexrow  \n        .flex1.left\n          label(for=\"role\")=roleLabel\n        .flex1\n          DocInput.wide(type=\"text\" name=\"role\" valuePath=\"system.role\")\n    .flex3.left.high\n      ItemBucket(title=\"Granted Abilities\" key=\"grants\" additionalColumns=grantColumns)\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../../styles/_mixins' as mixins\n\n  .details\n    max-height: calc(100% - 0px) //- prevents the scrolling area's content from being hidden below the fold\n    +mixins.inset\n</style>","<script>\n  import { localize } from \"#runtime/util/i18n\";\n  import { onMount, getContext } from \"svelte\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants.js\";\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import Effects from \"~/src/components/organisms/item/shared/EffectsTab.svelte\";\n  import Description from \"~/src/components/organisms/item/shared/DescriptionTab.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n  import Details from \"~/src/components/organisms/item/type/job/tabs/Details.svelte\";\n\n  export let activeTab = \"description\";\n  // Tabs\n  const tabs = [\n    { label: localize(`${SYSTEM_CODE}.Description`), id: \"description\", component: Description },\n    { label: localize(`${SYSTEM_CODE}.Details`), id: \"details\", component: Details },\n    // { label: localize(`${SYSTEM_CODE}.Effects`), id: \"effects\", component: Effects },\n  ];\n</script>\n\n<template lang=\"pug\">\n.flex1.portrait-frame\n  PortraitFrame.high.frame\n    Tabs.tabs.small( {tabs} bind:activeTab=\"{activeTab}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../styles/_mixins' as mixins\n\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n    height: calc(100% - 40px) //- prevents the frame from overlapping the bottom of the item application \n</style>\n","<script>\nimport { onMount } from 'svelte';\n</script>\n<template lang='pug'>\n  .item-header\n</template>\n<style lang='sass'>\n  @use '../../../../../styles/_mixins' as mixins\n</style>","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { localize } from \"~/src/helpers/util\";\n  import { getLimitationOptions, getLimitationUnits, getDamageDiceRerollOptions } from \"~/src/helpers/constants\"\n  import DocSelect from \"~/src/components/atoms/controls/DocSelect.svelte\";\n  import DocCheckbox from \"~/src/components/atoms/controls/DocCheckbox.svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import TagInput from \"~/src/components/molecules/TagInput.svelte\";\n  import DurationComponent from \"~/src/components/molecules/Item/Duration.svelte\";\n\n  const item = getContext(\"#doc\");\n\n  const limitationOptions = getLimitationOptions();\n  const limitationUnitsOptions = getLimitationUnits();\n  const damageDiceRerollOptions = getDamageDiceRerollOptions();\n\n  const typeOptions = [\n    { value: \"Buff\", label: localize(\"Types.Item.Types.Options.TraitType.Buff\") },\n    { value: \"Debuff\", label: localize(\"Types.Item.Types.Options.TraitType.Debuff\") },\n    { value: \"Trait\", label: localize(\"Types.Item.Types.Options.TraitType.Trait\") },\n  ];\n  const modOptions = [\n    { value: \"All Checks\", label: localize(\"Types.Item.Types.Options.ModType.Allchecks\") },\n    { value: \"All Damage\", label: localize(\"Types.Item.Types.Options.ModType.AllDamage\") },\n    { value: \"Bonus Dice\", label: localize(\"Types.Item.Types.Options.ModType.BonusDice\") },\n    { value: \"Movement\", label: localize(\"Types.Item.Types.Options.ModType.Movement\") },\n    { value: \"DOT\", label: localize(\"Types.Item.Types.Options.ModType.DOT\") },\n  ];\n  const operatorOptions = [\n    { value: \"+\", label: '+' },\n    { value: \"-\", label: '-' },\n  ];\n\n</script>\n\n<template lang=\"pug\">\n.item-sheet.details.overflow\n  .flexcol.flex3.left.high.bigbottom\n    h3.left {localize(\"General\")}\n    .flexrow.sheet-row.justify-vertical\n      .flex3\n        label(for=\"type\") {localize(\"Type\")}\n      .flex2.right\n        DocSelect.right(id=\"type\" name=\"type\" options=\"{typeOptions}\" valuePath=\"system.type\")\n      \n    .flexrow.justify-vertical\n      .flex4\n        h3.left {localize(\"Limitation\")}\n      .flex0.right\n        DocCheckbox( name=\"hasLimitation\" valuePath=\"system.hasLimitation\")\n    +if(\"$item.system.hasLimitation\")\n      .flexrow.sheet-row.justify-vertical\n        .flex2.left\n          DocSelect.left(id=\"limitation\" name=\"limitation\" options=\"{limitationOptions}\" valuePath=\"system.limitation\")\n        .flex2.right\n          DocSelect.right(id=\"limitationUnits\" name=\"limitationUnits\" options=\"{limitationUnitsOptions}\" valuePath=\"system.limitationUnits\")\n\n    DurationComponent\n      \n    .flexrow.justify-vertical\n      .flex4\n        h3.left {localize(\"Modifier\")}\n      .flex0.right\n        DocCheckbox( name=\"hasModifier\" valuePath=\"system.hasModifier\")\n    +if(\"$item.system.hasModifier\")\n      .flexrow.sheet-row.justify-vertical\n        .flex3.left\n          DocSelect.left(style=\"min-width: 4em;\" id=\"modType\" name=\"modType\" options=\"{modOptions}\" valuePath=\"system.modType\")\n        .flex1()\n          DocSelect(style=\"width: 2em;\" id=\"operator\" name=\"operator\" options=\"{operatorOptions}\" valuePath=\"system.operator\")\n        .flex3.right\n          DocInput.wide.right(id=\"modAmount\" name=\"modAmount\" valuePath=\"system.modAmount\")\n  \n\n    //- allow breathing space at the bottom of the scroll area\n    .flexrow.justify-vertical\n      .flex4\n        h3.left.tooltip(data-tooltip=\"{localize('Types.Item.Types.Options.SacrificesMovement.description')}\") {localize(\"Types.Item.Types.Options.SacrificesMovement.label\")}\n      .flex0.right\n        DocCheckbox(name=\"sacrificesMovement\" valuePath=\"system.sacrificesMovement\")\n      \n    .flexrow.justify-vertical\n      .flex4\n        h3.left {localize(\"Types.Item.Types.Options.DamageDiceReroll.label\")}\n      .flex0.right\n        DocCheckbox( name=\"hasDamageDiceReroll\" valuePath=\"system.hasDamageDiceReroll\")\n    +if(\"$item.system.hasDamageDiceReroll\")\n      .flexrow.sheet-row.justify-vertical\n\n        .flex3\n          label(for=\"damageDiceReroll\") {localize(\"Types.Item.Types.Options.DamageDiceReroll.label\")}\n        .flex2.right\n          DocSelect.left(style=\"min-width: 4em;\" id=\"damageDiceReroll\" name=\"damageDiceReroll\" options=\"{damageDiceRerollOptions}\" valuePath=\"system.damageDiceReroll\")\n  \n    .flexrow.sheet-row.justify-vertical\n      .flex4\n        h3.left {localize(\"Tags\")}\n      .flex0.right\n        DocCheckbox( name=\"hasTags\" valuePath=\"system.hasTags\")\n    +if(\"$item.system.hasTags\")\n      .px-sm\n        TagInput\n      .pb-lg \n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../../styles/_mixins' as mixins\n\n  .details\n    max-height: calc(100% - 15px) //- prevents the scrolling area's content from being hidden below the fold\n    +mixins.inset(1rem)\n</style>\n","<script>\n  import { localize } from \"#runtime/util/i18n\";\n  import { onMount, getContext } from \"svelte\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants.js\";\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import Effects from \"~/src/components/organisms/item/shared/EffectsTab.svelte\";\n  import Description from \"~/src/components/organisms/item/shared/DescriptionTab.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n  import Details from \"~/src/components/organisms/item/type/trait/tabs/Details.svelte\";\n  \n  export let activeTab = \"description\";\n  // Tabs\n  const tabs = [\n    { label: localize(`${SYSTEM_CODE}.Description`), id: \"description\", component: Description },\n    { label: localize(`${SYSTEM_CODE}.Details`), id: \"details\", component: Details },\n    { label: localize(`${SYSTEM_CODE}.Effects`), id: \"effects\", component: Effects },\n  ];\n\n</script>\n\n<template lang=\"pug\">\n.flex1.portrait-frame\n  PortraitFrame.high.frame\n    Tabs.tabs.small( {tabs} bind:activeTab=\"{activeTab}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../styles/_mixins' as mixins\n\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n    height: calc(100% - 40px)\n</style>\n  ","<script>\n  import { onMount } from \"svelte\";\n</script>\n\n<template lang=\"pug\">\n    .item-header\n\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../styles/_mixins' as mixins\n</style>\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import DurationComponent from \"~/src/components/molecules/Item/Duration.svelte\";\n  \n\n</script>\n\n<template lang=\"pug\">\n.item-sheet.details.overflow\n  DurationComponent\n</template>\n\n<style lang=\"sass\">\n    @use '../../../../../../styles/_mixins' as mixins\n\n    .details\n      max-height: calc(100% - 15px) //- prevents the scrolling area's content from being hidden below the fold\n      +mixins.inset(1rem)\n</style>\n","<script>\n  import { localize } from \"#runtime/util/i18n\";\n  import { onMount, getContext } from \"svelte\";\n  import { SYSTEM_CODE } from \"~/src/helpers/constants.js\";\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import ProseMirror from \"~/src/components/molecules/ProseMirror.svelte\";\n  import Effects from \"~/src/components/organisms/item/shared/EffectsTab.svelte\";\n  import Description from \"~/src/components/organisms/item/shared/DescriptionTab.svelte\";\n  import Details from \"~/src/components/organisms/item/type/effect/tabs/Details.svelte\";\n  import PortraitFrame from \"~/src/components/molecules/PortraitFrame.svelte\";\n\n  export let activeTab = \"description\";\n  // Tabs\n  const tabs = [\n    { label: localize(`${SYSTEM_CODE}.Description`), id: \"description\", component: Description },\n    { label: localize(`${SYSTEM_CODE}.Details`), id: \"details\", component: Details },\n    { label: localize(`${SYSTEM_CODE}.Effects`), id: \"effects\", component: Effects },\n  ];\n</script>\n\n<template lang=\"pug\">\n.flex1.portrait-frame\n  PortraitFrame.high.frame\n    Tabs.tabs.small( {tabs} bind:activeTab=\"{activeTab}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../../../../styles/_mixins' as mixins\n\n  .portrait-frame\n    margin-right: -2px\n    z-index: 2\n    height: calc(100% - 40px) //- prevents the frame from overlapping the bottom of the item application \n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  import { ApplicationShell } from \"#runtime/svelte/component/application\";\n  import { setContext, getContext, onMount } from \"svelte\";\n  import { ucfirst } from \"~/src/helpers/util.js\";\n  import ItemInput from \"~/src/components/atoms/item/ItemInput.svelte\";\n  import DocInput from \"~/src/components/atoms/controls/DocInput.svelte\";\n  import * as components from \"~/src/components/organisms/item/type\";\n\n  export let elementRoot; //- passed in by SvelteApplication\n  export let documentStore; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n  // export let document; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n\n  const headerMap = {\n    action: components.ActionHeader,\n    equipment: components.EquipmentHeader,\n    job: components.JobHeader,\n    trait: components.TraitHeader,\n    effect: components.EffectHeader\n  }\n  const tabMap = {\n    action: components.ActionTabs,\n    equipment: components.EquipmentTabs,\n    job: components.JobTabs,\n    trait: components.TraitTabs,\n    effect: components.EffectTabs\n  }\n\n  const application = getContext(\"#external\").application;\n  let activeTab = \"description\";\n\n  setContext(\"#doc\", documentStore);\n\n  $: item = $documentStore;\n\n  //- Profile Editor\n  let _filePickerInstance = {};\n\n  function _launchStandardProfileEditor(event) {\n    const current = $documentStore.img;\n    if (_filePickerInstance instanceof FilePicker && !_filePickerInstance?.rendered) {\n      _filePickerInstance.render(true);\n      return;\n    }\n    _filePickerInstance = new FilePicker({\n      type: \"image\",\n      current: current,\n      callback: (path) => {\n        $documentStore.update({ img: path });\n      },\n\n      top: application.position.top + 40,\n      left: application.position.left + 10,\n    });\n    return _filePickerInstance.browse();\n  }\n\n  //- provide Tokenizer support\n  function _editToken(event) {\n    _launchStandardProfileEditor(event);\n  }\n\n  //- @deprecated: not in use\n  // async function handleDrop(event) {\n  //   alert('2')\n  //   const data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n\n  //   let droppedItem;\n  //   let split = data.uuid.split(\".\");\n  //   let type = split[0];\n\n  //   if (type === \"Item\") {\n  //     console.log(\"handleDrop 1\");\n\n  //     droppedItem = await game.items.get(split[1]);\n  //   } else if (type === \"Compendium\") {\n  //     console.log(\"handleDrop 2\");\n  //     const compendiumName = `${split[1]}.${split[2]}`;\n  //     const pack = game.packs.get(compendiumName);\n  //     droppedItem = await pack.getDocument(split[4]);\n  //   }\n\n  //   if (droppedItem.type == \"effect\") {\n  //     console.log(\"handleDrop 3\");\n  //     console.log(\">>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<\");\n  //     console.log(droppedItem.effects);\n  //     const effects = Array.from(droppedItem.effects);\n  //     console.log(\"effects\", effects);\n\n  //     //- get the effects from the item\n  //     //- add the effect from the item to this item\n  //     await $documentStore?.createEmbeddedDocuments(\"ActiveEffect\", effects);\n  //     console.log(\"$documentStore\", $documentStore);\n  //   }\n  // }\n\n  onMount(() => {\n    game.system.log.d(\"ItemSheetShell mounted\", $documentStore);\n  });\n</script>\n\n<template lang=\"pug\">\n  ApplicationShell(bind:elementRoot)\n    .flexrow.gap-15.wide.high.no-overflow.nowrap\n      .flex1.profile-wrap\n        .flex0\n          button.stealth.profile(on:click=\"{_launchStandardProfileEditor}\")\n            img.profile(src=\"{$documentStore?.img}\" data-tooltip=\"{$documentStore?.name}\" alt=\"{$documentStore?.name}\")\n        .flexcol\n          table(style=\"text-align: center\")\n            tbody\n              tr\n                td\n                  div {game.i18n.localize(`TYPES.Item.${item.type}`)}\n          svelte:component(this=\"{headerMap[item.type]}\")\n      .flex4.wide.mr-sm.high\n        header.wide\n          .left.wide\n            DocInput.wide.widebutton.left(id=\"name\" valuePath=\"name\" placeholder=\"Item Name\" maxlength=\"40\" textClasses=\"wide bold burgundy\")\n        section.mt-sm.high\n          svelte:component(this=\"{tabMap[item.type]}\" bind:activeTab=\"{activeTab}\")\n\n\n</template>\n\n<style lang='sass'>\n  @use '../../styles/_mixins' as mixins\n\n  :global(.FFXIV.window-app .window-content)\n    display: block\n\n  .profile-wrap\n    min-width: 50px\n    max-width: 150px\n    /* position: relative */\n\n  // .portrait img\n  //   display: block\n  //   width: 100%\n  //   height: 100%\n  //   -o-object-fit: cover\n  //   object-fit: cover\n  //   -o-object-position: top\n  //   object-position: top\n\n  img\n    border: none\n    min-width: 50px\n\n</style>\n","import SvelteDocumentSheet from \"~/src/documents/DocumentSheet\";\nimport ItemSheetShell from \"./ItemSheetShell.svelte\";\nimport { SYSTEM_CODE, SYSTEM_ID } from \"~/src/helpers/constants\";\nimport { generateRandomElementId } from \"~/src/helpers/util\";\n\n/**\n * Base class for FFXIV item sheets\n * @extends {SvelteDocumentSheet}\n */\nexport default class FFXIVItemSheet extends SvelteDocumentSheet {\n\n  /**\n   * Default Application options\n   * @return {object} The default options for this application\n   */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: `${SYSTEM_ID}--item-sheet-${generateRandomElementId()}`,\n      classes: [SYSTEM_CODE],\n      title: game.i18n.localize(`${SYSTEM_CODE}.Types.Item.Label`),\n      width: 550,\n      height: 500,\n      minHeight: 180,\n      minWidth: 400,\n      svelte: {\n        class: ItemSheetShell,\n        target: document.body,\n      },\n    });\n  }\n\n}\n\n","import { SYSTEM_ID, getTypeOptions } from \"~/src/helpers/constants\"\nimport { TJSDocument }   from '@typhonjs-fvtt/runtime/svelte/store/fvtt/document';\n\n/**\n * Extended Combat Tracker class for Final Fantasy system\n * @extends {CombatTracker}\n */\nexport default class FFCombatTracker extends CombatTracker {\n\n  #combat;\n  #combatants;\n\n  /**\n   * Initialize the combat tracker\n   * @param {object} options - Configuration options\n   */\n  constructor(options)\n  {\n     super(options);\n\n     this.#combat = new TJSDocument();\n\n     // For the time being until the next TRL release don't add just a sort\n     // function as there is an edge case I'm fixing.\n     this.#combatants = this.#combat.embedded.create(Combatant, 'combatants');\n\n     // This will create a permanent listener to TJSDocument so the combatants\n     // embedded collection will always receive updates on change. This is safe\n     // in this context, but be wary of doing this adhoc.\n     this.#combat.subscribe(() => void 0);\n\n     this.#combatants.subscribe((values) =>{});\n  }\n\n  /** @inheritdoc */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: \"combat\",\n      template: `systems/${SYSTEM_ID}/src/extensions/templates/combat-tracker.html`,\n      title: \"COMBAT.SidebarTitle\",\n      scrollY: [\".directory-list\"]\n    });\n  }\n\n  /**\n   * Get additional data for the combat tracker\n   * @return {Promise<object>} The prepared data\n   */\n  async getData() {\n    const data = await super.getData();\n    for (const turn of data.turns) {\n      const currentCombatant = game.combat.combatants.get(turn.id);\n      const actor = currentCombatant.actor;\n      turn.actorId = actor.id;\n      if(turn.active) {\n        turn.hasActions = true;\n        turn.actions = '';\n        if (actor.system.actionState?.available) {\n          for (const action of actor.system.actionState.available.sort()) {\n            //- if action is custom, i.e. not in getTypeOptions, then use the class name: custom-action\n            if (!getTypeOptions().some(e => e.value === action)) {  \n              turn.actions += `<div data-tooltip=\"${game.i18n.localize(`FFXIV.Types.Item.Types.Options.Type.${action}`)}\" class=\"action-slot-badge custom-action\">${action[0]?.capitalize()}</div>`\n            } else {\n              turn.actions += `<div data-tooltip=\"${game.i18n.localize(`FFXIV.Types.Item.Types.Options.Type.${action}`)}\" class=\"action-slot-badge ${action}\">${action[0]?.capitalize()}</div>`\n            }\n          }\n        }\n        if (actor.system.actionState?.used) {\n          // game.system.log.d(\"FFCombatTracker getData actor.system.actionState.used\", actor.system.actionState.used)\n          for (const action of actor.system.actionState.used.sort()) {\n            turn.actions += `<div class=\"action-slot-badge used\">${action.type[0].capitalize()}</div>`\n          }\n        }\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Handle mouse down events on combatants\n   * @param {Event} event - The triggering mouse event\n   * @return {Promise<void>} Returns a promise that resolves when the mouse down event is handled\n   */\n  async _onCombatantMouseDown(event) {\n    event.preventDefault();\n    // event.stopPropagation(); //- this breaks the context menu, so removing it and the input click still works as expected\n\n    const li = event.currentTarget;\n    const combatant = this.viewed.combatants.get(li.dataset.combatantId);\n    const token = combatant.token;\n    if (!combatant.actor?.testUserPermission(game.user, \"OBSERVER\")) return;\n    const now = Date.now();\n\n    // Handle double-left click to open sheet\n    const dt = now - this._clickTime;\n    this._clickTime = now;\n    if (dt <= 250) {\n      //- #19 - prevent double click from opening sheet when clicking on the initiative field\n      if (event.target.type === undefined) {\n        return combatant.actor?.sheet.render(true);\n      }\n    }\n\n    // Control and pan to Token object\n    if (token?.object) {\n      token.object?.control({ releaseOthers: true });\n      return canvas.animatePan(token.object.center);\n    }\n  }\n\n  /**\n   * Get the class hierarchy names\n   * @return {Array<string>} Array of class names in the inheritance chain\n   */\n  getClassNames() {\n    const classNames = [];\n    let currentClass = this.constructor;\n\n    while (currentClass) {\n      classNames.push(currentClass.name);\n      currentClass = Object.getPrototypeOf(currentClass);\n    }\n\n    return classNames;\n  }\n\n}","export {};\n\ndeclare global {\n  interface AssumeHookRan {\n    ready: true;\n  }\n}\n\nexport default {\n  \"CR\": {\n    \"easy\": 5,\n    \"average\": 10,\n    \"hard\": 15,\n    \"very\": 20,\n    \"extreme\": 25,\n    \"impossible\": 30\n  },\n  \"size\": {\n    \"small\": 1,\n    \"medium\": 1,\n    \"large\": 2,\n    \"huge\": 3,\n    \"colossal\": 4\n  },\n  attributes: {\n    primary: [\n      \"str\",\n      \"dex\",\n      \"vit\",\n      \"int\",\n      \"mnd\"\n    ],\n    secondary: [\n      \"defence\",\n      \"magicDefence\",\n      \"vigilance\",\n      \"speed\",\n    ]\n  }\n}","import { SYSTEM_ID } from \"~/src/helpers/constants\";\nimport { log } from \"~/src/helpers/util\"\n\nimport { registerSettings } from \"~/src/settings\"\nimport { setupModels } from '~/src/config/models';\n\nimport FFActiveEffectSheet from \"~/src/components/applications/FFActiveEffectSheet\";\nimport FFXIVPCSheet from \"~/src/components/applications/PCSheet\";\nimport FFXIVNPCSheet from \"~/src/components/applications/NPCSheet\";\nimport FFXIVItemSheet from \"~/src/components/applications/ItemSheet\";\nimport FFCombatTracker from '~/src//extensions/combat-tracker.js'\nimport hooks from \"~/src/hooks\";\nimport systemconfig from \"~/src/helpers/systemconfig.ts\"\n\n\n/**\n * Hook that runs during system initialization\n * @return {void}\n*/\nexport default function init() {\n  \n  Hooks.once(\"init\", async (a, b, c) => {\n    game.FFXIV = game.system;\n    game.system.log = log;\n    game.system.log.level = log.VERBOSE;\n    game.system.log.i(`Starting System ${SYSTEM_ID}`);\n  \n    registerSettings();\n    setupModels();\n  \n    game.system.config = systemconfig;\n    game.system.log.d(game.system.id)\n    game.system.log.d(game.system.config)\n  \n\n    CONFIG.ui.combat = FFCombatTracker;\n    \n    //- Regiser Sheets\n    Actors.registerSheet(\"foundryvtt-final-fantasy\", FFXIVPCSheet, {\n      makeDefault: true,\n      types: [\"PC\"]\n    });\n    Actors.registerSheet(\"foundryvtt-final-fantasy\", FFXIVNPCSheet, {\n      makeDefault: true,\n      types: [\"NPC\"]\n    });\n    Items.registerSheet(\"foundryvtt-final-fantasy\", FFXIVItemSheet, {\n      makeDefault: true,\n    });\n\n    DocumentSheetConfig.registerSheet(ActiveEffect, \"foundryvtt-final-fantasy\", FFActiveEffectSheet, {\n      makeDefault: true,\n    });\n\n\n  \n    Handlebars.registerHelper(\"getSetting\", function (moduleName, settingKey) {\n      return game.settings.get(moduleName, settingKey);\n    });\n  \n    //- for testing without Svelte (handy when asking questions on Discord)\n    // Items.registerSheet(\"foundryvtt-final-fantasy\", ItemSheetStandard, {\n    //   makeDefault: true,\n    // });\n  \n    Hooks.call(\"FFXIV.initIsComplete\");\n  \n    // Override the default combat tracker behavior\n    hooks.renderCombatTracker();\n    \n  });\n}","// Import effects directly\nimport renderChatMessage from './renderChatMessage.js';\nimport renderCombatTracker from './renderCombatTracker.js';\nimport updateCombatant from './updateCombatant.js';\nimport canvasReady from './canvasReady.js';\nimport ready from './ready.js';\nimport init from './init.js';\n\n// Export effects as an object\nexport default {\n  renderChatMessage,\n  renderCombatTracker,\n  updateCombatant,\n  canvasReady,\n  ready,\n  init,\n};\n\nexport { \n  renderChatMessage, \n  renderCombatTracker,\n  updateCombatant,\n  canvasReady,\n  ready,\n  init,\n};\n\nconsole.log(\"[FFXIV] | [HOOKS] Setting up hooks\");","<script>\n  import { createEventDispatcher } from 'svelte';\n\n  export let maxStars = 5;\n  export let icon = 'fas fa-star';\n  export let value = 0;\n  export let label = '';\n  export let activeColor = '#ffd700';\n\n  let hoverValue = 0;\n  const dispatch = createEventDispatcher();\n\n  function handleMouseOver(index) {\n    hoverValue = index + 1;\n  }\n\n  function handleMouseLeave() {\n    hoverValue = 0;\n  }\n\n  function handleClick(index) {\n    value = index + 1;\n    dispatch('change', value);\n  }\n\n  $: stars = Array(maxStars).fill(0).map((_, i) => ({\n    active: hoverValue ? i < hoverValue : i < value\n  }));\n</script>\n\n<div class=\"star-rating\" on:mouseleave={handleMouseLeave} role=\"group\" aria-label={label || 'Rating'}>\n  {#if label}\n    <label for=\"star-rating-group\">{label}</label>\n  {/if}\n  <div class=\"stars\" id=\"star-rating-group\">\n    {#each stars as star, i}\n      <i\n        class=\"{icon} {star.active ? 'active' : ''}\"\n        on:mouseover={() => handleMouseOver(i)}\n        on:focus={() => handleMouseOver(i)}\n        on:click={() => handleClick(i)}\n        on:keydown={e => e.key === 'Enter' && handleClick(i)}\n        role=\"button\"\n        tabindex=\"0\"\n        style=\"--active-color: {activeColor}\"\n        aria-label=\"{i + 1} of {maxStars} stars\"\n      ></i>\n    {/each}\n  </div>\n</div>\n\n<style lang=\"sass\">\n  .star-rating\n    display: flex\n    flex-direction: column\n    gap: 0.5rem\n\n  .stars\n    display: flex\n    gap: 0.25rem\n\n  i\n    cursor: pointer\n    color: #666\n    transition: color 0.2s ease\n    font-size: 1.2rem\n\n    &.active\n      color: var(--active-color)\n\n    &:hover\n      transform: scale(1.1)\n</style> ","<script>\n  import StarRating from '~/src/components/molecules/StarRating.svelte';\n  import { localize } from '~/src/helpers/util';\n  \n  export let penalty = 0;\n  export let bonusDice = 0;\n  export let mutuallyExclusive = false;\n\n  // Make the state accessible to the parent dialog\n  $: if (window._modifierDialogComponent) {\n    window._modifierDialogComponent._state = { penalty, bonusDice };\n  }\n\n  function handlePenaltyChange(value) {\n    penalty = value;\n    if (mutuallyExclusive && value > 0) bonusDice = 0;\n  }\n\n  function handleBonusChange(value) {\n    bonusDice = value;\n    if (mutuallyExclusive && value > 0) penalty = 0;\n  }\n</script>\n\n<template lang=\"pug\">\nform.modifier-dialog\n  .flexrow.gap-15\n    .flex1\n      .flexcol\n        svelte:component(\n          this=\"{StarRating}\"\n          label=\"{localize('Modifiers.Penalty')}\"\n          value=\"{penalty}\"\n          on:change!=\"{e => handlePenaltyChange(e.detail)}\"\n          maxStars=\"{8}\"\n          icon=\"fas fa-burst\"\n          activeColor=\"var(--color-negative)\"\n        )\n    .flex1\n      .flexcol\n        svelte:component(\n          this=\"{StarRating}\"\n          label=\"{localize('Modifiers.Advantage')}\"\n          value=\"{bonusDice}\"\n          on:change!=\"{e => handleBonusChange(e.detail)}\"\n          maxStars=\"{8}\"\n          icon=\"fas fa-dice-d20\"\n          activeColor=\"var(--ff-border-color)\"\n        )\n</template>\n\n<style lang=\"sass\">\n  .modifier-dialog\n    padding: 1rem\n</style> ","import { localize } from \"~/src/helpers/util\";\nimport { SYSTEM_ID } from \"~/src/helpers/constants\";\nimport ModifierDialog from '~/src/components/organisms/dialogs/ModifierDialog.svelte';\n\n/**\n * Class to handle various checks and guards for rolling actions\n */\nexport default class RollGuards {\n  /** @type {Actor} The actor associated with these roll guards */\n  actor;\n\n  /** \n   * Shuttle object used to pass data from guards to roll calculator\n   * @type {Object} \n   */\n  shuttle = {\n    hasModifiers: {\n      extraModifiers: null\n    }\n  }\n\n  /**\n   * Create a new RollGuards instance\n   * @param {Actor} actor - The actor to check guards for\n   */\n  constructor(actor) {\n    this.actor = actor;\n  }\n\n  /**\n   * Dialog to allow extra modifiers to be added to the roll\n   * @param {Item} item - The item being rolled\n   * @return {Promise<Object>} The modifier data from the dialog\n   * @private\n   */\n  async _showModifierDialog(item) {\n    return new Promise((resolve) => {\n      new Dialog({\n        title: \"Extra Modifiers\",\n        content: `<div id=\"modifier-dialog-container\"></div>`,\n        buttons: {\n          roll: {\n            label: \"Roll\",\n            callback: (html) => {\n              resolve({\n                penalty: window._modifierDialogComponent?._state?.penalty || 0,\n                bonusDice: window._modifierDialogComponent?._state?.bonusDice || 0,\n                confirmed: true\n              });\n            }\n          },\n          cancel: {\n            label: \"Cancel\",\n            callback: () => resolve({ confirmed: false })\n          }\n        },\n        render: (html) => {\n          // Initialize our Svelte component after the dialog HTML is rendered\n          const container = html.find('#modifier-dialog-container')[0];\n          window._modifierDialogComponent = new ModifierDialog({\n            target: container,\n            props: {\n              mutuallyExclusive: false\n            }\n          });\n        },\n        close: () => {\n          window._modifierDialogComponent?.$destroy();\n          delete window._modifierDialogComponent;\n          resolve({ confirmed: false });\n        }\n      }).render(true);\n    });\n  }\n\n  /**\n   * Check and handle any modifiers for the roll\n   * @param {Item} item - The item being used\n   * @return {Promise<boolean>} Whether modifiers were successfully handled\n   */\n  async hasModifiers(item) {\n    if (!item.system.hasCR) {\n      return true;\n    }\n\n    // Show dialog for extra modifiers\n    this.shuttle.hasModifiers.extraModifiers = await this._showModifierDialog(item);\n\n    // If dialog was cancelled or closed, unmark effects for deletion\n    if (!this.shuttle.hasModifiers.extraModifiers?.confirmed) {\n      // Remove pending deletion flags from all effects\n      for (const effect of this.actor.effects) {\n        if (effect.getFlag(SYSTEM_ID, 'pendingDeletion')) {\n          await effect.unsetFlag(SYSTEM_ID, 'pendingDeletion');\n        }\n      }\n      return false;\n    }\n\n    // If confirmed, delete all effects marked for deletion\n    for (const effect of this.actor.effects) {\n      if (effect.getFlag(SYSTEM_ID, 'pendingDeletion')) {\n        await effect.delete();\n      }\n    }\n\n    Hooks.call('FFXIV.processTargetRollAdditionalModifiers', { item, extraModifiers: this.shuttle.hasModifiers.extraModifiers, actor: this.actor });\n    return true;\n  }\n\n}","import { writable } from 'svelte/store';\nimport { SYSTEM_ID } from '~/src/helpers/constants';\n\n/**\n * Possible Values for rollMode:\n * rollMode: \"roll\" (Public Roll):\n * The message or roll result is visible to everyone in the game.\n * rollMode: \"gmroll\" (GM Roll):\n * The roll result is only visible to the GM and the player who made the roll.\n * rollMode: \"blindroll\" (Blind Roll):\n * The roll result is only visible to the GM. The player who made the roll and other players do not see the result.\n * rollMode: \"selfroll\" (Self Roll):\n * The roll result is only visible to the player who made the roll. The GM and other players do not see the result.\n * rollMode: \"private\" (Private Roll):\n * Deprecated in later versions of Foundry VTT, this mode used to represent a private roll visible only to the GM.\n */\n\n/**\n * Class to handle roll calculations and modifiers\n */\nexport default class RollCalc {\n  /**\n   * Creates a new RollCalc instance\n   * @param {object} params - The parameters for the roll calculation\n   */\n  constructor(params) {\n    this.params = params;\n    this.store = writable({});\n    this.subscribe = this.store.subscribe;\n    this.set = this.store.set;\n    this.update = this.store.update;\n    this.RG = new CONFIG.FFXIV.RollGuards(this.params.actor);\n  }\n\n  /**\n   * Send the roll to chat\n   * @return {Promise<void>} Returns a promise that resolves when the message is sent\n   */\n  async send() {\n    if (this.params.rollType) {\n      let message = await this[this.params.rollType](this.params);\n      if (message === false) return;\n      message.sound = 'sounds/dice.wav';\n      message.rollType = this.params.rollType;\n      message.applied = false;\n      message = Object.assign({}, this.message, message);\n      await this.createChatMessage(message);\n    }\n  }\n\n  /**\n   * Perform a dice roll\n   * @param {number} die - The die size\n   * @param {number} noOfDice - Number of dice to roll\n   * @param {number} modifier - Roll modifier\n   * @param {string} keep - Keep modifier\n   * @return {Promise<object>} Returns a promise that resolves with the roll result\n   */\n  async roll(die=4, noOfDice = 1, modifier = 0, keep = '') {\n    const rollString = `max(${noOfDice}d${die}${keep}${modifier === 0 ? '' : modifier > 0 ? '+' + modifier : modifier},1)`;\n    const roll = new Roll(rollString);\n\n    if (game.version < 12) {\n      await roll.roll({ async: true });\n    } else {\n      await roll.roll();\n    }\n\n    if (game.modules.get('dice-so-nice')?.active) {\n      await game.dice3d.showForRoll(roll);\n    }\n    return { roll, die, noOfDice, error: false };\n  }\n\n  /**\n   * Play a sound for the message\n   * @param {string} soundPath - Path to the sound file\n   * @return {void} Nothing\n   */\n  playMessageSound(soundPath) {\n    const customSound = game.settings.get(SYSTEM_ID, 'chatMessageSound').trim();\n    if(!soundPath && customSound !== '') {\n      soundPath = customSound;\n    }\n    if(soundPath) {\n      foundry.audio.AudioHelper.play({ src: soundPath, volume: 1, autoplay: true, loop: false });\n    }\n  }\n\n  /**\n   * Create a chat message for the roll\n   * @param {object} props - The message properties\n   * @return {Promise<void>} Returns a promise that resolves when the message is created\n   */\n  async createChatMessage(props) {\n    const data = { ...props };\n    const item = props.Item ? props.Item : fromUuidSync(props.itemUuid);\n    const actor = fromUuidSync(props.actorUuid);\n    \n    if (!item) {\n      ui.notifications.error('Item cannot be used from a compendium Actor.');\n      return;\n    }\n    \n    if (!actor) {\n      ui.notifications.error('Actor not found');\n      return;\n    }\n\n    await ChatMessage.create({\n      user: game.user.id,\n      flags: { [SYSTEM_ID]: { data } },\n      speaker: game.settings.get(SYSTEM_ID,'chatMessageSenderIsActorOwner') ? ChatMessage.getSpeaker({ actor: actor }) : null,\n    });\n    \n    this.playMessageSound();\n  }\n}","import { SYSTEM_ID } from \"~/src/helpers/constants\";\n\n/**\n * Handles all attribute-related operations\n */\nexport default class AttributeHandler {\n  /**\n   * @param {Actor} actor - The actor this handler is for\n   */\n  constructor(actor) {\n    this.actor = actor;\n  }\n\n  /**\n   * Handle an action ability\n   * @param {Object} [options={}] -  options\n   * @return {Promise<{success: boolean, message: ChatMessage|null}>} Returns result of action handling\n   */\n  async handle(options = {}) {\n    const { key, code } = options;\n    const attributeValue = this.actor.system.attributes[key][code].val;\n    const rollFormula = `1d20 + ${attributeValue}`;\n    const attributeName = game.i18n.localize(`FFXIV.Types.Actor.Types.PC.Attributes.${key}.${code}.Abbreviation`);\n    const roll = await new Roll(rollFormula).evaluate({ async: true });\n    const isCritical = roll.total === 20;\n    const messageData = {\n      speaker: game.settings.get(SYSTEM_ID, 'chatMessageSenderIsActorOwner') ? ChatMessage.getSpeaker({ actor: this.actor }) : null,\n      flavor: `${attributeName} ${game.i18n.localize('FFXIV.Check')}`,\n      type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n      roll,\n      flags: {\n        [SYSTEM_ID]: {\n          data: {\n            chatTemplate: \"AttributeRollChat\",\n            actor: {\n              _id: this.actor._id,\n              name: this.actor.name,\n              img: this.actor.img\n            },\n            flavor: `${attributeName} ${game.i18n.localize('FFXIV.Check')}`,\n            key: key,\n            code: code,\n            modifier: attributeValue,\n            isCritical\n          },\n          css: `attribute-roll ${isCritical ? 'crit' : ''}`\n        }\n      }\n    };\n    await roll.toMessage(messageData);\n  }\n}","import RollGuards from \"~/src/helpers/rolls/RollGuards.js\";\n\n/**\n * Handles all guard checks\n */\nexport default class GuardManager {\n  /**\n   * @param {Actor} actor - The actor this handler is for\n   * @param {RollGuards} rollGuards - The RollGuards instance to use for checks\n   */\n  constructor(actor) {\n    this.actor = actor;\n    this.RG = new RollGuards(actor);\n  }\n\n  /**\n   * Handle guards for an item\n   * @param {Item} item - The item to check guards for\n   * @param {Array<string>} guardMethodNames - Array of guard method names to check\n   * @return {Promise<boolean>} Returns true if all guards pass, false otherwise\n   */\n  async handleGuards(item, guardMethodNames) {\n    // game.system.log.o('[GUARDS] Starting guard checks for:', {\n    //   itemName: item.name,\n    //   guardMethodNames\n    // });\n\n    // Run guards sequentially, stop on first failure\n    for (const methodName of guardMethodNames) {\n      const guardMethod = this.RG[methodName];\n      if (!guardMethod) {\n        game.system.log.w(`[GUARD] Guard method ${methodName} not found`);\n        continue;\n      }\n\n      try {\n        // game.system.log.o(`[GUARD] Running guard: ${methodName}`);\n        const result = await guardMethod.call(this.RG, item);\n        // game.system.log.o(`[GUARD] ${methodName} result:`, result);\n        \n        if (!result) {\n          game.system.log.d(`[GUARD] ${methodName} check failed for ${item.name}`);\n          return false;\n        }\n      } catch (error) {\n        game.system.log.e(`[GUARD] Error in ${methodName} check:`, error);\n        return false;\n      }\n    }\n    // game.system.log.o('[GUARDS] All guards passed');\n    return true;\n  }\n} ","import { SYSTEM_ID } from \"~/src/helpers/constants.js\"\nimport RollCalc from \"./RollCalc.js\"\nimport AttributeHandler from \"./handlers/AttributeHandler.js\";\nimport EffectManager from \"./handlers/EffectManager.js\";\nimport GuardManager from \"./handlers/GuardManager.js\";\nimport DefaultChat from \"~/src/helpers/rolls/handlers/DefaultChatHandler.js\";\n\n\n/**\n * Extends RollCalc to handle actor-specific roll calculations\n * @extends {RollCalc}\n */\nexport default class RollCalcActor extends RollCalc {\n\n\n  constructor(params) {\n    super(params);\n    this.params = params;\n    this.AttributeHandler = new AttributeHandler(params.actor);\n    this.EffectManager = new EffectManager(params.actor);\n    this.GuardManager = new GuardManager(params.actor);\n    this.DefaultChat = new DefaultChat(params.actor);\n  }\n\n  /**\n   * @param {Item} item - The item to create a chat message for\n   */\n  defaultChat(item) {\n    this.DefaultChat.handle(item);\n  }\n\n  /**\n   * @param {Item} item - The equipment item\n   */\n  equipment(item) {\n    this.params.item = item;\n    ChatMessage.create({\n      user: game.user.id,\n      speaker: game.settings.get(SYSTEM_ID, 'chatMessageSenderIsActorOwner') ? ChatMessage.getSpeaker({ actor: this.params.actor }) : null,\n      flags: { [SYSTEM_ID]: { data: { ...this.params, chatTemplate: 'EquipmentChat' } } }\n    })\n  }\n\n  /**\n   * @param {string} key - The attribute key\n   * @param {string} code - The attribute code\n   */\n  attribute(key, code) {\n    this.AttributeHandler.handle({key, code});\n  }\n\n  /**\n   * @param {string} type - The type of ability\n   * @param {Item} item - The ability item\n   */\n  ability(type, item) {\n    console.log(\"[FFXIV] | [ABILITY CHAIN] Starting ability chain\", {\n      // Add relevant details\n    });\n    this._routeAbility(item);\n  }\n\n  /**\n   * @param {Item} item - The trait item\n   */\n  abilityTrait(item) {\n    this.defaultChat(item);\n  }\n\n  /**\n   * @param {Item} item - The action item\n   * @param {Object} [options={}] - Additional options\n   */\n  async abilityAction(item, options = {}) {\n    console.log(\"[FFXIV] | [ROLL CALC] abilityAction call stack:\", {\n      stack: new Error().stack,\n      itemName: item?.name,\n      options\n    });\n\n    try {\n      // Early return if guards fail\n      if (!(await this.GuardManager.handleGuards(item, [\n       'hasModifiers',  \n      ]))) {\n        return;\n      }\n\n      // Handle effects\n      await this.EffectManager.handleEffects(); //- e.g.\n\n      this.defaultChat(item);\n\n    } catch (error) {\n      game.system.log.e(\"Error in ability action\", error);\n      ui.notifications.error(game.i18n.format(\"FFXIV.Errors.AbilityActionFailed\", { target: this.params.actor.name }));\n    }\n  }\n\n  /**\n   * Route ability to appropriate handler\n   * @param {Item} item - The item to route\n   * @return {Promise<void>} Returns a promise that resolves when the ability has been routed and handled\n   */\n  _routeAbility(item) {\n    if (item.type === \"action\") {\n      this.abilityAction(item);\n    } else if (item.type === \"trait\") {\n      this.abilityTrait(item);\n    }\n  }\n}","import './styles/Main.sass';\n\n// Vite will handle styles in development mode automatically by injecting them into the document\n// No manual CSS injection needed\n\nimport EffectManager from \"~/src/helpers/rolls/handlers/EffectManager.js\";\nimport FFXIVActor from '~/src/extensions/actor.js'\nimport FFXIVItem from '~/src/extensions/item.js'\nimport FFActiveEffect from \"~/src/extensions/active-effect.js\"\nimport FFEffectModel from \"~/src/models/ActiveEffectModel.js\"\nimport FFToken from \"~/src/extensions/token.js\"\nimport FFCombat from './extensions/combat.js'\nimport FFCombatant from './extensions/combatant.js'\nimport hooks from \"~/src/hooks\";\nimport RollGuards from \"~/src/helpers/rolls/RollGuards\";\nimport RollCalcActor from \"~/src/helpers/rolls/RollCalcActor\";\nimport RollCalc from \"~/src/helpers/rolls/RollCalc\";\n\n/* eslint-disable-next-line no-unused-vars */\nimport { setupDSN } from \"~/src/helpers/dsnSetup.js\"; //- Dice-so-nice setup\n\n//- debug hooks\n// CONFIG.debug.hooks = true;\n\n\nCONFIG.FFXIV = {\n  RollGuards: RollGuards,\n  RollCalcActor: RollCalcActor,\n  RollCalc: RollCalc,\n  EffectManager: EffectManager\n}\n\n\n//- Foundry Class Extensions\nCONFIG.Actor.documentClass = FFXIVActor\nCONFIG.Item.documentClass = FFXIVItem\nCONFIG.Combat.documentClass = FFCombat\nCONFIG.Combatant.documentClass = FFCombatant\nCONFIG.Token.objectClass = FFToken\nCONFIG.ActiveEffect.documentClass = FFActiveEffect\nCONFIG.ActiveEffect.dataModels.base = FFEffectModel\n\n\nCONFIG.time.roundTime = 6;\n\n//- Set initiative dice\nCONFIG.Combat.initiative = {\n  formula: \"1d20 + (@attributes.primary.dex.val)\",\n};\n\n//- Foundry System Hooks\nhooks.init();\nhooks.ready();\nhooks.canvasReady(); //- custom token HUD and status effects\nhooks.renderCombatTracker();\nhooks.renderChatMessage();\nhooks.updateCombatant();\n\n\n"],"names":["StringField","ArrayField","BooleanField","now","element","text","hash","detach","linear","tick","update","init","instance","create_fragment","subscribe","run","document","log","localize","owner","create_if_block","ctx","tag","click_handler","create_if_block_3","create_if_block_2","create_if_block_1","create_if_block_4","dispatch","create_if_block_8","create_if_block_7","create_if_block_6","create_if_block_5","defense","Item","totalDamage","actor","ColourContrast","canvasReady","version","result","active","children","get","duration","ease","options","draggable","booleanStore","dragDefault","storeResizing","dontShowWelcome","promise","writable","HTMLField","SchemaField","NumberField","ObjectField","activeTab","cssVariables","Plugins.TJSKeyMaps","Plugins.TJSPasteUUID","content","attr","Duration","showItemSheet","editItem","i","Actor","RollCalc","items","applicationWindowHeaderIconsOnly","Attributes","Abilities","Effects","FFXIVActorSheet","item","Description","Details","components.ActionHeader","components.EquipmentHeader","components.JobHeader","components.TraitHeader","components.EffectHeader","components.ActionTabs","components.EquipmentTabs","components.JobTabs","components.TraitTabs","components.EffectTabs","FFXIVPCSheet","FFXIVNPCSheet","ready","DefaultChat","FFCombatant"],"mappings":"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","x_google_ignoreList":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,111,112,113,114,115,116,117,118,119]}